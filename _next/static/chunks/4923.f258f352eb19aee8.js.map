{"version":3,"file":"static/chunks/4923.f258f352eb19aee8.js","mappings":"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","sources":["webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/InfoLayout.tsx","webpack://_N_E/./components/chains/cosmos/dapps.config.ts","webpack://_N_E/./components/chains/cosmos/params.ts","webpack://_N_E/./components/chains/cosmos/rpc.ts","webpack://_N_E/./components/chains/cosmos/example.tsx","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/./components/ui/dialog.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","import { Card, CardContent, CardHeader } from './ui/card';\n\nexport type InfoLayoutProps = {\n  title?: string;\n  children?: React.ReactNode;\n};\n\nexport default function InfoLayout({ title, children }: InfoLayoutProps) {\n  return (\n    <Card>\n      {title && <CardHeader className=\"font-medium\">{title}</CardHeader>}\n      <CardContent className=\"flex flex-col flex-wrap gap-3 break-all\">{children}</CardContent>\n    </Card>\n  );\n}\n","export const dapps = [\n  {\n    name: 'Osmosis',\n    url: 'https://app.osmosis.zone/',\n  },\n  {\n    name: 'JunoSwap',\n    url: 'https://junoswap.com/',\n  },\n];\n","export const networks = [\n  {\n    name: 'Cosmos',\n    id: 'cosmoshub-4',\n    rest: 'https://lcd-cosmoshub.keplr.app',\n    denom: 'uatom',\n  },\n  {\n    name: 'Akash',\n    id: 'akashnet-2',\n    rest: 'https://lcd-akash.keplr.app',\n    denom: 'uakt',\n  },\n  {\n    name: 'Juno',\n    id: 'juno-1',\n    rest: 'https://lcd-juno.keplr.app',\n    denom: 'ujuno',\n  },\n  {\n    name: 'Crypto.org',\n    id: 'crypto-org-chain-mainnet-1',\n    rest: 'https://lcd-crypto-org.keplr.app',\n    denom: 'basecro',\n  },\n  {\n    name: 'Fetch.ai',\n    id: 'fetchhub-4',\n    rest: 'https://lcd-fetchhub.keplr.app',\n    denom: 'afet',\n  },\n  {\n    name: 'Osmosis',\n    id: 'osmosis-1',\n    rest: 'https://lcd-osmosis.keplr.app',\n    denom: 'uosmo',\n  },\n  {\n    name: 'Secret',\n    id: 'secret-4',\n    rest: 'https://lcd-secret.keplr.app',\n    denom: 'uscrt',\n  },\n  {\n    name: 'Celestia',\n    id: 'celestia',\n    rest: 'https://lcd-celestia.keplr.app',\n    denom: 'utia',\n  },\n];\n\nexport default {\n  enable: [\n    {\n      id: 'enable',\n      name: 'enable',\n      value: JSON.stringify('cosmoshub-4'),\n    },\n    {\n      id: 'enable-multiple',\n      name: 'enable multiple',\n      value: JSON.stringify(['cosmoshub-4', 'juno-1', 'osmosis-1']),\n    },\n  ],\n  signArbitrary: [\n    {\n      id: 'signArbitrary',\n      name: 'signArbitrary',\n      value: '010203',\n    },\n  ],\n  signAmino: (fromAddress: string, toAddress: string, denom: string) => [\n    {\n      id: 'signAmino-msgSend',\n      name: 'SignAmino MsgSend',\n      value: JSON.stringify({\n        fee: {\n          amount: [{ amount: '1', denom: denom }],\n          gas: '200000',\n        },\n        msgs: [\n          {\n            'type': 'cosmos-sdk/MsgSend',\n            'value': {\n              'from_address': fromAddress,\n              'to_address': toAddress,\n              'amount': [\n                {\n                  'amount': '1000',\n                  'denom': denom,\n                },\n              ],\n            },\n          },\n        ],\n        'memo': '',\n      }),\n    },\n    {\n      id: 'signAmino-executeContract',\n      name: 'SignAmino ExecuteContract',\n      value: JSON.stringify({\n        fee: {\n          amount: [{ amount: '1', denom: denom }],\n          gas: '200000',\n        },\n        msgs: [\n          {\n            'type': 'wasm/MsgExecuteContract',\n            'value': {\n              'from_address': fromAddress,\n              'contract': 'cw1qyqxw2ep3r3jyly4k2jlyj3lq3jly4k2jlyj3lq',\n              'msg': {\n                transfer: {\n                  recipient: toAddress,\n                  amount: '1000',\n                },\n              },\n              'funds': [],\n            },\n          },\n        ],\n        'memo': '',\n      }),\n    },\n  ],\n  signDirect_simple: (fromAddress: string, toAddress: string, denom: string) => [\n    {\n      id: 'signDirect-msgSend',\n      name: 'signDirect MsgSend',\n      value: JSON.stringify({\n        fee: {\n          amount: [{ amount: '1', denom: denom }],\n          gas: '200000',\n        },\n        msgs: [\n          {\n            'type': '/cosmos.bank.v1beta1.MsgSend',\n            'value': {\n              'from_address': fromAddress,\n              'to_address': toAddress,\n              'amount': [\n                {\n                  'amount': '1000',\n                  'denom': denom,\n                },\n              ],\n            },\n          },\n        ],\n        'memo': '',\n      }),\n    },\n    {\n      id: 'signDirect-executeContract',\n      name: 'signDirect ExecuteContract CwToken',\n      value: JSON.stringify({\n        fee: {\n          amount: [{ amount: '1', denom: denom }],\n          gas: '200000',\n        },\n        msgs: [\n          {\n            'type': '/cosmwasm.wasm.v1.MsgExecuteContract',\n            'value': {\n              'from_address': fromAddress,\n              'contract': 'cw1qyqxw2ep3r3jyly4k2jlyj3lq3jly4k2jlyj3lq',\n              'msg': {\n                transfer: {\n                  recipient: toAddress,\n                  amount: '1000',\n                },\n              },\n              'funds': [],\n            },\n          },\n        ],\n        'memo': '',\n      }),\n    },\n  ],\n  signDirect: (fromAddress: string, toAddress: string, denom: string) => [\n    {\n      id: 'signDirect-msgSend',\n      name: 'signDirect MsgSend',\n      value: JSON.stringify({\n        'chainId': 'bbn-test-5',\n        'signer': 'bbn1uxd7fqht3qgeg80g20q0hfv0cqh4rcqpwgmkvq',\n        'signDoc': {\n          'bodyBytes':\n            '0ae6060a2d2f626162796c6f6e2e6274637374616b696e672e76312e4d736743726561746542544344656c65676174696f6e12b4060a2a62626e31757864376671687433716765673830673230713068667630637168347263717077676d6b7671124508021241200110c948b9c573cc2499265b5e99e748cc32fd9a5ee17d3cf02365eef4b1fa964915c0193ba04f75a10f0b0d1afea76f6e7f378972be17d3bd7cfb2a7259201d1a20ead5c9942bc49655fc2234c55e9a61468bcd4ce599922a6bedf0eb3e5b9ee5322220d23c2c25e1fcf8fd1c21b9a402c19e2e309e531e45e92fb1e9805b6056b0cc762880f40330d086033a89010200000001a4876046ff402b8950373fed5952c6c14b88db57333d4a8e92be42a1b1e7fdba0100000000ffffffff0250c3000000000000225120700088b1166fa4c1a5e05a7677517eac01004f4343072fbff7b8d2dec576dc59c415880000000000225120773bdb0b0f631d71ae90465cb233b1c8285f327500516fb4072bfa8ddb3dd754000000004a7d0200000001dcb9294f16b86260a5833129d552faa3e75052d68a912bc7f8156bb74f5f281a0000000000ffffffff02c4090000000000001600145be12624d08a2b424095d7c07221c33450d14bf104a600000000000022512018fb8361aeff975f8b4a817c6b3050c7ee68d0d131991eae62a54b422577fc06000000005240fb9796c2433fb93ef2311b858bd792d3794b926d407e9088c737cef2ac32e890a594cc7f34fc2ea434226b72fbf6ecd4b48505039666159d195ab8f21fa525f958f007625e0200000001dcb9294f16b86260a5833129d552faa3e75052d68a912bc7f8156bb74f5f281a0000000000ffffffff0180bb00000000000022512041ce3c9f53d216681fc36d9d7e015076e1b0483bb8a5e557064205ece8dea368000000006880f702727d0200000001b4dfba7b6bf26c1ed08c8a4fd20f76001cac84226b92068834560711573c5dac0000000000ffffffff0260090000000000001600145be12624d08a2b424095d7c07221c33450d14bf1989e00000000000022512018fb8361aeff975f8b4a817c6b3050c7ee68d0d131991eae62a54b422577fc06000000007a4025917df4988fae03729bb92232749e84e3dbf87e6914726468b4efbcc59b6580984077e86a806cb24cefbe42ac89696558e83f81021ad6824c4e57bbec5f26d6',\n          'authInfoBytes':\n            '0a500a460a1f2f636f736d6f732e63727970746f2e736563703235366b312e5075624b657912230a21038563d76bd72b9f140992e4f6ac7248e95ab19552fcef8f5492e33ba3172b210912040a020801180312130a0d0a047562626e1205313234343310c1bf6c',\n          'chainId': 'bbn-test-5',\n          'accountNumber': '0',\n        },\n      }),\n    },\n  ],\n};\n","import type { AxiosInstance } from 'axios';\nimport Axios from 'axios';\n\nexport interface Publickey {\n  '@type': string;\n  key: string;\n}\n\nexport interface AccountInfo {\n  '@type': string;\n  address: string;\n  pub_key: Publickey;\n  account_number: string;\n  sequence: string;\n}\n\nexport class CosmosNodeClient {\n  public readonly axios: AxiosInstance;\n\n  constructor(baseURL: string) {\n    this.axios = Axios.create({\n      baseURL: baseURL.endsWith('/') ? baseURL.slice(0, -1) : baseURL,\n      timeout: 30 * 1000,\n    });\n  }\n\n  public async getAccountInfo(address: string): Promise<AccountInfo | null> {\n    const response = await this.axios.get<{ account: AccountInfo }>(\n      `/cosmos/auth/v1beta1/accounts/${address}`,\n    );\n\n    if (response.status === 404) {\n      return null;\n    }\n\n    return response.data.account;\n  }\n\n  public async encodeAmino(json: string): Promise<string | null> {\n    const jsonFormatted = JSON.stringify(JSON.parse(json));\n    const response = await this.axios.post<{ amino_binary: string }>(\n      `/cosmos/tx/v1beta1/encode/amino`,\n      {\n        amino_json: jsonFormatted,\n      }\n    );\n\n    if (response.status === 404) {\n      return null;\n    }\n\n    return response.data.amino_binary;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unnecessary-type-assertion, @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return */\nimport { dapps } from './dapps.config';\nimport ConnectButton from '../../../components/connect/ConnectButton';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { bytesToHex, hexToBytes } from '@noble/hashes/utils';\nimport { SignMode } from 'cosmjs-types/cosmos/tx/signing/v1beta1/signing';\nimport { get } from 'lodash-es';\n\nimport { MsgExecuteContract } from 'cosmjs-types/cosmwasm/wasm/v1/tx';\nimport Long from 'long';\nimport { MsgSend } from 'cosmjs-types/cosmos/bank/v1beta1/tx';\nimport { PubKey } from 'cosmjs-types/cosmos/crypto/ed25519/keys';\nimport { Any } from 'cosmjs-types/google/protobuf/any';\nimport { AuthInfo, Fee, SignerInfo, Tx, TxBody, TxRaw } from 'cosmjs-types/cosmos/tx/v1beta1/tx';\n\nimport { IProviderApi, IProviderInfo } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../../components/connect/WalletContext';\nimport type { IKnownWallet } from '../../../components/connect/types';\nimport DappList from '../../../components/DAppList';\nimport InfoLayout from '../../../components/InfoLayout';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '../../../components/ui/select';\nimport params, { networks } from './params';\nimport { CosmosNodeClient } from './rpc';\nimport { toast } from '../../ui/use-toast';\nimport { Textarea } from '../../ui/textarea';\n\nfunction removeNull(obj: any): any {\n  if (obj !== null && typeof obj === 'object') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    return Object.entries(obj)\n      .filter(([, v]) => v != null)\n      .reduce(\n        (acc, [k, v]) => ({\n          ...acc,\n          [k]: v === Object(v) && !Array.isArray(v) ? removeNull(v) : v,\n        }),\n        {},\n      );\n  }\n\n  return obj;\n}\n\nexport default function Example() {\n  const walletsRef = useRef<IProviderInfo[]>([\n    {\n      uuid: 'injected',\n      name: 'Injected Wallet',\n      inject: 'keplr',\n    },\n    {\n      uuid: 'injected-onekey',\n      name: 'Injected OneKey',\n      inject: '$onekey.cosmos',\n    },\n  ]);\n\n  const { provider, account } = useWallet<IProviderApi>();\n  const [nodeClient, setNodeClient] = useState<CosmosNodeClient | null>(null);\n\n  const [network, setNetwork] = useState<{\n    name: string;\n    id: string;\n    rest: string;\n    denom: string;\n  }>(networks[0]);\n\n  useEffect(() => {\n    if (network?.rest === '') return;\n    setNodeClient(new CosmosNodeClient(network.rest));\n  }, [network?.rest]);\n\n  const onConnectWallet = useCallback(\n    async (selectedWallet: IKnownWallet) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      const providerDetail = walletsRef.current?.find((w) => w.uuid === selectedWallet.id);\n      if (!providerDetail) {\n        return Promise.reject('Wallet not found');\n      }\n\n      const provider = get(window, providerDetail.inject) as IProviderApi | undefined;\n\n      if (!provider) {\n        toast({\n          title: 'Wallet not found',\n          description: 'Please install the wallet extension',\n        });\n        return;\n      }\n\n      console.log('connect network', network.id);\n\n      await provider?.enable(network.id);\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining\n      const { bech32Address, pubKey } = await provider?.getKey(network.id);\n\n      return {\n        provider,\n        address: bech32Address,\n        publicKey: bytesToHex(pubKey),\n      };\n    },\n    [network.id],\n  );\n\n  const onDisconnectWallet = useCallback(async () => {\n    if (provider) {\n      await provider?.disconnect();\n    }\n  }, [provider]);\n\n  return (\n    <>\n      <InfoLayout title=\"Base Info\">\n        <Select\n          defaultValue={network.id}\n          onValueChange={(id) => {\n            const net = networks.find((item) => item.id === id);\n            if (net) setNetwork(net);\n          }}\n        >\n          <SelectTrigger className=\"w-full\">\n            <SelectValue className=\"text-base font-medium\" placeholder=\"选择参数\" />\n          </SelectTrigger>\n          <SelectContent>\n            {networks.map((item) => {\n              return (\n                <SelectItem key={item.id} value={item.id} className=\"text-base font-medium\">\n                  {item.name}\n                </SelectItem>\n              );\n            })}\n          </SelectContent>\n        </Select>\n      </InfoLayout>\n\n      <ConnectButton<IProviderApi>\n        fetchWallets={() => {\n          return Promise.resolve(\n            walletsRef.current.map((wallet) => {\n              return {\n                id: wallet.uuid,\n                name: wallet.inject ? wallet.name : `${wallet.name}`,\n              };\n            }),\n          );\n        }}\n        onConnect={onConnectWallet}\n        onDisconnect={onDisconnectWallet}\n      />\n\n      <ApiGroup title=\"Basics\">\n        <ApiPayload\n          title=\"enable\"\n          description=\"enable\"\n          presupposeParams={params.enable}\n          onExecute={async (request: string) => {\n            const obj = JSON.parse(request);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const res = await provider?.enable(obj);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"getKey\"\n          description=\"获取账户权限\"\n          presupposeParams={[\n            {\n              id: 'getKey',\n              name: 'getKey',\n              value: network.id,\n            },\n          ]}\n          onExecute={async (request: string) => {\n            return await provider?.getKey(network.id);\n          }}\n        />\n        <ApiPayload\n          title=\"experimentalSuggestChain\"\n          description=\"获取账户权限\"\n          presupposeParams={[\n            {\n              id: 'experimentalSuggestChain',\n              name: 'experimentalSuggestChain',\n              value: network.id,\n            },\n          ]}\n          onExecute={async (request: string) => {\n            const res = await provider?.experimentalSuggestChain(network.id);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"getChainInfosWithoutEndpoints\"\n          description=\"获取链信息 (Keplr 私有方法)\"\n          disableRequestContent\n          onExecute={async () => {\n            // @ts-ignore\n            return await window.keplr?.getChainInfosWithoutEndpoints();\n          }}\n        />\n        <ApiPayload\n          title=\"getChainInfoWithoutEndpoints\"\n          description=\"根据 ID、获取链信息 (Keplr 私有方法)\"\n          disableRequestContent\n          presupposeParams={[\n            {\n              id: 'getChainInfoWithoutEndpoints',\n              name: 'getChainInfoWithoutEndpoints',\n              value: network.id,\n            },\n          ]}\n          onExecute={async (request: string) => {\n            // @ts-ignore\n            return await window.keplr?.getChainInfosWithoutEndpoints(request);\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Sign Message\">\n        <ApiPayload\n          title=\"signArbitrary\"\n          description=\"signArbitrary\"\n          presupposeParams={params.signArbitrary}\n          onExecute={async (request: string) => {\n            const res = await provider?.signArbitrary(network.id, account.address, request);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"verifyArbitrary\"\n          description=\"verifyArbitrary\"\n          presupposeParams={params.signArbitrary}\n          onExecute={async (request: string) => {\n            const res = await provider?.signArbitrary(network.id, account.address, request);\n            const verifyRes = await provider?.verifyArbitrary(\n              network.id,\n              account.address,\n              request,\n              res,\n            );\n            return JSON.stringify(verifyRes);\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Transfer\">\n        <ApiPayload\n          title=\"signAmino\"\n          description=\"signAmino\"\n          presupposeParams={params.signAmino(account?.address, account?.address, network.denom)}\n          onExecute={async (request: string) => {\n            if (!nodeClient) return JSON.stringify({ error: 'nodeClient is null' });\n            if (!account) return JSON.stringify({ error: 'account is null' });\n\n            const accountInfo = await nodeClient.getAccountInfo(account?.address);\n\n            const obj = JSON.parse(request);\n\n            const requestObj = {\n              chain_id: network.id,\n              account_number: accountInfo?.account_number,\n              sequence: accountInfo?.sequence,\n              fee: obj.fee,\n              memo: obj.memo,\n              msgs: obj.msgs,\n            };\n\n            return await provider?.signAmino(network.id, account.address, requestObj);\n          }}\n          onValidate={async (request: string, response: string) => {\n            return await nodeClient.encodeAmino(response);\n          }}\n        />\n        <ApiPayload\n          title=\"signDirect-simple\"\n          description=\"signDirect\"\n          presupposeParams={params.signDirect_simple(\n            account?.address,\n            account?.address,\n            network.denom,\n          )}\n          onExecute={async (request: string) => {\n            const accountInfo = await nodeClient.getAccountInfo(account?.address);\n\n            const obj = JSON.parse(request);\n\n            const pubKeyAny = Any.fromPartial({\n              typeUrl: accountInfo.pub_key['@type'],\n              value: Buffer.from(accountInfo.pub_key.key, 'base64'),\n            });\n\n            const msgs:\n              | {\n                  typeUrl: string;\n                  value: Uint8Array;\n                }[]\n              | undefined = obj.msgs?.map((msg: { type: string; value: any }) => {\n              const value = msg.value;\n              if (msg.type === '/cosmos.bank.v1beta1.MsgSend') {\n                return {\n                  typeUrl: '/cosmos.bank.v1beta1.MsgSend',\n                  value: MsgSend.encode(\n                    MsgSend.fromPartial({\n                      fromAddress: value.from_address,\n                      toAddress: value.to_address,\n                      amount: value.amount?.map((amount: any) => ({\n                        amount: amount.amount,\n                        denom: amount.denom,\n                      })),\n                    }),\n                  ).finish(),\n                };\n              } else if (msg.type === '/cosmwasm.wasm.v1.MsgExecuteContract') {\n                return {\n                  typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',\n                  value: MsgExecuteContract.encode(\n                    MsgExecuteContract.fromPartial({\n                      sender: value.sender,\n                      contract: value.contract,\n                      msg: Buffer.from(JSON.stringify(removeNull(value.msg))),\n                      funds: value.funds?.map((amount: any) => ({\n                        amount: amount.amount,\n                        denom: amount.denom,\n                      })),\n                    }),\n                  ).finish(),\n                };\n              }\n            });\n\n            if (!msgs) return JSON.stringify({ error: 'msgs is null' });\n\n            const bodyBytes = TxBody.encode(\n              TxBody.fromPartial({\n                messages: msgs?.map((msg) => ({\n                  typeUrl: msg.typeUrl,\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                  value: msg.value,\n                })),\n                memo: obj.memo,\n              }),\n            ).finish();\n\n            console.log('bodyBytes', bodyBytes);\n            const authInfoBytes = AuthInfo.encode({\n              signerInfos: [\n                SignerInfo.fromPartial({\n                  publicKey: pubKeyAny,\n                  modeInfo: {\n                    single: {\n                      mode: SignMode.SIGN_MODE_DIRECT,\n                    },\n                  },\n                  sequence: BigInt(accountInfo?.sequence),\n                }),\n              ],\n              fee: Fee.fromPartial({\n                amount: obj.fee.amount.map((amount: any) => ({\n                  amount: amount.amount,\n                  denom: amount.denom,\n                })),\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                gasLimit: BigInt(get<string>(obj, 'fee.gas', '0')),\n              }),\n            }).finish();\n\n            console.log('authInfoBytes', authInfoBytes);\n\n            const res = await provider?.signDirect(network.id, account.address, {\n              bodyBytes: bodyBytes,\n              authInfoBytes: authInfoBytes,\n              chainId: network.id,\n              accountNumber: Long.fromString(accountInfo?.account_number),\n            });\n            return res;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const tx = hexToBytes(response);\n            // @ts-expect-error\n            const res = await provider?.sendTx(network.id, tx, 'Sync');\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"signDirect-purity\"\n          description=\"signDirect 直接调用接口\"\n          presupposeParams={params.signDirect(account?.address, account?.address, network.denom)}\n          onExecute={async (request: string) => {\n            const obj = JSON.parse(request);\n            const signDoc = obj.signDoc;\n\n            const res = await provider?.signDirect(network.id, account.address, {\n              bodyBytes: Buffer.from(signDoc.bodyBytes, 'hex'),\n              authInfoBytes: Buffer.from(signDoc.authInfoBytes, 'hex'),\n              chainId: signDoc.chainId,\n              accountNumber: Long.fromString(signDoc.accountNumber),\n            });\n            return res;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const tx = hexToBytes(response);\n            // @ts-expect-error\n            const res = await provider?.sendTx(network.id, tx, 'Sync');\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"sendTx\"\n          description=\"sendTx\"\n          generateRequestFrom={() => {\n            return <Textarea name=\"tx\" placeholder=\"将 signDirect 的执行结果复制粘贴到这里\" />;\n          }}\n          // eslint-disable-next-line @typescript-eslint/require-await\n          onGenerateRequest={async (fromData: Record<string, any>) => {\n            const requestTx = JSON.parse(fromData?.['tx'] as string);\n\n            let encodeTx = '';\n            if (requestTx?.signed?.bodyBytes && requestTx?.signed?.authInfoBytes) {\n              // Direct sign\n              const bodyBytes = new Uint8Array(Buffer.from(requestTx?.signed?.bodyBytes));\n              const authInfoBytes = new Uint8Array(Buffer.from(requestTx?.signed?.authInfoBytes));\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n              const signatures = [Buffer.from(requestTx?.signature?.signature ?? '', 'base64')];\n\n              const txRaw = TxRaw.encode(\n                TxRaw.fromPartial({\n                  bodyBytes: bodyBytes,\n                  authInfoBytes: authInfoBytes,\n                  signatures,\n                }),\n              ).finish();\n              encodeTx = Buffer.from(txRaw).toString('hex');\n            } else {\n              // Amino sign\n              throw new Error('Not support generate amino Tx');\n            }\n\n            return encodeTx;\n          }}\n          onExecute={async (request: string) => {\n            const tx = hexToBytes(request);\n            // @ts-expect-error\n            const res = await provider?.sendTx(network.id, tx, 'Sync');\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[35%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":["__webpack_exports__","Z","dapps","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Card","jsx","CardTitle","className","CardContent","map","dapp","index","div","Link","href","url","legacyBehavior","a","name","InfoLayout","title","children","CardHeader","networks","id","rest","denom","params","enable","value","JSON","stringify","signArbitrary","signAmino","fromAddress","toAddress","fee","amount","gas","msgs","transfer","recipient","signDirect_simple","signDirect","CosmosNodeClient","getAccountInfo","address","response","axios","get","concat","status","data","account","encodeAmino","json","jsonFormatted","parse","post","amino_json","amino_binary","constructor","baseURL","Axios","create","endsWith","slice","timeout","Example","walletsRef","useRef","uuid","inject","provider","useWallet","nodeClient","setNodeClient","useState","network","setNetwork","useEffect","onConnectWallet","useCallback","selectedWallet","providerDetail","current","find","w","Promise","reject","window","toast","description","console","log","bech32Address","pubKey","getKey","publicKey","bytesToHex","onDisconnectWallet","disconnect","jsx_runtime","Fragment","Select","defaultValue","onValueChange","net","item","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","ConnectButton","fetchWallets","resolve","wallet","onConnect","onDisconnect","ApiGroup","ApiPayload","presupposeParams","onExecute","request","obj","res","experimentalSuggestChain","disableRequestContent","keplr","getChainInfosWithoutEndpoints","verifyRes","verifyArbitrary","error","accountInfo","requestObj","chain_id","account_number","sequence","memo","onValidate","pubKeyAny","Any","fromPartial","typeUrl","pub_key","Buffer","from","key","msg","type","MsgSend","encode","from_address","to_address","finish","MsgExecuteContract","sender","contract","removeNull","Object","entries","filter","v","reduce","acc","k","Array","isArray","funds","bodyBytes","TxBody","messages","authInfoBytes","AuthInfo","signerInfos","SignerInfo","modeInfo","single","mode","SignMode","SIGN_MODE_DIRECT","BigInt","Fee","gasLimit","chainId","accountNumber","Long","tx","hexToBytes","sendTx","signDoc","generateRequestFrom","Textarea","onGenerateRequest","fromData","requestTx","encodeTx","signed","Uint8Array","signatures","signature","txRaw","TxRaw","toString","DappList","accountInfoKeys","settings","useSettings","connectDialogRef","autoConnectedRef","wallets","setWallets","setProvider","setAccount","connectWallet","_provider","disconnectWallet","closeDialog","setTimeout","click","connectWalletWithDialog","options","length","directConnection","autoConnect","clearTimeout","Dialog","DialogTrigger","asChild","Button","onClick","DialogContent","DialogClose","ref","DialogHeader","DialogTitle","logo","img","alt","src","span","tags","tag","DialogDescription","target","variant","keys","DialogPrimitive","DialogPortal","DialogOverlay","React","props","cn","displayName","X"],"sourceRoot":""}