/* eslint-disable @typescript-eslint/no-unsafe-assignment */

import { parseChainId } from '../../utils';
import { NETWORKS_BY_CHAIN_ID } from '../contract/SampleContracts';

const UNISWAP_V2_ROUTER_2 = {
  'mainnet': '0x7a250d5630b4cf539739df2c5dacb4c659f2488d',
  'optimism': '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',
  'bsc': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',
  'polygon': '0xedf6066a2b290c185783862c7f4776a2c8077ad1',
  'base': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',
  'arbitrum': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',
  'avalanche': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',
};

const supportNetworkNames = Object.keys(UNISWAP_V2_ROUTER_2);

export default {
  sendTransaction: (from: string, to: string, chainId: string | undefined) => {
    const network =
      NETWORKS_BY_CHAIN_ID[parseChainId(chainId) as keyof typeof NETWORKS_BY_CHAIN_ID];
    if (!UNISWAP_V2_ROUTER_2[network as keyof typeof UNISWAP_V2_ROUTER_2]) {
      return [
        {
          'id': 'sendTransaction-uniswapV2-not-support',
          'name': 'Uniswap V2 不支持',
          'description': 'Uniswap V2 不支持',
          'value': `当前网络不支持，支持的网络为：${supportNetworkNames.join(',')}`,
        },
      ];
    }

    const contractAddress = UNISWAP_V2_ROUTER_2[network as keyof typeof UNISWAP_V2_ROUTER_2];

    return [
      {
        'id': 'uniswapV2-swapExactETHForTokens',
        'name': '0.0001 ETH -> USDC',
        'description': '测试 0.0001 ETH -> USDC',
        'value': JSON.stringify({
          from,
          to: contractAddress,
          data: '0x3593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000067a9d0a400000000000000000000000000000000000000000000000000000000000000040b080604000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002800000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000005af3107a40000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000005af3107a4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000000000060000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000027213e28d7fda5c57fe9e5dd923818dbccf71c4700000000000000000000000000000000000000000000000000000000000000190000000000000000000000000000000000000000000000000000000000000060000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000005618207d27d78f09f61a5d92190d58c453feb4b7000000000000000000000000000000000000000000000000000000000003cf120c',
          value: '0x5af3107a4000', // invalid value - expected int/hex value
        }),
      },
      {
        'id': 'uniswapV2-swapTokensForExactETH',
        'name': 'WALLY -> ETH',
        'description': '测试 WALLY -> ETH',
        'value': JSON.stringify({
          from,
          to: contractAddress,
          value: '0x0',
          data: '0x4a25d94a00000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000000bb833125b17c900000000000000000000000000000000000000000000000000000000000000a000000000000000000000000076f3f64cb3cD19debEE51436dF630a342B736C2400000000000000000000000000000000000000000000000000000000673f028e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000004f7d2d728ce137dd01ec63ef7b225805c7b54575000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',
        }),
      },
      {
        'id': 'uniswapV2-swapTokensForTokens',
        'name': 'USDT -> TEE',
        'description': '测试 USDT -> TEE',
        'value': JSON.stringify({
          from,
          to: contractAddress,
          value: '0x0',
          data: '0x8803dbee0000000000000000000000000000000000000000000000000000066724df1d800000000000000000000000000000000000000000000000000000000003c1bb1300000000000000000000000000000000000000000000000000000000000000a000000000000000000000000076f3f64cb3cD19debEE51436dF630a342B736C2400000000000000000000000000000000000000000000000000000000673f118f0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000009d09bcf1784ec43f025d3ee071e5b632679a01ba',
        }),
      },
      {
        'id': 'uniswapV2-swapExactETHForTokensSupportingFeeOnTransferTokens_0xb6f9de95',
        'name': 'ETH -> MAGA FeeOnTransferTokens',
        'description': '测试 ETH -> MAGA, 让 MAGA 承担手续费',
        'value': JSON.stringify({
          from,
          to: contractAddress,
          value: '0x5af3107a4000',
          data: '0xb6f9de950000000000000000000000000000000000000000000000000000f0f455510a61000000000000000000000000000000000000000000000000000000000000008000000000000000000000000076f3f64cb3cd19debee51436df630a342b736c240000000000000000000000000000000000000000000000000000019348c034940000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000d29da236dd4aac627346e1bba06a619e8c22d7c5',
        }),
      },
      {
        'id': 'uniswapV2-swapExactTokensForTokensSupportingFeeOnTransferTokens_0x5c11d795',
        'name': 'WETH -> MOODENG FeeOnTransferTokens',
        'description': '测试 WETH -> MOODENG, 让 MOODENG 承担手续费',
        'value': JSON.stringify({
          from,
          to: contractAddress,
          value: '0x5af3107a4000',
          data: '0x5c11d7950000000000000000000000000000000000000000000000000b1aefbfedabdc0000000000000000000000000000000000000000000000000000190fbc1daa2e9b00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000076f3f64cb3cd19debee51436df630a342b736c2400000000000000000000000000000000000000000000000000000000673da3620000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000028561b8a2360f463011c16b6cc0b0cbef8dbbcad',
        }),
      },
    ];
  },
};
