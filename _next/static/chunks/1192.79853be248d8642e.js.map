{"version":3,"file":"static/chunks/1192.79853be248d8642e.js","mappings":"sFAIA,IAAAA,EAAAC,EAJwB,OACbC,EAAQ,OAGnB,WAEAC,CAAAA,EAAAC,OAAA,CAAAJ,yBCFA,IAAAK,EAAAJ,EAJwB,OACbC,EAAQ,OAGnB,UAEAC,CAAAA,EAAAC,OAAA,CAAAC,yBCFA,IAAAC,EAAAL,EAJwB,OACbC,EAAQ,OAGnB,MAEAC,CAAAA,EAAAC,OAAA,CAAAE,yBCFA,IAAAC,EAAAN,EAJwB,OACbC,EAAQ,OAGnB,UAEAC,CAAAA,EAAAC,OAAA,CAAAG,wBCNA,IAAAC,EAAiBN,EAAQ,OACzBO,EAAmBP,EAAQ,MAgB3BC,CAAAA,EAAAC,OAAA,CAJA,SAAAM,CAAA,EACA,OAAAD,EAAAC,IAAAF,sBAAAA,EAAAE,EACA,yBCfA,IAAAF,EAAiBN,EAAQ,OACzBS,EAAeT,EAAQ,OACvBO,EAAmBP,EAAQ,OA8B3BU,EAAA,EACAA,CAAAA,CAAA,CAZA,wBAYA,CAAAA,CAAA,CAXA,wBAWA,CACAA,CAAA,CAXA,qBAWA,CAAAA,CAAA,CAVA,sBAUA,CACAA,CAAA,CAVA,sBAUA,CAAAA,CAAA,CATA,sBASA,CACAA,CAAA,CATA,6BASA,CAAAA,CAAA,CARA,uBAQA,CACAA,CAAA,CARA,uBAQA,IACAA,CAAA,CAjCA,qBAiCA,CAAAA,CAAA,CAhCA,iBAgCA,CACAA,CAAA,CApBA,uBAoBA,CAAAA,CAAA,CAhCA,mBAgCA,CACAA,CAAA,CApBA,oBAoBA,CAAAA,CAAA,CAhCA,gBAgCA,CACAA,CAAA,CAhCA,iBAgCA,CAAAA,CAAA,CA/BA,oBA+BA,CACAA,CAAA,CA/BA,eA+BA,CAAAA,CAAA,CA9BA,kBA8BA,CACAA,CAAA,CA9BA,kBA8BA,CAAAA,CAAA,CA7BA,kBA6BA,CACAA,CAAA,CA7BA,eA6BA,CAAAA,CAAA,CA5BA,kBA4BA,CACAA,CAAA,CA5BA,mBA4BA,IAcAT,EAAAC,OAAA,CALA,SAAAM,CAAA,EACA,OAAAD,EAAAC,IACAC,EAAAD,EAAAG,MAAA,KAAAD,CAAA,CAAAJ,EAAAE,GAAA,uBCxDA,IAAAI,EAAkBZ,EAAQ,OAC1Ba,EAAiBb,EAAQ,OAMzBc,EAAAC,OAHAC,SAAA,CAGAF,cAAA,CAsBAb,EAAAC,OAAA,CAbA,SAAAe,CAAA,EACA,IAAAL,EAAAK,GACA,OAAAJ,EAAAI,GAEA,IAAAC,EAAA,GACA,QAAAC,KAAAC,OAAAH,GACAH,EAAAO,IAAA,CAAAJ,EAAAE,IAAAA,eAAAA,GACAD,EAAAI,IAAA,CAAAH,GAGA,OAAAD,CACA,oBCdAjB,EAAAC,OAAA,CANA,SAAAqB,CAAA,EACA,gBAAAf,CAAA,EACA,OAAAe,EAAAf,EACA,CACA,yBCXA,IAAAV,EAAeE,EAAQ,OACvBwB,EAAUxB,EAAQ,OAClBG,EAAcH,EAAQ,OACtBI,EAAUJ,EAAQ,OAClBK,EAAcL,EAAQ,OACtBM,EAAiBN,EAAQ,OACzByB,EAAezB,EAAQ,OAGvB0B,EAAA,eAEAC,EAAA,mBACAC,EAAA,eACAC,EAAA,mBAEAC,EAAA,oBAGAC,EAAAN,EAAA3B,GACAkC,EAAAP,EAAAD,GACAS,EAAAR,EAAAtB,GACA+B,EAAAT,EAAArB,GACA+B,EAAAV,EAAApB,GASA+B,EAAA9B,EAGA,IAAA8B,EAAA,IAAAtC,EAAA,IAAAuC,YAAA,MAAAP,GACAN,GAAAY,EAAA,IAAAZ,IAAAE,GACAvB,GAAAiC,EAAAjC,EAAAmC,OAAA,KAAAX,GACAvB,GAAAgC,EAAA,IAAAhC,IAAAwB,GACAvB,GAAA+B,EAAA,IAAA/B,IAAAwB,CAAA,GACAO,CAAAA,EAAA,SAAA5B,CAAA,EACA,IAAAU,EAAAZ,EAAAE,GACA+B,EAAArB,mBAAAA,EAAAV,EAAAgC,WAAA,CAAAC,KAAAA,EACAC,EAAAH,EAAAd,EAAAc,GAAA,GAEA,GAAAG,EACA,OAAAA,GACA,KAAAX,EAAA,OAAAD,CACA,MAAAE,EAAA,OAAAN,CACA,MAAAO,EAAA,OAAAN,CACA,MAAAO,EAAA,OAAAN,CACA,MAAAO,EAAA,OAAAN,CACA,CAEA,OAAAX,CACA,GAGAjB,EAAAC,OAAA,CAAAkC,qBCxDA,IAAArB,EAAAK,OAAAJ,SAAA,CAgBAf,EAAAC,OAAA,CAPA,SAAAM,CAAA,EACA,IAAA+B,EAAA/B,GAAAA,EAAAgC,WAAA,CAGA,OAAAhC,IAFA,oBAAA+B,GAAAA,EAAAvB,SAAA,EAAAD,CAAA,CAGA,yBCZA,IAAAF,EAAA8B,EAHsB,MAGtBvB,OAAAwB,IAAA,CAAAxB,OAEAnB,CAAAA,EAAAC,OAAA,CAAAW,oCCLA,IAAAgC,EAAiB7C,EAAQ,OAGzB8C,EAAkB,GAA0B,CAAA5C,EAAA6C,QAAA,EAAA7C,EAG5C8C,EAAAF,GAA6C7C,GAAA,CAAAA,EAAA8C,QAAA,EAAA9C,EAM7CgD,EAAAC,GAHAF,EAAA9C,OAAA,GAAA4C,GAGAD,EAAAM,OAAA,CAGAC,EAAA,WACA,IAEA,IAAAC,EAAAL,GAAAA,EAAAM,OAAA,EAAAN,EAAAM,OAAA,SAAAD,KAAA,CAEA,GAAAA,EACA,OAAAA,EAIA,OAAAJ,GAAAA,EAAAM,OAAA,EAAAN,EAAAM,OAAA,QACA,CAAI,MAAAC,EAAA,EACJ,GAEAvD,CAAAA,EAAAC,OAAA,CAAAkD,oBCfAnD,EAAAC,OAAA,CANA,SAAAqB,CAAA,CAAAkC,CAAA,EACA,gBAAAC,CAAA,EACA,OAAAnC,EAAAkC,EAAAC,GACA,CACA,yBCZA,IAAAC,EAAsB3D,EAAQ,MAC9BO,EAAmBP,EAAQ,OAG3Be,EAAAK,OAAAJ,SAAA,CAGAF,EAAAC,EAAAD,cAAA,CAGA8C,EAAA7C,EAAA6C,oBAAA,CAoBAC,EAAAF,EAAA,WAA+C,OAAAG,SAAA,KAAmBH,EAAA,SAAAnD,CAAA,EAClE,OAAAD,EAAAC,IAAAM,EAAAO,IAAA,CAAAb,EAAA,WACA,CAAAoD,EAAAvC,IAAA,CAAAb,EAAA,SACA,CAEAP,CAAAA,EAAAC,OAAA,CAAA2D,yBCnCA,IAAAE,EAAiB/D,EAAQ,OACzBS,EAAeT,EAAQ,MA+BvBC,CAAAA,EAAAC,OAAA,CAJA,SAAAM,CAAA,EACA,OAAAA,MAAAA,GAAAC,EAAAD,EAAAG,MAAA,IAAAoD,EAAAvD,EACA,oCC9BA,IAAAwD,EAAWhE,EAAQ,OACnBiE,EAAgBjE,EAAQ,OAGxB8C,EAAkB,GAA0B,CAAA5C,EAAA6C,QAAA,EAAA7C,EAG5C8C,EAAAF,GAA6C7C,GAAA,CAAAA,EAAA8C,QAAA,EAAA9C,EAM7CiE,EAAAhB,GAHAF,EAAA9C,OAAA,GAAA4C,EAGAkB,EAAAE,MAAA,CAAAzB,KAAAA,EAGA0B,EAAAD,EAAAA,EAAAE,QAAA,CAAA3B,KAAAA,CAqBAxC,CAAAA,EAAAC,OAAA,CAFAiE,GAAAF,yBCnCA,IAAAI,EAAerE,EAAQ,KACvBoC,EAAapC,EAAQ,OACrB6D,EAAkB7D,EAAQ,OAC1BsE,EAActE,EAAQ,MACtBuE,EAAkBvE,EAAQ,OAC1BoE,EAAepE,EAAQ,OACvBY,EAAkBZ,EAAQ,OAC1BwE,EAAmBxE,EAAQ,OAU3Bc,EAAAC,OAHAC,SAAA,CAGAF,cAAA,CA2DAb,EAAAC,OAAA,CAxBA,SAAAM,CAAA,EACA,GAAAA,MAAAA,EACA,SAEA,GAAA+D,EAAA/D,IACA8D,CAAAA,EAAA9D,IAAA,iBAAAA,GAAA,mBAAAA,EAAAiE,MAAA,EACAL,EAAA5D,IAAAgE,EAAAhE,IAAAqD,EAAArD,EAAA,EACA,OAAAA,EAAAG,MAAA,CAEA,IAAA+D,EAAAtC,EAAA5B,GACA,GAAAkE,gBAAAA,GAAAA,gBAAAA,EACA,OAAAlE,EAAAmE,IAAA,CAEA,GAAA/D,EAAAJ,GACA,OAAA6D,EAAA7D,GAAAG,MAAA,CAEA,QAAAQ,KAAAX,EACA,GAAAM,EAAAO,IAAA,CAAAb,EAAAW,GACA,SAGA,QACA,qBCxCAlB,EAAAC,OAAA,CALA,SAAAM,CAAA,EACA,uBAAAA,GACAA,EAAA,IAAAA,EAAA,MAAAA,GA9BA,gBA+BA,yBChCA,IAAAoE,EAAuB5E,EAAQ,OAC/B6E,EAAgB7E,EAAQ,MACxBoD,EAAepD,EAAQ,OAGvB8E,EAAA1B,GAAAA,EAAAoB,YAAA,CAmBAA,EAAAM,EAAAD,EAAAC,GAAAF,CAEA3E,CAAAA,EAAAC,OAAA,CAAAsE,qBCTAvE,EAAAC,OAAA,CAJA,WACA,QACA,sECfO,IAAM6E,EAAQ,CACnB,CACEC,KAAM,UACNC,IAAK,6BACP,EACA,CACED,KAAM,SACNC,IAAK,oBACP,EACA,CACED,KAAM,YACNC,IAAK,+BACP,EACD,sUCKc,SAASC,iBAoKoBC,EAuGGA,EA1Q7C,IAAMC,EAAaC,CAAAA,EAAAA,EAAAA,MAAAA,EAAwB,CACzC,CACEC,KAAM,WACNN,KAAM,kBACNO,OAAQ,WACV,EACA,CACED,KAAM,kBACNN,KAAM,kBACNO,OAAQ,mBACV,EACD,EAEK,CAAEC,SAAAA,CAAQ,CAAEC,WAAAA,CAAU,CAAEN,QAAAA,CAAO,CAAE,CAAGO,CAAAA,EAAAA,EAAAA,CAAAA,IAEpCC,gBAAkB,MAAOC,QAENR,EAAvB,IAAMS,EAAAA,OAAiBT,CAAAA,EAAAA,EAAWU,OAAO,GAAlBV,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoBW,IAAI,CAAC,GAAOC,EAAEV,IAAI,GAAKM,EAAeK,EAAE,EACnF,GAAI,CAACJ,EACH,OAAO1F,QAAQ+F,MAAM,CAAC,oBAGxB,IAAMV,EAAWW,IAAIC,OAAQP,EAAeN,MAAM,EAElD,GAAI,CAACC,EAAU,CACba,CAAAA,EAAAA,EAAAA,EAAAA,EAAM,CACJC,MAAO,mBACPC,YAAa,qCACf,GACA,MACF,CAGA,GAAM,CAACC,EAAQ,CAAG,MAAMhB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUiB,eAAe,IAEjD,MAAO,CACLjB,SAAAA,EACAgB,QAAAA,CACF,CACF,EAkCA,MAhCAE,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMC,uBAAyB,IAC7BC,QAAQC,GAAG,CAAC,gCAAiCC,GAEzCA,EAASnG,MAAM,EACjB8E,EAAW,CACT,GAAGN,CAAO,CACVqB,QAASM,CAAQ,CAAC,EAAE,EAG1B,EAEMC,sBAAwB,IAC5BH,QAAQC,GAAG,CAAC,+BAAgCG,GAExCA,GACFvB,EAAW,CACT,GAAGN,CAAO,CACV8B,QAASD,CACX,EAEJ,EAKA,OAHAxB,MAAAA,GAAAA,EAAU0B,EAAE,CAAC,kBAAmBP,wBAChCnB,MAAAA,GAAAA,EAAU0B,EAAE,CAAC,iBAAkBH,uBAExB,KACLvB,MAAAA,GAAAA,EAAU2B,cAAc,CAAC,kBAAmBR,wBAC5CnB,MAAAA,GAAAA,EAAU2B,cAAc,CAAC,iBAAkBJ,sBAC7C,CACF,EAAG,CAAC5B,EAASK,EAAUC,EAAW,EAGhC,GAAA2B,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAACC,EAAAA,CAAaA,CAAAA,CACZC,aAAc,IACLtH,QAAQmC,OAAO,CACpB8C,EAAWU,OAAO,CAAC4B,GAAG,CAAC,GACd,EACLzB,GAAI0B,EAAOrC,IAAI,CACfN,KAAM2C,EAAO3C,IAAI,CACnB,IAIN4C,UAAWjC,kBAGb,GAAAyB,EAAAC,IAAA,EAACQ,EAAAA,CAAQA,CAAAA,CAACvB,MAAM,mBACd,GAAAc,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,gBACNC,YAAY,mBACZwB,sBAAqB,GACrBC,yBAAwB,GACxBC,UAAW,MAAOC,IAChB,IAAMC,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAU4C,aAAa,IAEzC,OADAxB,QAAQC,GAAG,CAAC,wBAAyBsB,GAC9BE,KAAKC,SAAS,CAACH,EAAK,CAAChH,EAAKX,KAC/B,GAAI,MAAC,SAAU,SAAU,cAAe,OAAO,CAAC+H,OAAO,CAACpH,GAGxD,OAAOX,CACT,EACF,IAEF,GAAA4G,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,kBACNC,YAAY,mBACZwB,sBAAqB,GACrBE,UAAW,MAAOC,IAChB,IAAMC,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUiB,eAAe,IAC3C,OAAO4B,KAAKC,SAAS,CAACH,EACxB,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,cACNC,YAAY,WACZwB,sBAAqB,GACrBE,UAAW,UACT,IAAME,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUgD,WAAW,IACvC,OAAOH,KAAKC,SAAS,CAACH,EACxB,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,aACNC,YAAY,WACZwB,sBAAqB,GACrBE,UAAW,UACT,IAAME,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUiD,UAAU,IACtC,OAAON,CACT,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,eACNC,YAAY,WACZwB,sBAAqB,GACrBE,UAAW,UACT,IAAME,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUkD,YAAY,IACxC,OAAOP,CACT,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,kBACNC,YAAY,WACZwB,sBAAqB,GACrBE,UAAW,UACT,IAAME,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUmD,eAAe,IAC3C,OAAOR,CACT,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,aACNC,YAAY,WACZwB,sBAAqB,GACrBE,UAAW,UACT,IAAME,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUoD,UAAU,IACtC,OAAOT,EAAIU,QAAQ,EACrB,IAEF,GAAAzB,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,WACNC,YAAY,iBACZuC,iBAAkBC,EAAAA,CAAMA,CAACC,QAAQ,CAAC7D,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASqB,OAAO,GAAhBrB,KAAAA,IAAAA,EAAAA,EAAoB,IACtD8C,UAAW,MAAOC,IAChB,GAAM,CACJ1B,QAAAA,CAAO,CACPyC,OAAAA,CAAM,CACP,CAGGZ,KAAKa,KAAK,CAAChB,GACTC,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUwD,QAAQ,CAACxC,EAASyC,EAAAA,EAC9C,OAAOZ,KAAKC,SAAS,CAACH,EACxB,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,wBACNC,YAAY,cACZwB,sBAAqB,GACrBE,UAAW,UACT,IAAME,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAU2D,qBAAqB,IACjD,OAAOhB,EAAIU,QAAQ,EACrB,IAEF,GAAAzB,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,iBACNC,YAAY,WACZwB,sBAAqB,GACrBE,UAAW,UACT,IAAME,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAU4D,cAAc,IAC1C,OAAOf,KAAKC,SAAS,CAACH,EACxB,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,kBACNC,YAAY,cACZwB,sBAAqB,GACrBE,UAAW,UACT,IAAME,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAU6D,eAAe,IAC3C,OAAOlB,MAAAA,EAAAA,KAAAA,EAAAA,EAAKU,QAAQ,EACtB,IAEF,GAAAzB,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,aACNC,YAAY,SACZwB,sBAAqB,GACrBE,UAAW,UACT,IAAME,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAU8D,UAAU,IACtC,OAAOnB,CACT,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,gBACNC,YAAY,SACZuC,iBAAkBC,EAAAA,CAAMA,CAACQ,aAAa,CACtCtB,UAAW,MAAOC,IAChB,IAAMC,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAU+D,aAAa,CAACrB,EAAAA,EAC1C,OAAOG,KAAKC,SAAS,CAACH,EACxB,OAIJ,GAAAf,EAAAC,IAAA,EAACQ,EAAAA,CAAQA,CAAAA,CAACvB,MAAM,yBACd,GAAAc,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,cACNC,YAAY,OACZuC,iBAAkBC,EAAAA,CAAMA,CAACS,WAAW,CACpCvB,UAAW,MAAOC,IAChB,IAAMuB,EAAMpB,KAAKa,KAAK,CAAChB,GACjBC,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUgE,WAAW,CAACC,EAAIC,GAAG,CAAED,EAAIE,IAAI,GACzD,OAAOxB,CACT,EACAyB,WAAY,MAAO1B,EAAiB2B,KAClC,IAAMJ,EAAMpB,KAAKa,KAAK,CAAChB,GACjB4B,EAAY,MAAMtE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUkD,YAAY,WAE9C,EAASiB,IAAI,EAAIF,UAAAA,EAAIE,IAAI,CAKrBF,kBAAAA,EAAIE,IAAI,CACHI,EAAAA,QAAQA,CAACC,eAAe,CAAC7E,EAAQqB,OAAO,CAAEiD,EAAIC,GAAG,CAAEG,GAErD,4BANEI,CAAAA,EAAAA,EAAAA,CAAAA,EAAcH,EAAWL,EAAIC,GAAG,CAAEG,EAO7C,IAEF,GAAAzC,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,oBACNC,YAAY,cACZuC,iBAAkBC,EAAAA,CAAMA,CAACmB,iBAAiB,CAC1CjC,UAAW,MAAOC,IAChB,IAAMC,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAU2E,iBAAiB,CAACjC,EAAAA,EAC9C,OAAOC,CACT,EACAyB,WAAY,MAAO1B,EAAiB2B,IAC3B1J,QAAQmC,OAAO,CAACyH,EAAAA,QAAQA,CAACC,eAAe,CAAC7E,EAAQqB,OAAO,CAAE0B,EAAS2B,SAKhF,GAAAzC,EAAAC,IAAA,EAACQ,EAAAA,CAAQA,CAAAA,CAACvB,MAAM,wBACd,GAAAc,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,cACNC,YAAY,OACZuC,iBAAkBC,EAAAA,CAAMA,CAACqB,WAAW,CAACjF,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASqB,OAAO,GAAhBrB,KAAAA,IAAAA,EAAAA,EAAoB,IACzD8C,UAAW,MAAOC,IAChB,IAAMuB,EAAMpB,KAAKa,KAAK,CAAChB,GACjBC,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAU4E,WAAW,CAACX,EAAIY,SAAS,CAAEZ,EAAIa,QAAQ,GACnE,OAAOjC,KAAKC,SAAS,CAACH,EACxB,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,SACNC,YAAY,OACZ0B,UAAW,MAAOC,IAChB,GAAI,CAACA,GAAWqC,IAAQrC,GAKtB,KAJA7B,CAAAA,EAAAA,EAAAA,EAAAA,EAAM,CACJC,MAAO,QACPC,YAAa,cACf,GACM,MAAU,oBAGlB,IAAM4B,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUgF,MAAM,CAAC,CACjCC,MAAOvC,CACT,IACA,OAAOG,KAAKC,SAAS,CAACH,EACxB,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,WACNC,YAAY,WACZuC,iBAAkBC,EAAAA,CAAMA,CAAC2B,QAAQ,CACjCzC,UAAW,MAAOC,IAChB,GAAM,CAAEyC,QAAAA,CAAO,CAAEC,QAAAA,CAAO,CAAE,CAAGvC,KAAKa,KAAK,CAAChB,GAKlCC,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUkF,QAAQ,CAACC,EAASC,EAAAA,EAExCC,EAAOC,EAAAA,IAAY,CAACC,OAAO,CAAC5C,GAIlC,MAHKyC,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASI,aAAa,GACzBH,EAAKI,iBAAiB,GAEjBJ,EAAKK,KAAK,EACnB,EACAC,oBAAqB,SAOChG,EANpB,MACE,GAAAiC,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAAC6D,EAAAA,CAAKA,CAAAA,CACJC,MAAM,OACN1B,KAAK,OACL3E,KAAK,YACLsG,aAAcnG,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASqB,OAAO,GAAhBrB,KAAAA,IAAAA,EAAAA,EAAoB,KAEpC,GAAAiC,EAAAG,GAAA,EAAC6D,EAAAA,CAAKA,CAAAA,CAACC,MAAM,OAAO1B,KAAK,SAAS3E,KAAK,SAASsG,aAAa,SAC7D,GAAAlE,EAAAG,GAAA,EAAC6D,EAAAA,CAAKA,CAAAA,CAACC,MAAM,aAAa1B,KAAK,SAAS3E,KAAK,WAAWsG,aAAa,SAG3E,EACAC,kBAAmB,MAAOC,QAGGA,EASzBrG,EAXF,IAAMkF,EAAYmB,EAAS,SAAY,CACjCvC,EAASwC,SAASD,EAAS,MAAS,EACpCE,EAAWD,SAAS,OAACD,CAAAA,EAAAA,EAAS,QAAW,GAApBA,KAAAA,IAAAA,EAAAA,EAAmC,MAE9D,GAAI,CAACnB,GAAa,CAACpB,EACjB,MAAM,MAAU,mCAGlB,IAAMjC,EAAU,MAAMxB,EAAS8D,UAAU,GAEnCuB,EAAOc,CAAAA,EAAAA,EAAAA,CAAAA,EACXxG,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASqB,OAAO,GAAhBrB,KAAAA,IAAAA,EAAAA,EAAoB,GACpBkF,EACApB,EACAyC,EACA1E,YAAAA,EAAwB8D,EAAAA,QAAgB,CAACA,OAAO,CAAGA,EAAAA,QAAgB,CAACc,OAAO,EAG7E,OAAOzL,QAAQmC,OAAO,CAACuI,EACzB,EACAjB,WAAY,MAAO1B,EAAiB2B,KAClC,IAAM1B,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUqG,QAAQ,CAAChC,EAAAA,EACrC,OAAOxB,KAAKC,SAAS,CAACH,EACxB,IAEF,GAAAf,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,YACNC,YAAY,YACZuC,iBAAkBC,EAAAA,CAAMA,CAAC+C,SAAS,CAClC7D,UAAW,MAAOC,IAChB,GAAM,CAAE6D,SAAAA,CAAQ,CAAEnB,QAAAA,CAAO,CAAE,CAAGvC,KAAKa,KAAK,CAAChB,GAKnCC,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUsG,SAAS,CAACC,EAAUnB,EAAAA,EAE1C1J,EAAmB,EAAE,CAS3B,OARAiH,EAAI6D,OAAO,CAAC,CAACnB,EAAMoB,SAEZrB,EADL,IAAMsB,EAAUpB,EAAAA,IAAY,CAACC,OAAO,CAACF,GAChCD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,CAAS,CAACqB,EAAM,GAAhBrB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAkBI,aAAa,GAClCkB,EAAQjB,iBAAiB,GAE3B/J,EAAOI,IAAI,CAAC4K,EAAQhB,KAAK,GAC3B,GAEO7C,KAAKC,SAAS,CAACpH,EACxB,EACAiK,oBAAqB,SAOChG,EANpB,MACE,GAAAiC,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACE,GAAAF,EAAAG,GAAA,EAAC6D,EAAAA,CAAKA,CAAAA,CACJC,MAAM,OACN1B,KAAK,OACL3E,KAAK,YACLsG,aAAcnG,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASqB,OAAO,GAAhBrB,KAAAA,IAAAA,EAAAA,EAAoB,KAEpC,GAAAiC,EAAAG,GAAA,EAAC6D,EAAAA,CAAKA,CAAAA,CAACC,MAAM,OAAO1B,KAAK,SAAS3E,KAAK,SAASsG,aAAa,SAC7D,GAAAlE,EAAAG,GAAA,EAAC6D,EAAAA,CAAKA,CAAAA,CAACC,MAAM,aAAa1B,KAAK,SAAS3E,KAAK,WAAWsG,aAAa,SAG3E,EACAC,kBAAmB,MAAOC,QAGGA,EASzBrG,EAXF,IAAMkF,EAAYmB,EAAS,SAAY,CACjCvC,EAASwC,SAASD,EAAS,MAAS,EACpCE,EAAWD,SAAS,OAACD,CAAAA,EAAAA,EAAS,QAAW,GAApBA,KAAAA,IAAAA,EAAAA,EAAmC,MAE9D,GAAI,CAACnB,GAAa,CAACpB,EACjB,MAAM,MAAU,mCAGlB,IAAMjC,EAAU,MAAMxB,EAAS8D,UAAU,GAEnCuB,EAAO,MAAMc,CAAAA,EAAAA,EAAAA,CAAAA,EACjBxG,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASqB,OAAO,GAAhBrB,KAAAA,IAAAA,EAAAA,EAAoB,GACpBkF,EACApB,EACAyC,EACA1E,YAAAA,EAAwB8D,EAAAA,QAAgB,CAACA,OAAO,CAAGA,EAAAA,QAAgB,CAACc,OAAO,EAGvEO,EAAU9D,KAAKa,KAAK,CAAC2B,GAE3B,OAAO1K,QAAQmC,OAAO,CACpB+F,KAAKC,SAAS,CAAC,CACbyD,SAAU,CAACI,EAAQxB,OAAO,CAAC,CAC3BC,QAAS,CAACuB,EAAQvB,OAAO,CAAC,GAGhC,EACAhB,WAAY,MAAO1B,EAAiB2B,KAClC,GAAM,CAACkC,EAAS,CAAG1D,KAAKa,KAAK,CAACW,GAC9B,OAAO,MAAMrE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUqG,QAAQ,CAACE,EAAAA,CAClC,IAEF,GAAA3E,EAAAG,GAAA,EAACO,EAAAA,CAAUA,CAAAA,CACTxB,MAAM,WACNC,YAAY,WACZ0B,UAAW,MAAOC,IAChB,GAAI,CAACA,GAAWqC,IAAQrC,GAKtB,KAJA7B,CAAAA,EAAAA,EAAAA,EAAAA,EAAM,CACJC,MAAO,QACPC,YAAa,cACf,GACM,MAAU,oBAElB,IAAM4B,EAAM,MAAM3C,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUqG,QAAQ,CAAC3D,EAAAA,EACrC,OAAOC,CACT,OAIJ,GAAAf,EAAAG,GAAA,EAAC6E,EAAAA,CAAQA,CAAAA,CAACrH,MAAOA,EAAAA,CAAKA,KAG5B,oGCxcAsH,CAAAA,EAAAC,CAAA,CAAe,CACb,GAAGC,EAAAA,CAAS,CACZvD,SAAU,GAAqB,CAC7B,CACE/C,GAAI,WACJjB,KAAM,WACNxE,MAAO6H,KAAKC,SAAS,CAAC,CACpB9B,QAASA,EACTyC,OAAQ,GACV,EACF,EACD,CACDiB,kBAAmB,CACjB,CACEjE,GAAI,oBACJjB,KAAM,oBACNxE,MAAO,aACT,EACD,AACH","sources":["webpack://_N_E/./node_modules/lodash/_DataView.js","webpack://_N_E/./node_modules/lodash/_Promise.js","webpack://_N_E/./node_modules/lodash/_Set.js","webpack://_N_E/./node_modules/lodash/_WeakMap.js","webpack://_N_E/./node_modules/lodash/_baseIsArguments.js","webpack://_N_E/./node_modules/lodash/_baseIsTypedArray.js","webpack://_N_E/./node_modules/lodash/_baseKeys.js","webpack://_N_E/./node_modules/lodash/_baseUnary.js","webpack://_N_E/./node_modules/lodash/_getTag.js","webpack://_N_E/./node_modules/lodash/_isPrototype.js","webpack://_N_E/./node_modules/lodash/_nativeKeys.js","webpack://_N_E/./node_modules/lodash/_nodeUtil.js","webpack://_N_E/./node_modules/lodash/_overArg.js","webpack://_N_E/./node_modules/lodash/isArguments.js","webpack://_N_E/./node_modules/lodash/isArrayLike.js","webpack://_N_E/./node_modules/lodash/isBuffer.js","webpack://_N_E/./node_modules/lodash/isEmpty.js","webpack://_N_E/./node_modules/lodash/isLength.js","webpack://_N_E/./node_modules/lodash/isTypedArray.js","webpack://_N_E/./node_modules/lodash/stubFalse.js","webpack://_N_E/./components/chains/btcBabylon/dapps.config.ts","webpack://_N_E/./components/chains/btcBabylon/example.tsx","webpack://_N_E/./components/chains/btcBabylon/params.ts","webpack://_N_E/<anon>"],"sourcesContent":["var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","export const dapps = [\n  {\n    name: 'Satflow',\n    url: 'https://satflow.com/connect',\n  },\n  {\n    name: 'UniSat',\n    url: 'https://unisat.io/',\n  },\n  {\n    name: 'Magiceden',\n    url: 'https://magiceden.io/ordinals',\n  },\n];\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return */\nimport { dapps } from './dapps.config';\nimport ConnectButton from '../../connect/ConnectButton';\nimport { useEffect, useRef } from 'react';\nimport { get, isEmpty } from 'lodash';\nimport { IProviderApi, IProviderInfo } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../connect/WalletContext';\nimport type { IKnownWallet } from '../../connect/types';\nimport DappList from '../../DAppList';\nimport params from './params';\nimport { verifyMessage } from '@unisat/wallet-utils';\nimport { toast } from '../../ui/use-toast';\nimport * as bitcoin from 'bitcoinjs-lib';\nimport { Input } from '../../ui/input';\nimport { createPSBT } from '../btc/utils';\nimport { Verifier } from 'bip322-js';\n\nexport default function BTCExample() {\n  const walletsRef = useRef<IProviderInfo[]>([\n    {\n      uuid: 'injected',\n      name: 'Injected Wallet',\n      inject: 'btcwallet',\n    },\n    {\n      uuid: 'injected-onekey',\n      name: 'Injected OneKey',\n      inject: '$onekey.btcwallet',\n    },\n  ]);\n\n  const { provider, setAccount, account } = useWallet<IProviderApi>();\n\n  const onConnectWallet = async (selectedWallet: IKnownWallet) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const providerDetail = walletsRef.current?.find((w) => w.uuid === selectedWallet.id);\n    if (!providerDetail) {\n      return Promise.reject('Wallet not found');\n    }\n\n    const provider = get(window, providerDetail.inject) as IProviderApi | undefined;\n\n    if (!provider) {\n      toast({\n        title: 'Wallet not found',\n        description: 'Please install the wallet extension',\n      });\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining\n    const [address] = await provider?.requestAccounts();\n\n    return {\n      provider,\n      address,\n    };\n  };\n\n  useEffect(() => {\n    const accountsChangedHandler = (accounts: string[]) => {\n      console.log('btc babylon [accountsChanged]', accounts);\n\n      if (accounts.length) {\n        setAccount({\n          ...account,\n          address: accounts[0],\n        });\n      }\n    };\n\n    const networkChangedHandler = (network: string) => {\n      console.log('btc babylon [networkChanged]', network);\n\n      if (network) {\n        setAccount({\n          ...account,\n          chainId: network,\n        });\n      }\n    };\n\n    provider?.on('accountsChanged', accountsChangedHandler);\n    provider?.on('networkChanged', networkChangedHandler);\n\n    return () => {\n      provider?.removeListener('accountsChanged', accountsChangedHandler);\n      provider?.removeListener('networkChanged', networkChangedHandler);\n    };\n  }, [account, provider, setAccount]);\n\n  return (\n    <>\n      <ConnectButton<IProviderApi>\n        fetchWallets={() => {\n          return Promise.resolve(\n            walletsRef.current.map((wallet) => {\n              return {\n                id: wallet.uuid,\n                name: wallet.name,\n              };\n            }),\n          );\n        }}\n        onConnect={onConnectWallet}\n      />\n\n      <ApiGroup title=\"Basics\">\n        <ApiPayload\n          title=\"connectWallet\"\n          description=\"请求连接 Wallet 获取账户\"\n          disableRequestContent\n          allowCallWithoutProvider\n          onExecute={async (request: string) => {\n            const res = await provider?.connectWallet();\n            console.log('connectWallet result:', res);\n            return JSON.stringify(res, (key, value) => {\n              if (['bridge', 'config', 'debugLogger', '_log'].indexOf(key) !== -1) {\n                return undefined;\n              }\n              return value;\n            });\n          }}\n        />\n        <ApiPayload\n          title=\"requestAccounts\"\n          description=\"请求连接 Wallet 获取账户\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.requestAccounts();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"getAccounts\"\n          description=\"获取当前账户地址\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.getAccounts();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"getAddress\"\n          description=\"获取当前账户地址\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.getAddress();\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"getPublicKey\"\n          description=\"获取当前账户公钥\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.getPublicKey();\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"getPublicKeyHex\"\n          description=\"获取当前账户公钥\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.getPublicKeyHex();\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"getBalance\"\n          description=\"获取当前账户余额\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.getBalance();\n            return res.toString();\n          }}\n        />\n        <ApiPayload\n          title=\"getUtxos\"\n          description=\"获取当前账户 UTXO 列表\"\n          presupposeParams={params.getUtxos(account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const {\n              address,\n              amount,\n            }: {\n              address: string;\n              amount: number;\n            } = JSON.parse(request);\n            const res = await provider?.getUtxos(address, amount);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"getWalletProviderName\"\n          description=\"获取当前钱包提供商名称\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.getWalletProviderName();\n            return res.toString();\n          }}\n        />\n        <ApiPayload\n          title=\"getNetworkFees\"\n          description=\"获取当前网络费用\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.getNetworkFees();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"getBTCTipHeight\"\n          description=\"获取 BTC 区块高度\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.getBTCTipHeight();\n            return res?.toString();\n          }}\n        />\n        <ApiPayload\n          title=\"getNetwork\"\n          description=\"获取当前网络\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.getNetwork();\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"switchNetwork\"\n          description=\"切换当前网络\"\n          presupposeParams={params.switchNetwork}\n          onExecute={async (request: string) => {\n            const res = await provider?.switchNetwork(request);\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Sign Message\">\n        <ApiPayload\n          title=\"SignMessage\"\n          description=\"签名消息\"\n          presupposeParams={params.signMessage}\n          onExecute={async (request: string) => {\n            const obj = JSON.parse(request) as { msg: string; type: string | undefined };\n            const res = await provider?.signMessage(obj.msg, obj.type);\n            return res;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const obj = JSON.parse(request) as { msg: string; type: string | undefined };\n            const publicKey = await provider?.getPublicKey();\n\n            if (!obj.type || obj.type === 'ecdsa') {\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n              return verifyMessage(publicKey, obj.msg, response);\n            }\n\n            if (obj.type === 'bip322-simple') {\n              return Verifier.verifySignature(account.address, obj.msg, response);\n            }\n            return 'Dapp Example: 不支持的类型签字的验证';\n          }}\n        />\n        <ApiPayload\n          title=\"SignMessageBIP322\"\n          description=\"签名消息 BIP322\"\n          presupposeParams={params.signMessageBip322}\n          onExecute={async (request: string) => {\n            const res = await provider?.signMessageBIP322(request);\n            return res;\n          }}\n          onValidate={async (request: string, response: string) => {\n            return Promise.resolve(Verifier.verifySignature(account.address, request, response));\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Transaction\">\n        <ApiPayload\n          title=\"SendBitcoin\"\n          description=\"发送交易\"\n          presupposeParams={params.sendBitcoin(account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const obj = JSON.parse(request) as { toAddress: string; satoshis: number };\n            const res = await provider?.sendBitcoin(obj.toAddress, obj.satoshis);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"pushTx\"\n          description=\"广播交易\"\n          onExecute={async (request: string) => {\n            if (!request || isEmpty(request)) {\n              toast({\n                title: 'Error',\n                description: '请填写需要广播的交易信息',\n              });\n              throw new Error('request is empty');\n            }\n\n            const res = await provider?.pushTx({\n              rawtx: request,\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"signPsbt\"\n          description=\"signPsbt\"\n          presupposeParams={params.signPsbt}\n          onExecute={async (request: string) => {\n            const { psbtHex, options } = JSON.parse(request) as {\n              psbtHex: string;\n              options?: any;\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const res = await provider?.signPsbt(psbtHex, options);\n\n            const psbt = bitcoin.Psbt.fromHex(res);\n            if (!options?.autoFinalized) {\n              psbt.finalizeAllInputs();\n            }\n            return psbt.toHex();\n          }}\n          generateRequestFrom={() => {\n            return (\n              <>\n                <Input\n                  label=\"收款地址\"\n                  type=\"text\"\n                  name=\"toAddress\"\n                  defaultValue={account?.address ?? ''}\n                />\n                <Input label=\"转账金额\" type=\"number\" name=\"amount\" defaultValue=\"1000\" />\n                <Input label=\"手续费 sat/vB\" type=\"number\" name=\"gasPrice\" defaultValue=\"20\" />\n              </>\n            );\n          }}\n          onGenerateRequest={async (fromData: Record<string, any>) => {\n            const toAddress = fromData['toAddress'] as string;\n            const amount = parseInt(fromData['amount'] as string);\n            const gasPrice = parseInt((fromData['gasPrice'] as string) ?? '20');\n\n            if (!toAddress || !amount) {\n              throw new Error('toAddress or amount is required');\n            }\n\n            const network = await provider.getNetwork();\n\n            const psbt = createPSBT(\n              account?.address ?? '',\n              toAddress,\n              amount,\n              gasPrice,\n              network === 'livenet' ? bitcoin.networks.bitcoin : bitcoin.networks.testnet,\n            );\n\n            return Promise.resolve(psbt);\n          }}\n          onValidate={async (request: string, response: string) => {\n            const res = await provider?.pushPsbt(response);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"signPsbts\"\n          description=\"signPsbts\"\n          presupposeParams={params.signPsbts}\n          onExecute={async (request: string) => {\n            const { psbtHexs, options } = JSON.parse(request) as {\n              psbtHexs: string[];\n              options?: any[];\n            };\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            const res = await provider?.signPsbts(psbtHexs, options);\n\n            const result: string[] = [];\n            res.forEach((psbt, index) => {\n              const psbtObj = bitcoin.Psbt.fromHex(psbt);\n              if (!options?.[index]?.autoFinalized) {\n                psbtObj.finalizeAllInputs();\n              }\n              result.push(psbtObj.toHex());\n            });\n\n            return JSON.stringify(result);\n          }}\n          generateRequestFrom={() => {\n            return (\n              <>\n                <Input\n                  label=\"收款地址\"\n                  type=\"text\"\n                  name=\"toAddress\"\n                  defaultValue={account?.address ?? ''}\n                />\n                <Input label=\"转账金额\" type=\"number\" name=\"amount\" defaultValue=\"1000\" />\n                <Input label=\"手续费 sat/vB\" type=\"number\" name=\"gasPrice\" defaultValue=\"20\" />\n              </>\n            );\n          }}\n          onGenerateRequest={async (fromData: Record<string, any>) => {\n            const toAddress = fromData['toAddress'] as string;\n            const amount = parseInt(fromData['amount'] as string);\n            const gasPrice = parseInt((fromData['gasPrice'] as string) ?? '20');\n\n            if (!toAddress || !amount) {\n              throw new Error('toAddress or amount is required');\n            }\n\n            const network = await provider.getNetwork();\n\n            const psbt = await createPSBT(\n              account?.address ?? '',\n              toAddress,\n              amount,\n              gasPrice,\n              network === 'livenet' ? bitcoin.networks.bitcoin : bitcoin.networks.testnet,\n            );\n\n            const pabtObj = JSON.parse(psbt);\n\n            return Promise.resolve(\n              JSON.stringify({\n                psbtHexs: [pabtObj.psbtHex],\n                options: [pabtObj.options],\n              }),\n            );\n          }}\n          onValidate={async (request: string, response: string) => {\n            const [psbtHexs] = JSON.parse(response)\n            return await provider?.pushPsbt(psbtHexs);\n          }}\n        />\n        <ApiPayload\n          title=\"pushPsbt\"\n          description=\"pushPsbt\"\n          onExecute={async (request: string) => {\n            if (!request || isEmpty(request)) {\n              toast({\n                title: 'Error',\n                description: '请填写需要广播的交易信息',\n              });\n              throw new Error('request is empty');\n            }\n            const res = await provider?.pushPsbt(request);\n            return res;\n          }}\n        />\n      </ApiGroup>\n\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","import BTCParams from '../btc/params';\n\nexport default {\n  ...BTCParams,\n  getUtxos: (address: string) => [\n    {\n      id: 'getUtxos',\n      name: 'getUtxos',\n      value: JSON.stringify({\n        address: address,\n        amount: 1000,\n      }),\n    },\n  ],\n  signMessageBip322: [\n    {\n      id: 'signMessageBip322',\n      name: 'signMessageBip322',\n      value: 'Hello World',\n    },\n  ],\n};\n"],"names":["DataView","getNative","__webpack_require__","module","exports","Promise","Set","WeakMap","baseGetTag","isObjectLike","value","isLength","typedArrayTags","length","isPrototype","nativeKeys","hasOwnProperty","objectProto","prototype","object","result","key","Object","call","push","func","Map","toSource","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","Ctor","constructor","undefined","ctorString","overArg","keys","freeGlobal","freeExports","nodeType","freeModule","freeProcess","moduleExports","process","nodeUtil","types","require","binding","e","transform","arg","baseIsArguments","propertyIsEnumerable","isArguments","arguments","isFunction","root","stubFalse","Buffer","nativeIsBuffer","isBuffer","baseKeys","isArray","isArrayLike","isTypedArray","splice","tag","size","baseIsTypedArray","baseUnary","nodeIsTypedArray","dapps","name","url","BTCExample","account","walletsRef","useRef","uuid","inject","provider","setAccount","useWallet","onConnectWallet","selectedWallet","providerDetail","current","find","w","id","reject","get","window","toast","title","description","address","requestAccounts","useEffect","accountsChangedHandler","console","log","accounts","networkChangedHandler","network","chainId","on","removeListener","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","jsx","ConnectButton","fetchWallets","map","wallet","onConnect","ApiGroup","ApiPayload","disableRequestContent","allowCallWithoutProvider","onExecute","request","res","connectWallet","JSON","stringify","indexOf","getAccounts","getAddress","getPublicKey","getPublicKeyHex","getBalance","toString","presupposeParams","params","getUtxos","amount","parse","getWalletProviderName","getNetworkFees","getBTCTipHeight","getNetwork","switchNetwork","signMessage","obj","msg","type","onValidate","response","publicKey","Verifier","verifySignature","verifyMessage","signMessageBip322","signMessageBIP322","sendBitcoin","toAddress","satoshis","isEmpty","pushTx","rawtx","signPsbt","psbtHex","options","psbt","bitcoin","fromHex","autoFinalized","finalizeAllInputs","toHex","generateRequestFrom","Input","label","defaultValue","onGenerateRequest","fromData","parseInt","gasPrice","createPSBT","testnet","pushPsbt","signPsbts","psbtHexs","forEach","index","psbtObj","pabtObj","DappList","__webpack_exports__","Z","BTCParams"],"sourceRoot":""}