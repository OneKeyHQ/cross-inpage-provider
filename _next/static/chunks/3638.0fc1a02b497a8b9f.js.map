{"version":3,"file":"static/chunks/3638.0fc1a02b497a8b9f.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lodash/_baseTrim.js","webpack://_N_E/./node_modules/lodash/_trimmedEndIndex.js","webpack://_N_E/./node_modules/lodash/debounce.js","webpack://_N_E/./node_modules/lodash/now.js","webpack://_N_E/./node_modules/lodash/toNumber.js","webpack://_N_E/./components/InputWithSave.tsx","webpack://_N_E/./components/chains/tron/dapps.config.ts","webpack://_N_E/./components/chains/tron/params.ts","webpack://_N_E/./components/chains/utils/OkLink.ts","webpack://_N_E/./components/chains/tron/example.tsx","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/<anon>"],"sourcesContent":["var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { debounce } from 'lodash';\nimport { Input } from './ui/input';\n\nexport type IInputWithSaveProps = {\n  storageKey: string;\n  onChange: (value: string) => void;\n  type?: 'text' | 'number';\n  defaultValue?: string;\n};\n\nexport function InputWithSave({\n  storageKey,\n  onChange,\n  defaultValue,\n  type = 'text',\n}: IInputWithSaveProps) {\n  const [inputValue, setInputValue] = useState('');\n\n  // 初始化时从 localStorage 中获取值\n  useEffect(() => {\n    const storedValue = localStorage.getItem(storageKey) || defaultValue || '';\n    setInputValue(storedValue);\n    onChange(storedValue);\n  }, [storageKey, defaultValue, onChange]);\n\n  // 使用 useCallback 来定义 debouncedChangeHandler\n  const debouncedChangeHandler = useCallback(\n    debounce((value: string) => {\n      localStorage.setItem(storageKey, value);\n      onChange(value);\n    }, 300),\n    [storageKey, onChange],\n  );\n\n  // 清除 debounce\n  useEffect(() => {\n    return () => debouncedChangeHandler.cancel();\n  }, [debouncedChangeHandler]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setInputValue(value);\n    debouncedChangeHandler(value);\n  };\n\n  return (\n    <Input\n      key={storageKey}\n      type={type}\n      value={inputValue}\n      className=\"w-full p-2 border border-gray-300 rounded-md\"\n      onChange={handleChange}\n      placeholder=\"输入内容\"\n    />\n  );\n}\n","export const dapps = [\n  {\n    name: 'SunSwap',\n    url: 'https://sunswap.com/#/home',\n  },\n  {\n    name: 'JustLendDAO',\n    url: 'https://app.justlend.org/#/home'\n  },\n  {\n    name: 'TRONSCAN',\n    url: 'https://tronscan.org/#/'\n  },\n  {\n    name: 'JUST CDP Portal',\n    url: 'https://juststable.tronscan.org/'\n  }\n];\n","export default {\n  addToken: [\n    {\n      id: 'watchAsset',\n      name: 'watchAsset',\n      value: JSON.stringify({\n        'type': 'trc20',\n        'options': {\n          'address': 'TF17BgPaZYbz8oxbjhriubPDsA7ArKoLX3',\n          'symbol': 'JUST GOV',\n          'decimals': 18,\n          'image': 'https://static.tronscan.org/production/logo/just_icon.png',\n        },\n      }),\n    },\n  ],\n  signMessage: [\n    {\n      id: 'signMessage',\n      name: 'signMessage',\n      value: '0x01020304',\n    },\n    {\n      id: 'signMessage-utf8',\n      name: 'signMessage-utf8',\n      value: 'hello',\n    },\n  ],\n  signMessageArray: [\n    {\n      id: 'signMessage-hex',\n      name: 'signMessage-hex',\n      value: '01020304',\n    },\n    {\n      id: 'signMessage-utf8-hex',\n      name: 'signMessage-utf8-hex',\n      value: '68656c6c6f',\n    },\n  ],\n  nativeTransfer: (address: string) => [\n    {\n      id: 'nativeTransfer',\n      name: 'nativeTransfer',\n      value: JSON.stringify({\n        to: address,\n        amount: 1000000,\n      }),\n    },\n  ],\n  contractTransfer: (address: string) => [\n    {\n      id: 'contractTransfer-send-usdc-token',\n      name: 'Send USDC Token',\n      value: JSON.stringify({\n        contractAddress: 'TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t',\n        contractFunction: 'transfer(address,uint256)',\n        options: {},\n        params: [\n          { type: 'address', value: address },\n          { type: 'uint256', value: '100' },\n        ],\n      }),\n    },\n    {\n      id: 'contractTransfer-approve-usdc-token',\n      name: 'Approve USDC Token',\n      value: JSON.stringify({\n        contractAddress: 'TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t',\n        contractFunction: 'approve(address,uint256)',\n        options: {},\n        params: [\n          { type: 'address', value: address },\n          { type: 'uint256', value: '100000' },\n        ],\n      }),\n    },\n  ],\n  freezeBalanceV2: (address: string) => [\n    {\n      id: 'freezeBalanceV2-1',\n      name: 'FreezeBalanceV2 Bandwidth',\n      value: JSON.stringify({\n        amount: 1,\n        resource: 'BANDWIDTH',\n        address,\n        options: {},\n      }),\n    },\n    {\n      id: 'freezeBalanceV2-2',\n      name: 'FreezeBalanceV2 ENERGY',\n      value: JSON.stringify({\n        amount: 1,\n        resource: 'ENERGY',\n        address,\n        options: {},\n      }),\n    },\n  ],\n  unfreezeBalanceV2: (address: string) => [\n    {\n      id: 'unfreezeBalanceV2-1',\n      name: 'unfreezeBalanceV2 Bandwidth',\n      value: JSON.stringify({\n        amount: 1,\n        resource: 'BANDWIDTH',\n        address,\n        options: {},\n      }),\n    },\n    {\n      id: 'unfreezeBalanceV2-2',\n      name: 'unfreezeBalanceV2 ENERGY',\n      value: JSON.stringify({\n        amount: 1,\n        resource: 'ENERGY',\n        address,\n        options: {},\n      }),\n    },\n  ],\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport axios, { AxiosInstance } from 'axios';\n\ntype PageInfo<T> = {\n  page: number;\n  limit: number;\n  totalPage: number;\n  chainFullName: string;\n  chainShortName: string;\n  tokenList: T[];\n};\n\ntype BaseResponse<T> = {\n  code: number;\n  msg: string;\n  data: PageInfo<T>[];\n};\n\nexport type OkLinkTokenInfo = {\n  tokenFullName: string;\n  token: string;\n  precision: string;\n  tokenContractAddress: string;\n  protocolType: string;\n  logoUrl: string;\n};\n\nclass OKLinkRequest {\n  private axiosInstance: AxiosInstance;\n  private cache: Record<string, any> = {};\n\n  constructor() {\n    this.axiosInstance = axios.create({\n      baseURL: 'https://www.oklink.com/api/v5/explorer',\n      headers: {\n        'Content-Type': 'application/json',\n        'Ok-Access-Key': process.env.NEXT_PUBLIC_OKLINK_API_KEY,\n      },\n    });\n  }\n\n  async getTokenList(\n    chainName: 'TRON',\n    tokenType: 'TRC20' | undefined,\n  ): Promise<OkLinkTokenInfo[]> {\n    const cacheKey = `${chainName}-${tokenType}`;\n    if (this.cache[cacheKey]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return this.cache[cacheKey];\n    }\n\n    const res = await this.axiosInstance\n      .get<BaseResponse<OkLinkTokenInfo>>(`/token/token-list?chainShortName=${chainName}&limit=50`)\n      .catch((err) => {\n        console.error(err);\n        return { data: { data: [] } };\n      });\n\n    const tokenList =\n      res.data?.data?.[0]?.tokenList?.filter((token: { protocolType: string }) => {\n        if (tokenType) {\n          return token.protocolType === tokenType;\n        }\n        return true;\n      }) ?? [];\n\n    this.cache[cacheKey] = tokenList;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return tokenList;\n  }\n}\n\nexport const okLinkRequest = new OKLinkRequest();\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-return */\n/* eslint-disable no-unsafe-optional-chaining */\nimport { dapps } from './dapps.config';\nimport ConnectButton from '../../../components/connect/ConnectButton';\nimport { memo, useEffect, useRef, useState } from 'react';\nimport { get } from 'lodash';\nimport { IProviderApi, IProviderInfo, ITIP6963AnnounceProviderEvent, ITIP6963ProviderDetail } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../../components/connect/WalletContext';\nimport type { IKnownWallet } from '../../../components/connect/types';\nimport DappList from '../../../components/DAppList';\nimport params from './params';\nimport { InputWithSave } from '../../InputWithSave';\nimport { toast } from '../../ui/use-toast';\nimport { ApiComboboxRef, ApiForm, ApiFormRef, ComboboxOption } from '../../ApiForm';\nimport { okLinkRequest } from '../utils/OkLink';\n\ntype ITokenOption = {\n  type: string;\n  options: {\n    address: string;\n    symbol: string;\n    decimals: string;\n    image: string;\n  };\n};\n\n\nconst WalletWatchAsset = memo(() => {\n  const apiFromRef = useRef<ApiFormRef>(null);\n  const apiFromComboboxRef = useRef<ApiComboboxRef<ITokenOption>>(null);\n\n  const { provider } = useWallet<IProviderApi>();\n\n  useEffect(() => {\n    void okLinkRequest.getTokenList('TRON', 'TRC20').then((tokens) => {\n      const tokenOptions: ComboboxOption<ITokenOption>[] = tokens.map((token) => ({\n        value: token.tokenContractAddress,\n        label: `${token.token} - ${token.tokenContractAddress}`,\n        extra: {\n          type: 'trc20',\n          options: {\n            address: token.tokenContractAddress,\n            symbol: token.token,\n            decimals: token.precision,\n            image: token.logoUrl,\n          },\n        },\n      }));\n\n      apiFromComboboxRef.current?.setOptions(tokenOptions);\n    });\n  }, []);\n\n  return (\n    <ApiForm\n      title=\"wallet_watchAsset TRC20\"\n      description=\"(V5 不支持) 添加 TRC20 资产\"\n      ref={apiFromRef}\n    >\n      <ApiForm.Combobox\n        ref={apiFromComboboxRef}\n        id=\"tokenSelector\"\n        label=\"预设参数\"\n        placeholder=\"请选择 TRC20 Token\"\n        onOptionChange={(option) => {\n          apiFromRef.current?.setJsonValue('request', option?.extra);\n        }}\n      />\n\n      <ApiForm.JsonEdit id=\"request\" label=\"请求(可以手动编辑)\" required />\n\n      <ApiForm.Button\n        id=\"watchButton\"\n        label=\"观察 Asset\"\n        onClick={async () => {\n          const res = await provider?.request({\n            'method': 'wallet_watchAsset',\n            'params': JSON.parse(apiFromRef.current?.getValue('request') ?? ''),\n          });\n          apiFromRef.current?.setValue('response', JSON.stringify(res, null, 2));\n        }}\n        availableDependencyFields={[{ fieldIds: ['request'] }]}\n        validation={{\n          fields: ['request'],\n          validator: (values) => {\n            if (!values.request) {\n              return '请选择 TRC20 Token';\n            }\n          },\n        }}\n      />\n\n      <ApiForm.TextArea id=\"response\" label=\"执行结果\" />\n    </ApiForm>\n  );\n});\n\nexport default function Example() {\n  const walletsRef = useRef<ITIP6963ProviderDetail[]>([\n    {\n      info: {\n        uuid: 'injected',\n        name: 'Injected Wallet',\n        inject: 'tronLink',\n      }\n    },\n    {\n      info: {\n        uuid: 'injected-onekey',\n        name: 'Injected OneKey',\n        inject: '$onekey.tron',\n      }\n    },\n  ]);\n\n  const { provider, setAccount, account } = useWallet<IProviderApi>();\n  const [receiveAddress, setReceiveAddress] = useState<string>('');\n\n  const onConnectWallet = async (selectedWallet: IKnownWallet) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const providerDetail = walletsRef.current?.find((w) => w.info.uuid === selectedWallet.id);\n    if (!providerDetail) {\n      return Promise.reject('Wallet not found');\n    }\n\n    const provider = providerDetail.provider ?? get(window, providerDetail.info.inject) as IProviderApi | undefined;\n\n    if (!provider) {\n      toast({\n        title: 'Wallet not found',\n        description: 'Please install the wallet extension',\n      });\n      return;\n    }\n\n    let tronWeb;\n    // @ts-expect-error\n    if (provider.ready) {\n      tronWeb = provider.tronWeb;\n    } else {\n      const res = await provider.request({ method: 'tron_requestAccounts' });\n      // @ts-expect-error\n      if (res.code === 200) {\n        tronWeb = provider.tronWeb;\n      }\n    }\n\n    let address = tronWeb?.defaultAddress?.base58 as string\n    if(!address) {\n      const [addr] = await provider.request<string[]>({ method: 'tron_accounts' });\n      address = addr;\n    }\n\n    // const [address] = await provider.request<string[]>({ method: 'tron_accounts' });\n    return {\n      provider,\n      address,\n      // address: address,\n    };\n  };\n\n  useEffect(() => {\n    if (!provider) return;\n    if (provider?.tronWeb?.defaultAddress?.base58) {\n      // @ts-expect-error\n      setAccount((pre) => {\n        return {\n          ...pre,\n          address: provider.tronWeb.defaultAddress.base58,\n        };\n      });\n    }\n  }, [provider]);\n\n  useEffect(() => {\n    const listener = (event: ITIP6963AnnounceProviderEvent) => {\n      console.log('tron tip6963 [listener]', event);\n      const { info, provider } = event.detail;\n      const wallet = walletsRef.current.find((wallet) => wallet.info.uuid === info.uuid);\n      if (!wallet) {\n        walletsRef.current = [\n          ...walletsRef.current,\n          {\n            info,\n            provider,\n          },\n        ];\n      }\n    };\n\n    // @ts-expect-error\n    window.addEventListener('TIP6963:announceProvider', listener);\n\n    window.dispatchEvent(new Event('TIP6963:requestProvider'));\n\n    return () => {\n      // @ts-expect-error\n      window.removeEventListener('TIP6963:announceProvider', listener);\n    };\n  }, []);\n\n  const checkReceiveAddress = () => {\n    if (account.address === receiveAddress) {\n      toast({\n        title: '温馨提示 (不是报错)',\n        description: 'Tron 收款地址不能与发送地址相同',\n      });\n    }\n  };\n\n  useEffect(() => {\n    const accountsChangedHandler = (e: {\n      data: {\n        isTronLink: boolean;\n        message: {\n          action: string;\n          data: any;\n        };\n      };\n    }) => {\n      if (e.data.message && e.data.message.action === 'accountsChanged') {\n        console.log('tron [accountsChanged]', e?.data?.message?.data);\n\n        const { address } = e?.data?.message?.data;\n        if (address) {\n          setAccount({\n            ...account,\n            address,\n          });\n        }\n      }\n      if (e.data.message && e.data.message.action === 'setNode') {\n        console.log('tron [setNode]', e?.data?.message?.data);\n        // const { address } = e.data.message.data;\n        // setAccount({\n        //   ...account,\n        //   address,\n        // });\n      }\n      if (e.data.message && e.data.message.action === 'setAccount') {\n        console.log('tron [setAccount]', e?.data?.message?.data);\n      }\n      if (e.data.message && e.data.message.action === 'connect') {\n        console.log('tron [connect]', e?.data?.message?.data);\n      }\n\n      if (e.data.message && e.data.message.action === 'disconnect') {\n        console.log('tron [disconnect]', e?.data?.message?.data);\n      }\n    };\n\n    window.addEventListener('message', accountsChangedHandler);\n\n    return () => {\n      window.removeEventListener('message', accountsChangedHandler);\n    };\n  }, [account, provider, setAccount]);\n\n  useEffect(() => {\n    if (!provider) return;\n    provider.on('accountsChanged', (accounts: string[]) => {\n      console.log('TIP6963 tron [accountsChanged]', accounts);\n    });\n\n    provider.on('chainChanged', (chainId: string) => {\n      console.log('TIP6963 tron [chainChanged]', chainId);\n    });\n\n    return () => {\n      provider.removeListener('accountsChanged', (accounts: string[]) => {\n        console.log('TIP6963 tron [accountsChanged]', accounts);\n      });\n\n      provider.removeListener('chainChanged', (chainId: string) => {\n        console.log('TIP6963 tron [chainChanged]', chainId);\n      });\n    };\n  }, [provider]);\n\n  return (\n    <>\n      <ConnectButton<IProviderApi>\n        fetchWallets={() => {\n          return Promise.resolve(\n            walletsRef.current.map((wallet) => {\n              return {\n                id: wallet.info.uuid,\n                name: `${wallet.info.name}${wallet.provider ? ' (TIP6963)' : ''}`,\n                logo: wallet.info.icon,\n              };\n            }),\n          );\n        }}\n        onConnect={onConnectWallet}\n      />\n      <ApiGroup title=\"设置所有 Case 收款地址\">\n        <InputWithSave\n          storageKey=\"tron-receive-address\"\n          onChange={setReceiveAddress}\n          defaultValue={account?.address}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Primitive Basics\">\n        <ApiPayload\n          title=\"tron_requestAccounts\"\n          description=\"连接钱包, TronLink 需要解锁不然失败。\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.request<string[]>({\n              method: 'tron_requestAccounts',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"tron_getProviderState\"\n          description=\"获取钱包状态\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string>({\n              method: 'tron_getProviderState',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"tron_accounts\"\n          description=\"获取账户\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string[]>({\n              method: 'tron_accounts',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"TronWeb Basics\">\n        <ApiPayload\n          title=\"getAccount\"\n          description=\"获取账户信息\"\n          disableRequestContent\n          onExecute={async () => {\n            const tronWeb = provider.tronWeb;\n            const res = await tronWeb.trx.getAccount(account.address);\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"getBalance\"\n          description=\"获取账户余额\"\n          disableRequestContent\n          onExecute={async () => {\n            const tronWeb = provider.tronWeb;\n            const res = await tronWeb.trx.getBalance(account.address);\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"getNodeInfo\"\n          description=\"获取节点\"\n          disableRequestContent\n          onExecute={async () => {\n            const tronWeb = provider.tronWeb;\n            const res = await tronWeb.trx.getNodeInfo();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"listNodes\"\n          description=\"获取节点\"\n          disableRequestContent\n          onExecute={async () => {\n            const tronWeb = provider.tronWeb;\n            const res = await tronWeb.trx.listNodes();\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"资产相关\">\n        <WalletWatchAsset />\n      </ApiGroup>\n      <ApiGroup title=\"SignMessage\">\n        <ApiPayload\n          title=\"SignMessage\"\n          description=\"（官方废弃，暂不支持）签名消息\"\n          presupposeParams={params.signMessage}\n          onExecute={async (request: string) => {\n            const tronWeb = provider.tronWeb;\n            const signedString = await tronWeb.trx.signMessage(request);\n            return signedString;\n          }}\n          onValidate={async (request: string, result: string) => {\n            const tronWeb = provider.tronWeb;\n\n            let signedStr = result;\n            const tail = signedStr.substring(128, 130);\n            if (tail == '01') {\n              signedStr = `${signedStr.substring(0, 128)}1c`;\n            } else if (tail == '00') {\n              signedStr = `${signedStr.substring(0, 128)}1b`;\n            }\n\n            // verify the signature\n            const res = await tronWeb.trx.verifyMessage(\n              request,\n              signedStr,\n              tronWeb.defaultAddress.base58,\n            );\n\n            return Promise.resolve(res.toString());\n          }}\n        />\n        <ApiPayload\n          title=\"SignMessage V2\"\n          description=\"签名消息\"\n          presupposeParams={params.signMessage}\n          onExecute={async (request: string) => {\n            const tronWeb = provider.tronWeb;\n            const signedString = tronWeb.trx.signMessageV2(request);\n            return Promise.resolve(signedString);\n          }}\n          onValidate={async (request: string, result: string) => {\n            const tronWeb = provider.tronWeb;\n\n            // verify the signature\n            const res = await tronWeb.trx.verifyMessageV2(request, result);\n            const isValid = res === tronWeb.defaultAddress.base58;\n            return Promise.resolve(isValid.toString());\n          }}\n        />\n        <ApiPayload\n          title=\"SignMessage V2 Array\"\n          description=\"签名消息 Array(only support hex)\"\n          presupposeParams={params.signMessageArray}\n          onExecute={async (request: string) => {\n            const tronWeb = provider.tronWeb;\n            const signedString = tronWeb.trx.signMessageV2(Buffer.from(request, 'hex'));\n            return Promise.resolve(signedString);\n          }}\n          onValidate={async (request: string, result: string) => {\n            const tronWeb = provider.tronWeb;\n\n            // verify the signature\n            const res = await tronWeb.trx.verifyMessageV2(Buffer.from(request, 'hex'), result);\n            const isValid = res === tronWeb.defaultAddress.base58;\n            return Promise.resolve(isValid.toString());\n          }}\n        />\n      </ApiGroup>\n      <ApiGroup title=\"Transfer\">\n        <ApiPayload\n          title=\"sign (NativeTransfer)\"\n          description=\"发送普通交易\"\n          presupposeParams={params.nativeTransfer(receiveAddress ?? '')}\n          onExecute={async (request: string) => {\n            checkReceiveAddress();\n\n            const { to, amount } = JSON.parse(request);\n\n            const tronWeb = provider.tronWeb;\n            const tx = await tronWeb.transactionBuilder.sendTrx(to, amount, account.address);\n            console.log('tx', tx);\n\n            const signedTx = await tronWeb.trx.sign(tx);\n            const broastTx = await tronWeb.trx.sendRawTransaction(signedTx);\n            console.log('broastTx', broastTx);\n\n            return JSON.stringify(broastTx);\n          }}\n        />\n\n        <ApiPayload\n          title=\"sign (SmartContractTransfer)\"\n          description=\"发送合约交易\"\n          presupposeParams={params.contractTransfer(receiveAddress ?? '')}\n          onExecute={async (request: string) => {\n            checkReceiveAddress();\n\n            const { contractAddress, contractFunction, options, params } = JSON.parse(request);\n\n            const tronWeb = provider.tronWeb;\n            const tx = await tronWeb.transactionBuilder.triggerSmartContract(\n              contractAddress,\n              contractFunction,\n              options,\n              params,\n            );\n            const signedTx = await tronWeb.trx.sign(tx.transaction);\n            const broastTx = await tronWeb.trx.sendRawTransaction(signedTx);\n            return JSON.stringify(broastTx);\n          }}\n        />\n\n        <ApiPayload\n          title=\"sign (FreezeBalanceV2)\"\n          description=\"冻结余额 V2\"\n          presupposeParams={params.freezeBalanceV2(receiveAddress ?? '')}\n          onExecute={async (request: string) => {\n            checkReceiveAddress();\n\n            const { amount, resource, address, options } = JSON.parse(request);\n\n            const tronWeb = provider.tronWeb;\n            const tx = await tronWeb.transactionBuilder.freezeBalanceV2(\n              amount,\n              resource,\n              address,\n              options,\n            );\n            const signedTx = await tronWeb.trx.sign(tx);\n            const broastTx = await tronWeb.trx.sendRawTransaction(signedTx);\n            return JSON.stringify(broastTx);\n          }}\n        />\n        <ApiPayload\n          title=\"sign (CancelUnfreezeBalanceV2)\"\n          description=\"取消等待中的质押\"\n          onExecute={async (request: string) => {\n            checkReceiveAddress();\n            const tronWeb = provider.tronWeb;\n            const tx = await tronWeb.transactionBuilder.cancelUnfreezeBalanceV2(\n              tronWeb.defaultAddress.base58 as string,\n            );\n            const signedTx = await tronWeb.trx.sign(tx);\n            const broastTx = await tronWeb.trx.sendRawTransaction(signedTx);\n            return JSON.stringify(broastTx);\n          }}\n        />\n        <ApiPayload\n          title=\"sign (UnfreezeBalanceV2)\"\n          description=\"解除质押资源 V2\"\n          presupposeParams={params.unfreezeBalanceV2(receiveAddress ?? '')}\n          onExecute={async (request: string) => {\n            checkReceiveAddress();\n\n            const { amount, resource, address, options } = JSON.parse(request);\n            const tronWeb = provider.tronWeb;\n            const tx = await tronWeb.transactionBuilder.unfreezeBalanceV2(\n              amount,\n              resource,\n              address,\n              options,\n            );\n            const signedTx = await tronWeb.trx.sign(tx);\n            const broastTx = await tronWeb.trx.sendRawTransaction(signedTx);\n            return JSON.stringify(broastTx);\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"TIP6963 Only\" >\n        <ApiPayload\n          title=\"eth_requestAccounts\"\n          description=\"请求连接 Wallet 获取账户\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.request<string[]>({\n              method: 'eth_requestAccounts',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n\n        <ApiPayload\n          title=\"wallet_accounts\"\n          description=\"获取已连接账户\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.request<string[]>({\n              method: 'wallet_accounts',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n\n        <ApiPayload\n          title=\"eth_chainId\"\n          description=\"获取当前网络\"\n          onExecute={async (request: string) => {\n            const res = await provider?.request<string>({\n              method: 'eth_chainId',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_switchEthereumChain\"\n          description=\"切换网络\"\n          presupposeParams={[\n            {\n              id: 'chainId-mainnet',\n              name: '网络 ID Mainnet',\n              value: JSON.stringify({\n                \"chainId\": \"0x2b6653dc\",\n              }),\n            },\n            {\n              id: 'chainId-mainnet',\n              name: '网络 ID Mainnet',\n              value: JSON.stringify({\n                \"chainId\": \"0x7a69d1ed\",\n              }),\n            },\n          ]}\n          onExecute={async (request: string) => {\n            const res = await provider?.request<string[]>({\n              method: 'wallet_switchEthereumChain',\n              params: [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"personal_sign\"\n          description=\"签名\"\n          presupposeParams={params.signMessage}\n          onExecute={async (request: string) => {\n            const tronWeb = provider?.request({\n              method: 'personal_sign',\n              params: [request],\n            });\n            return Promise.resolve(tronWeb);\n          }}\n          onValidate={async (request: string, result: string) => {\n            const tronWeb = provider.tronWeb;\n\n            // verify the signature\n            const res = await tronWeb.trx.verifyMessageV2(request, result);\n            const isValid = res === tronWeb.defaultAddress.base58;\n            return Promise.resolve(isValid.toString());\n          }}\n        />\n        <ApiPayload\n          title=\"eth_signTransaction\"\n          description=\"签名交易\"\n          presupposeParams={params.nativeTransfer(receiveAddress ?? '')}\n          onExecute={async (request: string) => {\n            checkReceiveAddress();\n\n            const { to, amount } = JSON.parse(request);\n\n            const tronWeb = provider.tronWeb;\n            const tx = await tronWeb.transactionBuilder.sendTrx(to, amount, account.address);\n            console.log('tx', tx);\n\n            const signedTx = await provider?.request<any>({\n              method: 'eth_signTransaction',\n              params: [tx],\n            });\n            const broastTx = await tronWeb.trx.sendRawTransaction(signedTx);\n            console.log('broastTx', broastTx);\n\n            return JSON.stringify(broastTx);\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_disconnect\"\n          description=\"断开连接\"\n          onExecute={async (request: string) => {\n            const tronWeb = provider?.request({\n              method: 'wallet_disconnect'\n            });\n            return Promise.resolve(tronWeb);\n          }}\n        />\n      </ApiGroup>\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":["trimmedEndIndex","__webpack_require__","reTrimStart","module","exports","string","slice","replace","reWhitespace","index","length","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timeSinceLastInvoke","timerExpired","timeWaiting","trailingEdge","setTimeout","debounced","isInvoking","arguments","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","value","other","valueOf","isBinary","InputWithSave","param","storageKey","onChange","defaultValue","type","inputValue","setInputValue","useState","useEffect","storedValue","localStorage","getItem","debouncedChangeHandler","useCallback","debounce","setItem","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Input","className","event","target","placeholder","dapps","name","url","params","addToken","id","JSON","stringify","signMessage","signMessageArray","nativeTransfer","to","address","amount","contractTransfer","contractAddress","contractFunction","freezeBalanceV2","resource","unfreezeBalanceV2","okLinkRequest","getTokenList","chainName","tokenType","res","cacheKey","concat","cache","axiosInstance","get","catch","console","error","err","data","tokenList","filter","token","protocolType","constructor","axios","create","baseURL","headers","process","WalletWatchAsset","memo","apiFromRef","useRef","apiFromComboboxRef","provider","useWallet","then","tokenOptions","tokens","map","tokenContractAddress","label","extra","symbol","decimals","precision","image","logoUrl","current","setOptions","jsx_runtime","jsxs","ApiForm","title","description","ref","Combobox","onOptionChange","setJsonValue","option","JsonEdit","required","Button","onClick","request","parse","getValue","setValue","availableDependencyFields","fieldIds","validation","fields","validator","values","TextArea","Example","walletsRef","info","uuid","inject","setAccount","account","receiveAddress","setReceiveAddress","onConnectWallet","selectedWallet","tronWeb","providerDetail","find","w","Promise","reject","window","toast","ready","method","code","defaultAddress","base58","addr","pre","listener","log","detail","wallet","addEventListener","dispatchEvent","Event","removeEventListener","checkReceiveAddress","accountsChangedHandler","e","message","action","on","accounts","chainId","removeListener","Fragment","ConnectButton","fetchWallets","resolve","logo","icon","onConnect","ApiGroup","ApiPayload","disableRequestContent","onExecute","trx","getAccount","getBalance","getNodeInfo","listNodes","presupposeParams","signedString","onValidate","signedStr","tail","substring","verifyMessage","toString","signMessageV2","verifyMessageV2","isValid","Buffer","from","tx","transactionBuilder","sendTrx","signedTx","sign","broastTx","sendRawTransaction","triggerSmartContract","transaction","cancelUnfreezeBalanceV2","DappList","accountInfoKeys","publicKey","onDisconnect","settings","useSettings","connectDialogRef","autoConnectedRef","wallets","setWallets","setProvider","connectWallet","_provider","accountInfo","disconnectWallet","closeDialog","click","connectWalletWithDialog","directConnection","timeout","autoConnect","Card","CardContent","div","Dialog","DialogTrigger","asChild","DialogContent","DialogClose","DialogHeader","DialogTitle","img","alt","src","span","tags","tag","DialogDescription","a","href","variant","Object","keys","key"],"sourceRoot":""}