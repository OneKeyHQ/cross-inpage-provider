{"version":3,"file":"static/chunks/3512.ea3cdfebfe410ffd.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lodash/_baseTrim.js","webpack://_N_E/./node_modules/lodash/_trimmedEndIndex.js","webpack://_N_E/./node_modules/lodash/debounce.js","webpack://_N_E/./node_modules/lodash/now.js","webpack://_N_E/./node_modules/lodash/toNumber.js","webpack://_N_E/./components/InputWithSave.tsx","webpack://_N_E/./components/chains/tools/loopEvmSignMessage.tsx","webpack://_N_E/./components/chains/tools/loopEvmSignTx.tsx","webpack://_N_E/./components/chains/tools/multipleCallConnectWallet.tsx","webpack://_N_E/./components/chains/tools/multipleCallSignMessage.tsx","webpack://_N_E/./components/chains/tools/multipleCallSignTx.tsx","webpack://_N_E/./components/chains/tools/example.tsx","webpack://_N_E/<anon>"],"sourcesContent":["var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { debounce } from 'lodash';\nimport { Input } from './ui/input';\n\nexport type IInputWithSaveProps = {\n  storageKey: string;\n  onChange: (value: string) => void;\n  type?: 'text' | 'number';\n  defaultValue?: string;\n};\n\nexport function InputWithSave({\n  storageKey,\n  onChange,\n  defaultValue,\n  type = 'text',\n}: IInputWithSaveProps) {\n  const [inputValue, setInputValue] = useState('');\n\n  // 初始化时从 localStorage 中获取值\n  useEffect(() => {\n    const storedValue = localStorage.getItem(storageKey) || defaultValue || '';\n    setInputValue(storedValue);\n    onChange(storedValue);\n  }, [storageKey, defaultValue, onChange]);\n\n  // 使用 useCallback 来定义 debouncedChangeHandler\n  const debouncedChangeHandler = useCallback(\n    debounce((value: string) => {\n      localStorage.setItem(storageKey, value);\n      onChange(value);\n    }, 300),\n    [storageKey, onChange],\n  );\n\n  // 清除 debounce\n  useEffect(() => {\n    return () => debouncedChangeHandler.cancel();\n  }, [debouncedChangeHandler]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setInputValue(value);\n    debouncedChangeHandler(value);\n  };\n\n  return (\n    <Input\n      key={storageKey}\n      type={type}\n      value={inputValue}\n      className=\"w-full p-2 border border-gray-300 rounded-md\"\n      onChange={handleChange}\n      placeholder=\"输入内容\"\n    />\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { useEffect, useRef, useState } from 'react';\nimport { Button } from '../../ui/button';\nimport { Card, CardContent, CardDescription, CardHeader } from '../../ui/card';\nimport { Switch } from '../../ui/switch';\nimport { InputWithSave } from '../../InputWithSave';\nimport { get } from 'lodash';\n\nexport function LoopEvmSignMessage() {\n  const [account, setAccount] = useState<string>();\n  const [callInterval, setCallInterval] = useState<number>(1000);\n  const [switchChecked, setSwitchChecked] = useState<boolean>(false);\n  const countRef = useRef(0);\n\n  const connectWallet = async () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    const [address] = await window?.ethereum?.request({\n      'method': 'eth_requestAccounts',\n      'params': [],\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    setAccount(address);\n  };\n\n  const handleSignMessage = async (count: number) => {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      const res = await window?.ethereum?.request({\n        'method': 'personal_sign',\n        'params': [`call ${count}`, account],\n      });\n      console.log(`personal_sign ${count} result`, res);\n    } catch (error: any) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      console.log(`personal_sign ${count} error`, get(error, 'message', ''));\n    }\n  };\n\n  const handleBatchSignMessage = async (count: number) => {\n    console.log(`Batch sign message start ===>`);\n    const promises = Array.from({ length: count }, (_, i) => {\n      return handleSignMessage(i);\n    });\n\n    await Promise.all(promises);\n  };\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    if (switchChecked) {\n      if (!account) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        connectWallet();\n      }\n\n      timer = setInterval(() => {\n        countRef.current += 1;\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handleSignMessage(countRef.current);\n      }, callInterval);\n    } else {\n      clearInterval(timer);\n    }\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [account, callInterval, switchChecked]);\n\n  return (\n    <Card>\n      <CardHeader className=\"text-xl font-medium\">调用 EVM Persional</CardHeader>\n      <CardDescription>用于测试无限循环调用</CardDescription>\n\n      <CardContent>\n        <div className=\"flex flex-col gap-5\">\n          <Button onClick={connectWallet}>连接钱包</Button>\n\n          {account && <div className=\"text-sm text-gray-500\">当前账号：{account}</div>}\n\n          <div>\n            <p>循环调用间隔时间 (ms)</p>\n            <InputWithSave\n              type=\"number\"\n              storageKey=\"loop-call-interval\"\n              defaultValue=\"1000\"\n              onChange={(value) => {\n                setCallInterval(Number(value));\n              }}\n            />\n          </div>\n          <Button onClick={() => handleBatchSignMessage(10)}>连续调用 10 次</Button>\n\n          <div>\n            <p>循环调用开关</p>\n            <Switch checked={switchChecked} onCheckedChange={setSwitchChecked} />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { useEffect, useRef, useState } from 'react';\nimport { Button } from '../../ui/button';\nimport { Card, CardContent, CardDescription, CardHeader } from '../../ui/card';\nimport { Switch } from '../../ui/switch';\nimport { InputWithSave } from '../../InputWithSave';\nimport { get } from 'lodash';\n\nexport function LoopEvmSignTx() {\n  const [account, setAccount] = useState<string>();\n  const [callInterval, setCallInterval] = useState<number>(1000);\n  const [switchChecked, setSwitchChecked] = useState<boolean>(false);\n  const countRef = useRef(0);\n\n  const connectWallet = async () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    const [address] = await window?.ethereum?.request({\n      'method': 'eth_requestAccounts',\n      'params': [],\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    setAccount(address);\n  };\n\n  const handleSignTx = async (from: string, to: string, count: number) => {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      const res = await window?.ethereum?.request({\n        'method': 'eth_sendTransaction',\n        'params': [\n          {\n            from: from,\n            to: to,\n            value: `0x${Number(count).toString(16)}`,\n            gasLimit: '0x5028',\n            gasPrice: '0xbebc200',\n          },\n        ],\n      });\n      console.log(`eth_sendTransaction ${count} result`, res);\n    } catch (error: any) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      console.log(`eth_sendTransaction ${count} error`, get(error, 'message', ''));\n    }\n  };\n\n  const handleBatchSignTx = async (count: number) => {\n    console.log(`Batch sign tx start ===>`);\n\n    const promises = Array.from({ length: count }, (_, i) => {\n      return handleSignTx(account, account, i);\n    });\n\n    await Promise.all(promises);\n  };\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    if (switchChecked) {\n      if (!account) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        connectWallet();\n      }\n\n      timer = setInterval(() => {\n        countRef.current += 1;\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handleSignTx(account, account, countRef.current);\n      }, callInterval);\n    } else {\n      clearInterval(timer);\n    }\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, [account, callInterval, switchChecked]);\n\n  return (\n    <Card>\n      <CardHeader className=\"text-xl font-medium\">调用 EVM eth_sendTransaction</CardHeader>\n      <CardDescription>用于测试无限循环调用</CardDescription>\n\n      <CardContent>\n        <div className=\"flex flex-col gap-5\">\n          <Button onClick={connectWallet}>连接钱包</Button>\n\n          {account && <div className=\"text-sm text-gray-500\">当前账号：{account}</div>}\n\n          <div>\n            <p>循环调用间隔时间 (ms)</p>\n            <InputWithSave\n              type=\"number\"\n              storageKey=\"loop-call-interval\"\n              defaultValue=\"1000\"\n              onChange={(value) => {\n                setCallInterval(Number(value));\n              }}\n            />\n          </div>\n          <Button onClick={() => handleBatchSignTx(10)}>连续调用 10 次</Button>\n\n          <div>\n            <p>循环调用开关</p>\n            <Switch checked={switchChecked} onCheckedChange={setSwitchChecked} />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import { Button } from '../../ui/button';\nimport { Card, CardContent, CardDescription, CardHeader } from '../../ui/card';\nimport { get } from 'lodash';\n\nconst connectWalletMap = {\n  evm: async () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    const [address] = await window?.ethereum?.request({\n      'method': 'eth_requestAccounts',\n      'params': [],\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return\n    return address;\n  },\n  cfx: async () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    const [address] = await window?.conflux?.request({\n      'method': 'cfx_requestAccounts',\n      'params': [],\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return\n    return address;\n  },\n  btc: async () => {\n    // @ts-expect-error\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining\n    const [address] = await window?.unisat?.requestAccounts();\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return\n    return address;\n  },\n  aptos: async () => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    const { address } = await window?.aptos?.connect();\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return\n    return address;\n  },\n};\n\nexport function MultipleCallConnectWallet() {\n  const connectWallet = () => {\n    console.log(`Connect wallet start ===>`);\n    Object.keys(connectWalletMap).forEach(async (key) => {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      connectWalletMap[key]()\n        .then((address: string) => {\n          console.log(`Connect wallet ${key} address`, address);\n        })\n        .catch((error: any) => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          console.log(`Connect wallet ${key} error`, get(error, 'message', ''));\n        });\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    });\n  };\n\n  return (\n    <Card>\n      <CardHeader className=\"text-xl font-medium\">连接 EVM、CFX、APTOS、BTC 账户</CardHeader>\n      <CardDescription>用于测试并发多链连接 wallet</CardDescription>\n\n      <CardContent>\n        <div className=\"flex flex-col gap-5\">\n          <Button onClick={connectWallet}>批量连接钱包</Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable no-unsafe-optional-chaining */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { Button } from '../../ui/button';\nimport { Card, CardContent, CardDescription, CardHeader } from '../../ui/card';\nimport { get } from 'lodash';\n\nconst SignMessageMap = {\n  evm: async () => {\n    const [address] = await window?.ethereum?.request({\n      'method': 'eth_requestAccounts',\n      'params': [],\n    });\n\n    const res = await window?.ethereum?.request({\n      'method': 'personal_sign',\n      'params': [`call sign message`, address],\n    });\n\n    return JSON.stringify(res);\n  },\n  cfx: async () => {\n    const [address] = await window?.conflux?.request({\n      'method': 'cfx_requestAccounts',\n      'params': [],\n    });\n\n    const res = await window?.conflux?.request({\n      'method': 'personal_sign',\n      'params': [`call sign message`, address],\n    });\n\n    return JSON.stringify(res);\n  },\n  btc: async () => {\n    // @ts-expect-error\n    const res = await window?.unisat?.signMessage('Hello');\n    return JSON.stringify(res);\n  },\n  aptos: async () => {\n    const res = await window?.aptos?.signMessage({\n      address: false,\n      application: true,\n      chainId: true,\n      message: 'This is a sample message',\n      nonce: 12345,\n    });\n    return JSON.stringify(res);\n  },\n};\n\nexport function MultipleCallSignMessage() {\n  const connectWallet = () => {\n    console.log(`Call wallet Sign Message start ===>`);\n    Object.keys(SignMessageMap).forEach(async (key) => {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      SignMessageMap[key]()\n        .then((address: string) => {\n          console.log(`Call wallet Sign Message ${key} address`, address);\n        })\n        .catch((error: any) => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          console.log(`Call wallet Sign Message ${key} error`, get(error, 'message', ''));\n        });\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    });\n  };\n\n  return (\n    <Card>\n      <CardHeader className=\"text-xl font-medium\">\n        调用 EVM、CFX、APTOS、BTC Sign Message\n      </CardHeader>\n      <CardDescription>用于测试并发多链签署 sign message, 请先调用批量连接钱包。</CardDescription>\n\n      <CardContent>\n        <div className=\"flex flex-col gap-5\">\n          <Button onClick={connectWallet}>批量 sign message</Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable no-unsafe-optional-chaining */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { Button } from '../../ui/button';\nimport { Card, CardContent, CardDescription, CardHeader } from '../../ui/card';\nimport { get } from 'lodash';\n\nconst SignTxMap = {\n  evm: async () => {\n    const [address] = await window?.ethereum?.request({\n      'method': 'eth_requestAccounts',\n      'params': [],\n    });\n\n    const res = await window?.ethereum?.request({\n      'method': 'eth_sendTransaction',\n      'params': [\n        {\n          from: address,\n          to: address,\n          value: `0x1`,\n          gasLimit: '0x5028',\n          gasPrice: '0xbebc200',\n        },\n      ],\n    });\n\n    return JSON.stringify(res);\n  },\n  cfx: async () => {\n    const [address] = await window?.conflux?.request({\n      'method': 'cfx_requestAccounts',\n      'params': [],\n    });\n\n    const res = await window?.conflux?.request({\n      'method': 'cfx_sendTransaction',\n      'params': [\n        {\n          from: address,\n          to: address,\n          value: `0x1`,\n          gasLimit: '0x5028',\n          gasPrice: '0xbebc200',\n        },\n      ],\n    });\n\n    return JSON.stringify(res);\n  },\n  btc: async () => {\n    // @ts-expect-error\n    const [address] = await window?.unisat?.requestAccounts();\n    // @ts-expect-error\n    const res = await window?.unisat?.sendBitcoin(address, 1000);\n    return JSON.stringify(res);\n  },\n  aptos: async () => {\n    const { address } = await window?.aptos?.connect();\n    const res = await window?.aptos?.signTransaction({\n      arguments: [address, '10000'],\n      function: '0x1::coin::transfer',\n      type: 'entry_function_payload',\n      type_arguments: ['0x1::aptos_coin::AptosCoin'],\n    });\n    return JSON.stringify(res);\n  },\n};\n\nexport function MultipleCallSignTx() {\n  const connectWallet = () => {\n    console.log(`Call wallet Sign Tx start ===>`);\n    Object.keys(SignTxMap).forEach(async (key) => {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      SignTxMap[key]()\n        .then((address: string) => {\n          console.log(`Call wallet Sign Tx ${key} address`, address);\n        })\n        .catch((error: any) => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          console.log(`Call wallet Sign Tx ${key} error`, get(error, 'message', ''));\n        });\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    });\n  };\n\n  return (\n    <Card>\n      <CardHeader className=\"text-xl font-medium\">调用 EVM、CFX、APTOS、BTC Sign Tx</CardHeader>\n      <CardDescription>用于测试并发多链签署 sign tx, 请先调用批量连接钱包。</CardDescription>\n\n      <CardContent>\n        <div className=\"flex flex-col gap-5\">\n          <Button onClick={connectWallet}>批量 sign tx</Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","/* eslint-disable no-unsafe-optional-chaining */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport { ApiGroup } from '../../ApiActuator';\nimport { LoopEvmSignMessage } from './loopEvmSignMessage';\nimport { LoopEvmSignTx } from './loopEvmSignTx';\nimport { MultipleCallConnectWallet } from './multipleCallConnectWallet';\nimport { MultipleCallSignMessage } from './multipleCallSignMessage';\nimport { MultipleCallSignTx } from './multipleCallSignTx';\n\nexport default function BTCExample() {\n  return (\n    <>\n      <ApiGroup title=\"单链循环调用\">\n        <LoopEvmSignMessage />\n        <LoopEvmSignTx />\n      </ApiGroup>\n\n      <ApiGroup title=\"多链复杂调用\">\n        <MultipleCallConnectWallet />\n        <MultipleCallSignMessage />\n        <MultipleCallSignTx />\n      </ApiGroup>\n    </>\n  );\n}\n"],"names":["trimmedEndIndex","__webpack_require__","reTrimStart","module","exports","string","slice","replace","reWhitespace","index","length","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","undefined","apply","shouldInvoke","timeSinceLastCall","timeSinceLastInvoke","timerExpired","timeWaiting","trailingEdge","setTimeout","debounced","isInvoking","arguments","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","value","other","valueOf","isBinary","InputWithSave","param","storageKey","onChange","defaultValue","type","inputValue","setInputValue","useState","useEffect","storedValue","localStorage","getItem","debouncedChangeHandler","useCallback","debounce","setItem","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Input","className","event","target","placeholder","LoopEvmSignMessage","account","setAccount","callInterval","setCallInterval","switchChecked","setSwitchChecked","countRef","useRef","connectWallet","window","address","ethereum","request","handleSignMessage","count","res","concat","console","log","error","get","handleBatchSignMessage","promises","Array","from","_","i","Promise","all","timer","setInterval","current","clearInterval","jsx_runtime","jsxs","Card","CardHeader","CardDescription","CardContent","div","Button","onClick","p","Number","Switch","checked","onCheckedChange","LoopEvmSignTx","handleSignTx","to","toString","gasLimit","gasPrice","handleBatchSignTx","connectWalletMap","evm","cfx","conflux","btc","unisat","requestAccounts","aptos","connect","MultipleCallConnectWallet","Object","keys","forEach","key","then","catch","resolve","SignMessageMap","JSON","stringify","signMessage","application","chainId","message","nonce","MultipleCallSignMessage","SignTxMap","sendBitcoin","signTransaction","function","type_arguments","MultipleCallSignTx","BTCExample","Fragment","ApiGroup","title"],"sourceRoot":""}