{"version":3,"file":"static/chunks/111.ce1788ec07abfdf9.js","mappings":"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","sources":["webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/chains/near/dapps.config.ts","webpack://_N_E/./components/chains/near/NearExample.tsx","webpack://_N_E/./components/ui/card.tsx","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/near-api-js/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/near-api-js/node_modules/borsh/node_modules/bn.js/lib|buffer","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","export const dapps = [\n  {\n    name: 'Paras',\n    url: 'https://paras.id/',\n  },\n  {\n    name: 'Learn Near Club',\n    url: 'https://learnnear.club/',\n  },\n  {\n    name: 'Ref Finance',\n    url: 'https://app.ref.finance/',\n  },\n];\n","/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable @typescript-eslint/restrict-plus-operands,@typescript-eslint/ban-ts-comment */\nimport React from 'react';\nimport {\n  OneKeyNearProvider,\n  NearAccountsChangedPayload,\n  NearNetworkChangedPayload,\n  TransactionCreatorParams,\n  SignMessagesResult,\n  SignInResult,\n  SignTransactionsResult,\n} from '@onekeyfe/onekey-near-provider';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport * as NearApi from 'near-api-js';\nimport { random } from 'lodash';\nimport BN from 'bn.js';\n\nimport DAppList from '../../DAppList';\nimport { dapps } from './dapps.config';\n\nconst hasWindow = typeof window !== 'undefined';\n\ndeclare global {\n  interface Window {\n    provider: OneKeyNearProvider;\n    nearAPI: typeof NearApi;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    OneKeyNearProvider: any;\n  }\n}\n\nwindow.nearAPI = NearApi;\nwindow.OneKeyNearProvider = OneKeyNearProvider;\n\n// TODO mobile web\n// TODO Toggle debugLogger button\n// TODO 0.0.7\n\nfunction toBN(value: string | null | undefined) {\n  return new BN(value ?? '', 10);\n}\n\n// fix: Error: Class Action is missing in schema: actions.actions\nfunction transactionCreator({\n  accountId,\n  publicKey,\n  receiverId,\n  nonce,\n  actions,\n  blockHash,\n}: TransactionCreatorParams) {\n  const publicKeyBuffer = NearApi.utils.PublicKey.fromString(publicKey);\n  return NearApi.transactions.createTransaction(\n    accountId,\n    publicKeyBuffer,\n    receiverId,\n    nonce,\n    actions,\n    blockHash,\n  );\n}\n\nexport default function NearExample() {\n  const [provider, setProvider] = useState<OneKeyNearProvider | null>(null);\n  const [accountId, setAccountId] = useState('');\n  const [publicKey, setPublicKey] = useState('');\n  const [networkId, setNetworkId] = useState('');\n\n  const createSampleBatchTransactions = useCallback(async () => {\n    if (!provider) {\n      return [];\n    }\n    const num1 = random(100, 900) / 10000;\n    const num2 = random(100, 900) / 10000;\n    const action1 = NearApi.transactions.transfer(\n      toBN(NearApi.utils.format.parseNearAmount(`${num1}`)),\n    );\n    const action2 = NearApi.transactions.transfer(\n      toBN(NearApi.utils.format.parseNearAmount(`${num2}`)),\n    );\n    // TODO custom createTransaction, call near_accountNonce near_blockInfo\n    const tx1 = await provider.createTransaction({\n      receiverId: 'bitcoinzhuo.testnet',\n      actions: [action1, action2],\n      nonceOffset: 1,\n    });\n    const tx2 = await provider.createTransaction({\n      receiverId: 'evmzyz.testnet',\n      actions: [action2],\n      nonceOffset: 2,\n    });\n    const transactions = [tx1, tx2];\n    return transactions;\n  }, [provider]);\n\n  const onAccountsChanged = useCallback((payload: NearAccountsChangedPayload) => {\n    const _accountId = payload?.accounts?.[0]?.accountId || '';\n    const _publicKey = payload?.accounts?.[0]?.publicKey || '';\n    console.log('near onAccountsChanged >>>', _accountId, _publicKey);\n    setAccountId(_accountId);\n    setPublicKey(_publicKey);\n  }, []);\n  const onNetworkChanged = useCallback((payload: NearNetworkChangedPayload) => {\n    console.log('near onNetworkChanged >>>', payload);\n    setNetworkId(payload.networkId);\n  }, []);\n  const config = useMemo(\n    () => ({\n      // networkId: 'mainnet',\n      // nodeUrl: 'https://rpc.mainnet.near.org',\n      networkId: 'testnet',\n      nodeUrl: 'https://rpc.testnet.near.org',\n      headers: {},\n      keyStore: new NearApi.keyStores.BrowserLocalStorageKeyStore(),\n    }),\n    [],\n  );\n\n  useEffect(() => {\n    if (!hasWindow) {\n      // return;\n    }\n\n    // const near = new NearApi.Near(config);\n    // const connection = near.connection;\n    const _provider = new OneKeyNearProvider({\n      // connection,\n      // networkId: config.networkId,\n      // connectEagerly: true, // auto connect wallet accounts even if localStorage cleared\n      transactionCreator: process.env.NODE_ENV !== 'production' ? transactionCreator : undefined,\n      // logger: console,\n    });\n    _provider.on('accountsChanged', onAccountsChanged);\n    _provider.on('networkChanged', onNetworkChanged);\n\n    window.provider = _provider;\n\n    void (async () => {\n      const installed = await _provider.detectWalletInstalled();\n      if (installed) {\n        setProvider(_provider);\n\n        const res1 = (await _provider.request({\n          method: 'near_accounts',\n        })) as NearAccountsChangedPayload;\n        setAccountId(res1?.accounts?.[0]?.accountId || '');\n        setPublicKey(res1?.accounts?.[0]?.publicKey || '');\n        // setAccountId(provider.getAccountId());\n\n        const res2 = (await _provider.request({\n          method: 'near_networkInfo',\n        })) as NearNetworkChangedPayload;\n        setNetworkId(res2?.networkId || '');\n        // setNetworkId(provider.getNetworkInfo().networkId);\n      }\n    })();\n\n    return () => {\n      _provider.off('accountsChanged', onAccountsChanged);\n      _provider.off('networkChanged', onNetworkChanged);\n    };\n  }, [config, onAccountsChanged, onNetworkChanged]);\n\n  return (\n    <div>\n      <DAppList dapps={dapps} />\n      {!provider && (\n        <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n          Install OneKey Extension →\n        </a>\n      )}\n      {provider && (\n        <div>\n          <div>\n            accountId: <strong>{accountId}</strong>\n          </div>\n          <div>\n            publicKey: <strong>{publicKey}</strong>\n          </div>\n          <div>\n            localNetworkId: <strong>{provider._networkId}</strong> <button>switch TODO</button>\n          </div>\n          <div>\n            walletNetworkId: <strong>{networkId}</strong>\n          </div>\n          <div>\n            providerVersion: <strong>v{provider.version}</strong>\n          </div>\n\n          <hr />\n          <button\n            onClick={async () => {\n              const res = (await provider?.request({\n                method: 'near_requestAccounts',\n              })) as SignInResult;\n              console.log('near_requestAccounts', res, res.accounts);\n            }}\n          >\n            near_requestAccounts\n          </button>\n          <button\n            onClick={async () => {\n              const res = await provider?.requestSignIn();\n              console.log('requestSignIn', res, res.accounts);\n            }}\n          >\n            requestSignIn\n          </button>\n\n          <hr />\n          <button onClick={() => provider?.request({ method: 'near_signOut' })}>\n            near_signOut\n          </button>\n          <button onClick={() => provider?.signOut()}>signOut</button>\n\n          <hr />\n          <button\n            onClick={async () => {\n              const res = (await provider?.request({\n                method: 'near_accounts',\n                params: [],\n              })) as NearAccountsChangedPayload;\n              console.log('near_accounts', res, res.accounts);\n            }}\n          >\n            near_accounts\n          </button>\n          <button\n            onClick={async () => {\n              const res = (await provider?.request({\n                method: 'near_networkInfo',\n                params: [],\n              })) as NearNetworkChangedPayload;\n              console.log('near_networkInfo', res, res.networkId);\n            }}\n          >\n            near_networkInfo\n          </button>\n          <button\n            onClick={async () => {\n              const res = await provider?.request({\n                method: 'near_accountNonce',\n                params: [],\n              });\n              console.log('near_accountNonce', res);\n            }}\n          >\n            near_accountNonce\n          </button>\n          <button\n            onClick={async () => {\n              const res = await provider?.request({\n                method: 'near_blockInfo',\n                params: [],\n              });\n              console.log('near_blockInfo', res);\n            }}\n          >\n            near_blockInfo\n          </button>\n\n          <hr />\n          <div>\n            <button\n              onClick={async () => {\n                const transactions = await createSampleBatchTransactions();\n                const res = (await provider.request({\n                  method: 'near_sendTransactions',\n                  params: {\n                    transactions,\n                  },\n                })) as SignTransactionsResult;\n                console.log('near_sendTransactions', res, res.transactionHashes);\n              }}\n            >\n              near_sendTransactions\n            </button>\n            <button\n              onClick={async () => {\n                const transactions = await createSampleBatchTransactions();\n                const res = await provider.requestSignTransactions({\n                  transactions,\n                });\n                console.log('requestSignTransactions', res, res.transactionHashes);\n              }}\n            >\n              requestSignTransactions\n            </button>\n            <button\n              onClick={async () => {\n                const transactions = await createSampleBatchTransactions();\n                const res = (await provider.request({\n                  method: 'near_signTransactions',\n                  params: {\n                    transactions,\n                  },\n                })) as SignMessagesResult;\n                console.log('near_signTransactions', res, res.signatures);\n              }}\n            >\n              near_signTransactions\n            </button>\n            <button>TODO Send USDT Token (mainnet only)</button>\n            <button\n              onClick={async () => {\n                const num1 = random(100, 900) / 10000;\n                const num2 = random(100, 900) / 10000;\n                const amount = NearApi.utils.format.parseNearAmount(num1.toString());\n                const action1 = NearApi.transactions.transfer(toBN(amount));\n                const action2 = NearApi.transactions.transfer(\n                  toBN(NearApi.utils.format.parseNearAmount(num2.toString())),\n                );\n                const acc = provider.account();\n                const res = await acc.signAndSendTransaction({\n                  receiverId: 'evmzyz.testnet',\n                  actions: [action1, action2],\n                });\n                console.log('signAndSendTransaction', res, res.status);\n              }}\n            >\n              signAndSendTransaction (legacy)\n            </button>\n\n            <hr />\n            <button\n              onClick={async () => {\n                const res = (await provider.request({\n                  method: 'near_signMessages',\n                  params: {\n                    messages: ['hello world', 'onekey near wallet'],\n                  },\n                })) as SignMessagesResult;\n                console.log('near_signMessages', res, res.signatures);\n              }}\n            >\n              near_signMessages\n            </button>\n            <button\n              onClick={async () => {\n                const res = await provider.requestSignMessages({\n                  messages: ['hello world', 'onekey near wallet'],\n                });\n                console.log('requestSignMessages', res, res.signatures);\n              }}\n            >\n              requestSignMessages\n            </button>\n\n            <hr />\n            <button\n              onClick={async () => {\n                const res = await provider.request({\n                  'method': 'query',\n                  'params': {\n                    'request_type': 'view_access_key_list',\n                    'account_id':\n                      'c3be856133196da252d0f1083614cdc87a85c8aa8abeaf87daff1520355eec53',\n                    'finality': 'optimistic',\n                  },\n                });\n                console.log('RPC Call: view_access_key_list', res);\n              }}\n            >\n              RPC Call: view_access_key_list\n            </button>\n            <button\n              onClick={async () => {\n                const res = await provider.request({\n                  'method': 'gas_price',\n                  'params': [null],\n                });\n                console.log('RPC Call: gas_price', res);\n              }}\n            >\n              RPC Call: gas_price\n            </button>\n            <button\n              onClick={async () => {\n                const res = await provider.request({\n                  'method': 'status',\n                  'params': [],\n                });\n                console.log('RPC Call: status', res);\n              }}\n            >\n              RPC Call: status\n            </button>\n            <button\n              onClick={async () => {\n                const res = await provider.request({\n                  'method': 'network_info',\n                  'params': [],\n                });\n                console.log('RPC Call: network_info', res);\n              }}\n            >\n              RPC Call: network_info\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Card = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('rounded-xl border bg-card text-card-foreground shadow-sm p-3', className)}\n      {...props}\n    />\n  ),\n);\nCard.displayName = 'Card';\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex p-1 flex-col space-y-1.5', className)} {...props} />\n  ),\n);\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, ...props }, ref) => (\n    <h3\n      ref={ref}\n      className={cn('text-2xl font-semibold leading-none tracking-tight', className)}\n      {...props}\n    />\n  ),\n);\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn('px-3 text-base text-muted-foreground', className)} {...props} />\n));\nCardDescription.displayName = 'CardDescription';\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('p-1 pt-0', className)} {...props} />\n  ),\n);\nCardContent.displayName = 'CardContent';\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('flex items-center p-1 pt-0', className)} {...props} />\n  ),\n);\nCardFooter.displayName = 'CardFooter';\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent };\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["__webpack_exports__","Z","dapps","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Card","jsx","CardTitle","className","CardContent","map","dapp","index","div","Link","href","url","legacyBehavior","a","name","toBN","value","BN","NearExample","provider","setProvider","useState","accountId","setAccountId","publicKey","setPublicKey","networkId","setNetworkId","createSampleBatchTransactions","useCallback","num1","random","num2","action1","NearApi","transfer","format","parseNearAmount","concat","action2","tx1","createTransaction","receiverId","actions","nonceOffset","tx2","onAccountsChanged","payload","_accountId","accounts","_publicKey","console","log","onNetworkChanged","config","useMemo","nodeUrl","headers","keyStore","BrowserLocalStorageKeyStore","useEffect","_provider","OneKeyNearProvider","transactionCreator","undefined","on","window","installed","detectWalletInstalled","res1","request","method","res2","off","jsx_runtime","DAppList","target","strong","_networkId","button","version","hr","onClick","res","requestSignIn","signOut","params","transactions","transactionHashes","requestSignTransactions","signatures","amount","toString","acc","account","signAndSendTransaction","status","messages","requestSignMessages","nearAPI","React","ref","props","cn","displayName","CardHeader","h3","CardDescription","p","CardFooter"],"sourceRoot":""}