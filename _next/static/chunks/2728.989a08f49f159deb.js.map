{"version":3,"file":"static/chunks/2728.989a08f49f159deb.js","mappings":"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","sources":["webpack://_N_E/./components/chains/conflux/dapps.config.ts","webpack://_N_E/./components/chains/conflux/params.ts","webpack://_N_E/./components/chains/conflux/example.tsx","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/@cfxjs/abi/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/brorand|crypto","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/cfx-util/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/elliptic/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/readable-stream/lib/internal/streams|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/readable-stream/lib|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/secp256k1/node_modules/bn.js/lib|buffer","webpack://_N_E/<anon>"],"sourcesContent":["export const dapps = [\n  {\n    name: 'MoonSwap',\n    url: 'https://moonswap.fi/exchange/swap',\n  },\n  {\n    name: 'ShuttleFlow',\n    url: 'https://shuttleflow.io/shuttle',\n  },\n  {\n    name: 'CONFLUXSCAN',\n    url: 'https://confluxscan.io/',\n  },\n  {\n    name: 'Stampers',\n    url: 'https://stampers.app/',\n  },\n];\n","import { address } from 'js-conflux-sdk';\n\nconst chainIdInt = 1029;\n\nexport default {\n  'requestPermissions': [\n    {\n      'id': 'cfx_accounts',\n      'name': 'cfx_accounts',\n      'description': '请求权限',\n      'value': JSON.stringify({\n        'cfx_accounts': {},\n      }),\n    },\n    {\n      'id': 'cfx_accounts and cfx_chainId',\n      'name': 'cfx_accounts cfx_chainId',\n      'description': '请求权限',\n      'value': JSON.stringify({\n        'cfx_accounts': {},\n        'cfx_chainId': {},\n      }),\n    },\n  ],\n  'requestMothed': [\n    {\n      'id': 'request',\n      'name': 'request',\n      'description': 'request eth mothed',\n      'value': JSON.stringify({\n        'method': 'cfx_requestAccounts',\n        'params': [],\n      }),\n    },\n  ],\n  addConfluxChain: [\n    {\n      id: 'wallet_addConfluxChain',\n      name: 'Add Conflux Chain',\n      description: 'Add Conflux Chain',\n      value: JSON.stringify({\n        chainId: '0x47',\n        chainName: 'EVM Conflux',\n        nativeCurrency: {\n          name: 'Conflux',\n          symbol: 'CFX',\n          decimals: 18,\n        },\n        rpcUrls: ['https://evmtestnet.confluxrpc.com'],\n        blockExplorerUrls: ['https://evmtestnet.confluxscan.io'],\n      }),\n    },\n  ],\n  switchConfluxChain: [\n    {\n      id: 'switchConfluxChain',\n      name: 'Switch Conflux Chain',\n      value: JSON.stringify({\n        chainId: '0x1',\n      }),\n    },\n  ],\n  watchAsset: [\n    {\n      'id': 'watchAsset erc20',\n      'name': '添加 ERC20 资产',\n      'description': '添加 ERC20 资产',\n      'value': JSON.stringify({\n        type: 'ERC20',\n        options: {\n          address: 'cfxtest:acepe88unk7fvs18436178up33hb4zkuf62a9dk1gv',\n          symbol: 'cUSDT',\n          decimals: 18,\n          image:\n            'https://scan-icons.oss-cn-hongkong.aliyuncs.com/testnet/cfxtest%3Aacepe88unk7fvs18436178up33hb4zkuf62a9dk1gv.png',\n        },\n      }),\n    },\n  ],\n  cfxSign: [\n    {\n      'id': 'eth_sign',\n      'name': 'eth_sign',\n      'description': 'eth_sign 有安全风险，硬件不支持',\n      'value': '0x879a053d4800c6354e76c7985a865d2922c82fb5b3f4577b2fe08b998954f2e0',\n    },\n  ],\n  personalSign: [\n    {\n      'id': 'personal_sign',\n      'name': 'personal_sign',\n      'description': 'personalSign',\n      'value': 'personal sign message example',\n    },\n  ],\n  signTypedDataV4: [\n    {\n      'id': 'signTypedDataV4',\n      'name': 'signTypedDataV4',\n      'description': 'signTypedDataV4',\n      'value': JSON.stringify({\n        domain: {\n          chainId: chainIdInt.toString(),\n          name: 'Ether Mail',\n          verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n          version: '1',\n        },\n        message: {\n          contents: 'Hello, Bob!',\n          from: {\n            name: 'Cow',\n            wallets: [\n              '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n              '0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF',\n            ],\n          },\n          to: [\n            {\n              name: 'Bob',\n              wallets: [\n                '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n                '0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57',\n                '0xB0B0b0b0b0b0B000000000000000000000000000',\n              ],\n            },\n          ],\n          attachment: '0x',\n        },\n        primaryType: 'Mail',\n        types: {\n          CIP23Domain: [\n            { name: 'name', type: 'string' },\n            { name: 'version', type: 'string' },\n            { name: 'chainId', type: 'uint256' },\n            { name: 'verifyingContract', type: 'address' },\n          ],\n          Group: [\n            { name: 'name', type: 'string' },\n            { name: 'members', type: 'Person[]' },\n          ],\n          Mail: [\n            { name: 'from', type: 'Person' },\n            { name: 'to', type: 'Person[]' },\n            { name: 'contents', type: 'string' },\n            { name: 'attachment', type: 'bytes' },\n          ],\n          Person: [\n            { name: 'name', type: 'string' },\n            { name: 'wallets', type: 'address[]' },\n          ],\n        },\n      }),\n    },\n  ],\n  sendTransaction: (from: string, to: string) => {\n    if (!from || !to) {\n      return [];\n    }\n\n    return [\n      {\n        'id': 'sendTransaction',\n        'name': 'sendTransaction',\n        'description': '发送原生代币',\n        'value': JSON.stringify({\n          from: from,\n          to: to,\n          value: '0x1',\n        }),\n      },\n      {\n        'id': 'sendTransaction-eip1559',\n        'name': 'sendTransaction EIP1559',\n        'description': '发送原生代币(EIP1559)',\n        'value': JSON.stringify({\n          from: from,\n          to: to,\n          value: '0x1',\n        }),\n      },\n      {\n        'id': 'sendTransaction-crc20-moon',\n        'name': 'CRC20 Token Transfer(Moon)',\n        'description': '发送 CRC20 代币 Moon',\n        'value': JSON.stringify(\n          {\n            from: from,\n            to: 'cfx:achcuvuasx3t8zcumtwuf35y51sksewvca0h0hj71a',\n            data: [\n              '0xa9059cbb',\n              address.decodeCfxAddress(to).hexAddress.toString('hex').slice(2).padStart(64, '0'),\n              '00000000000000000000000000000000000000000000000000005af3107a4000',\n            ].join(''),\n          },\n          null,\n          2,\n        ),\n      },\n      {\n        'id': 'sendTransaction-crc20-usdt',\n        'name': 'CRC20 Token Transfer(USDT)',\n        'description': '发送 CRC20 代币 USDT',\n        'value': JSON.stringify(\n          {\n            from: from,\n            to: 'cfx:acf2rcsh8payyxpg6xj7b0ztswwh81ute60tsw35j7',\n            data: [\n              '0xa9059cbb',\n              address.decodeCfxAddress(to).hexAddress.toString('hex').slice(2).padStart(64, '0'),\n              '00000000000000000000000000000000000000000000000000005af3107a4000',\n            ].join(''),\n          },\n          null,\n          2,\n        ),\n      },\n    ];\n  },\n};\n","/* eslint-disable no-unsafe-optional-chaining */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return */\nimport { dapps } from './dapps.config';\nimport axios from 'axios';\nimport ConnectButton from '../../../components/connect/ConnectButton';\nimport { useEffect, useRef } from 'react';\nimport { get } from 'lodash';\nimport { IProviderApi, IProviderInfo } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../../components/connect/WalletContext';\nimport type { IKnownWallet } from '../../../components/connect/types';\nimport DappList from '../../../components/DAppList';\nimport params from './params';\nimport { recoverPersonalSignature, recoverTypedSignature_v4 } from 'cfx-sig-util';\nimport { toast } from '../../ui/use-toast';\nimport { address, Message } from 'js-conflux-sdk';\nimport * as cfxUtil from 'cfx-util';\nimport { getMessage } from 'cip-23';\nimport { keccak256 } from 'ethereumjs-util';\nimport { ApiComboboxRef, ApiForm, ApiFormRef, ComboboxOption } from '../../ApiForm';\n\nfunction recoverPublicKey(hash: Buffer, sig: string): Buffer {\n  const signature = cfxUtil.toBuffer(sig);\n  const sigParams = cfxUtil.fromRpcSig(cfxUtil.addHexPrefix(signature.toString('hex')));\n  return cfxUtil.ecrecover(hash, sigParams.v, sigParams.r, sigParams.s);\n}\n\ntype IAssets = {\n  type: string;\n  options: {\n    address: string;\n    symbol: string;\n    decimals: number;\n    image: string;\n  };\n};\n\nfunction recoverAddress(hash: Buffer, sig: string): string {\n  const publicKey = recoverPublicKey(hash, sig);\n  const sender = cfxUtil.publicToAddress(publicKey);\n  return cfxUtil.bufferToHex(sender);\n}\n\nconst WalletWatchAsset = ({ chainId }: { chainId: string | undefined }) => {\n  const apiFromRef = useRef<ApiFormRef>(null);\n  const apiFromComboboxRef = useRef<ApiComboboxRef<IAssets>>(null);\n\n  const { provider } = useWallet<IProviderApi>();\n\n  useEffect(() => {\n    // https://testingcf.jsdelivr.net/gh/conflux-fans/token-list@master/cfx.fluent.json\n    void axios\n      .get('https://testingcf.jsdelivr.net/gh/conflux-fans/token-list@master/cfx.fluent.json')\n      .then((res) => {\n        const tokens = res.data.tokens as {\n          chainId: number;\n          address: string;\n          name: string;\n          symbol: string;\n          decimals: number;\n          logoURI: string;\n        }[];\n        const tokenOptions: ComboboxOption<IAssets>[] = tokens.map((token) => ({\n          value: token.address,\n          label: `${token.name} - ${token.address}`,\n          extra: {\n            type: 'CRC20',\n            options: {\n              address: token.address,\n              symbol: token.symbol,\n              decimals: token.decimals,\n              image: token.logoURI,\n            },\n          },\n        }));\n\n        apiFromComboboxRef.current?.setOptions(tokenOptions);\n      });\n  }, [chainId]);\n\n  return (\n    <ApiForm title=\"wallet_watchAsset CRC20\" description=\"添加 CRC20 资产\" ref={apiFromRef}>\n      <ApiForm.Combobox<IAssets>\n        ref={apiFromComboboxRef}\n        id=\"tokenSelector\"\n        label=\"预设参数\"\n        placeholder=\"请选择 CRC20 Token\"\n        onOptionChange={(option) => {\n          apiFromRef.current?.setJsonValue('request', option?.extra);\n        }}\n      />\n\n      <ApiForm.JsonEdit id=\"request\" label=\"请求(可以手动编辑)\" required />\n\n      <ApiForm.Button\n        id=\"watchButton\"\n        label=\"观察 Asset\"\n        onClick={async () => {\n          const res = await provider?.request({\n            'method': 'wallet_watchAsset',\n            'params': JSON.parse(apiFromRef.current?.getValue('request') ?? ''),\n          });\n          apiFromRef.current?.setValue('response', JSON.stringify(res, null, 2));\n        }}\n        validation={{\n          fields: ['request'],\n          validator: (values) => {\n            if (!values.request) {\n              return '请选择 CRC20 Token';\n            }\n          },\n        }}\n      />\n\n      <ApiForm.TextArea id=\"response\" label=\"执行结果\" />\n    </ApiForm>\n  );\n};\n\nexport default function BTCExample() {\n  const walletsRef = useRef<IProviderInfo[]>([\n    {\n      uuid: 'injected',\n      name: 'Injected Wallet',\n      inject: 'conflux',\n    },\n    {\n      uuid: 'injected-onekey',\n      name: 'Injected OneKey',\n      inject: '$onekey.conflux',\n    },\n  ]);\n\n  const { provider, setAccount, account } = useWallet<IProviderApi>();\n\n  const onConnectWallet = async (selectedWallet: IKnownWallet) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const providerDetail = walletsRef.current?.find((w) => w.uuid === selectedWallet.id);\n    if (!providerDetail) {\n      return Promise.reject('Wallet not found');\n    }\n\n    const provider = get(window, providerDetail.inject) as IProviderApi | undefined;\n\n    if (!provider) {\n      toast({\n        title: 'Wallet not found',\n        description: 'Please install the wallet extension',\n      });\n      return;\n    }\n\n    await provider?.request<string[]>({\n      method: 'cfx_requestAccounts',\n    });\n\n    const [address] = await provider.request<string[]>({\n      method: 'cfx_accounts',\n    });\n    const [chainId] = await provider.request<string[]>({\n      method: 'cfx_chainId',\n    });\n\n    return {\n      provider,\n      address,\n      chainId,\n    };\n  };\n\n  useEffect(() => {\n    const accountsChangedHandler = (accounts: string[]) => {\n      console.log('cfx [accountsChanged]', accounts);\n\n      if (accounts.length) {\n        setAccount({\n          ...account,\n          address: accounts[0],\n        });\n      }\n    };\n\n    const chainChangedHandler = (chainId: string) => {\n      console.log('cfx [chainChanged]', chainId);\n\n      if (chainId) {\n        setAccount({\n          ...account,\n          chainId: chainId,\n        });\n      }\n    };\n    const connectHandler = (connectInfo: any) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      console.log('cfx [connect]', connectInfo);\n    };\n    const disconnectHandler = (error: any) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      console.log('cfx [disconnect]', error);\n    };\n\n    provider?.on('accountsChanged', accountsChangedHandler);\n    provider?.on('chainChanged', chainChangedHandler);\n    provider?.on('connect', connectHandler);\n    provider?.on('disconnect', disconnectHandler);\n\n    return () => {\n      provider?.removeListener('accountsChanged', accountsChangedHandler);\n      provider?.removeListener('chainChanged', chainChangedHandler);\n      provider?.removeListener('connect', connectHandler);\n      provider?.removeListener('disconnect', disconnectHandler);\n    };\n  }, [account, provider, setAccount]);\n\n  return (\n    <>\n      <ConnectButton<IProviderApi>\n        fetchWallets={() => {\n          return Promise.resolve(\n            walletsRef.current.map((wallet) => {\n              return {\n                id: wallet.uuid,\n                name: wallet.name,\n              };\n            }),\n          );\n        }}\n        onConnect={onConnectWallet}\n      />\n      <ApiGroup title=\"Basics\">\n        <ApiPayload\n          title=\"cfx_requestAccounts\"\n          description=\"连接钱包\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.request<string[]>({\n              method: 'cfx_requestAccounts',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"enable\"\n          description=\"（废弃）连接钱包\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.enable();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"isConnected\"\n          description=\"（isConnected\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.isConnected();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"cfx_accounts\"\n          description=\"获取账户\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string[]>({\n              method: 'cfx_accounts',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"net_version\"\n          description=\"获取网络\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string>({\n              method: 'net_version',\n            });\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"cfx_chainId\"\n          description=\"获取 chainId\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string>({\n              method: 'cfx_chainId',\n            });\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"cfx_getMaxGasLimit\"\n          description=\"获取最大 Gas Limit\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string[]>({\n              method: 'cfx_getMaxGasLimit',\n              params: [account.address],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"cfx_getNextUsableNonce\"\n          description=\"获取下一个可用 Nonce\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string>({\n              method: 'cfx_getNextUsableNonce',\n              params: [account.address],\n            });\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_getBalance\"\n          description=\"获取余额\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string>({\n              method: 'wallet_getBalance',\n              params: [account.address],\n            });\n            return res;\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_getBlockTime\"\n          description=\"（暂不支持）获取区块时间\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string[]>({\n              method: 'wallet_getBlockTime',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_getBlockchainExplorerUrl\"\n          description=\"（暂不支持）获取区块链浏览器地址\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request<string[]>({\n              method: 'wallet_getBlockchainExplorerUrl',\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_requestPermissions\"\n          description=\"获取账户权限\"\n          presupposeParams={params.requestPermissions}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'wallet_requestPermissions',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"request\"\n          description=\"request 调用 eth 各种 RPC 方法\"\n          presupposeParams={params.requestMothed}\n          onExecute={async (request: string) => {\n            const requestObj = JSON.parse(request);\n            const res = await provider?.request({\n              method: requestObj.method,\n              params: requestObj.params,\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"send\"\n          description=\"send 调用 eth 各种 RPC 方法\"\n          presupposeParams={params.requestMothed}\n          onExecute={async (request: string) => {\n            const requestObj = JSON.parse(request);\n            const res = await provider?.send({\n              method: requestObj.method,\n              params: requestObj.params,\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"sendAsync\"\n          description=\"sendAsync 调用 eth 各种 RPC 方法\"\n          presupposeParams={params.requestMothed}\n          onExecute={async (request: string) => {\n            return new Promise((resolve) => {\n              const requestObj = JSON.parse(request);\n              // eslint-disable-next-line @typescript-eslint/no-floating-promises\n              provider?.sendAsync(\n                {\n                  method: requestObj.method,\n                  params: requestObj.params,\n                },\n                (err, res) => {\n                  resolve(JSON.stringify(res));\n                },\n              );\n            });\n          }}\n        />\n      </ApiGroup>\n      <ApiGroup title=\"Chain\">\n        <ApiPayload\n          title=\"wallet_addConfluxChain\"\n          description=\"（暂不支持）添加 Chain\"\n          presupposeParams={params.addConfluxChain}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'wallet_addConfluxChain',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_switchConfluxChain\"\n          description=\"（暂不支持）切换 Chain\"\n          presupposeParams={params.addConfluxChain}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'wallet_switchConfluxChain',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_watchAsset\"\n          description=\"（暂不支持）添加 Token\"\n          presupposeParams={params.watchAsset}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'wallet_watchAsset',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Sign Message\">\n        <ApiPayload\n          title=\"(不支持) cfx_sign\"\n          description=\"cfx_sign\"\n          presupposeParams={params.cfxSign}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'cfx_sign',\n              'params': [account.address, request],\n              // @ts-expect-error\n              'from': account.address,\n            });\n            return res as string;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const hash = keccak256(Buffer.from(request));\n            const hexAddress = recoverAddress(hash, response);\n\n            return Promise.resolve(\n              (\n                hexAddress.replace('0x', '')?.toLowerCase() ===\n                address.decodeCfxAddress(account.address).hexAddress.toString('hex')\n              ).toString(),\n            );\n          }}\n        />\n        <ApiPayload\n          title=\"personal_sign\"\n          description=\"personal_sign\"\n          presupposeParams={params.personalSign}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'personal_sign',\n              'params': [request, account.address, 'Example password'],\n            });\n            return res as string;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const hexAddress = recoverPersonalSignature({ data: request, sig: response });\n\n            return Promise.resolve(\n              (\n                hexAddress.replace('0x', '')?.toLowerCase() ===\n                address.decodeCfxAddress(account.address).hexAddress.toString('hex')\n              ).toString(),\n            );\n          }}\n        />\n\n        <ApiPayload\n          title=\"cfx_signTypedData_v4\"\n          description=\"signTypedDataV4\"\n          presupposeParams={params.signTypedDataV4}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'cfx_signTypedData_v4',\n              'params': [account.address, request],\n            });\n            return res;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const hash = keccak256(getMessage(JSON.parse(request)));\n\n            const hexAddress = recoverAddress(hash, response);\n            console.log('hexAddress', hexAddress);\n\n            return Promise.resolve(\n              (\n                hexAddress.replace('0x', '')?.toLowerCase() ===\n                address.decodeCfxAddress(account.address).hexAddress.toString('hex')\n              ).toString(),\n            );\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Transaction\">\n        <ApiPayload\n          title=\"cfx_sendTransaction\"\n          description=\"发送交易\"\n          presupposeParams={params.sendTransaction(account?.address ?? '', account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'cfx_sendTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return res as string;\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_sendTransaction\"\n          description=\"发送交易\"\n          presupposeParams={params.sendTransaction(account?.address ?? '', account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'wallet_sendTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return res as string;\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"wallet_watchAsset (EIP 747)\">\n        <WalletWatchAsset chainId={account?.chainId} />\n      </ApiGroup>\n\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["dapps","name","url","params","JSON","stringify","addConfluxChain","id","description","value","chainId","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","switchConfluxChain","watchAsset","type","options","address","image","cfxSign","personalSign","signTypedDataV4","domain","chainIdInt","verifyingContract","version","message","contents","from","wallets","to","attachment","primaryType","types","CIP23Domain","Group","Mail","Person","sendTransaction","data","decodeCfxAddress","hexAddress","toString","slice","padStart","join","recoverAddress","hash","sig","publicKey","recoverPublicKey","signature","cfxUtil","sigParams","v","r","s","sender","WalletWatchAsset","param","apiFromRef","useRef","apiFromComboboxRef","provider","useWallet","useEffect","axios","get","then","tokens","res","tokenOptions","map","token","label","concat","extra","logoURI","current","setOptions","jsx_runtime","jsxs","ApiForm","title","ref","jsx","Combobox","placeholder","onOptionChange","setJsonValue","option","JsonEdit","required","Button","onClick","request","parse","getValue","setValue","validation","fields","validator","values","TextArea","BTCExample","account","walletsRef","uuid","inject","setAccount","onConnectWallet","selectedWallet","providerDetail","find","w","Promise","reject","window","toast","method","accountsChangedHandler","console","log","accounts","length","chainChangedHandler","connectHandler","connectInfo","disconnectHandler","error","on","removeListener","Fragment","ConnectButton","fetchWallets","resolve","wallet","onConnect","ApiGroup","ApiPayload","disableRequestContent","onExecute","enable","isConnected","presupposeParams","requestPermissions","requestMothed","requestObj","send","sendAsync","err","onValidate","response","keccak256","Buffer","replace","toLowerCase","recoverPersonalSignature","getMessage","DappList","accountInfoKeys","onDisconnect","settings","useSettings","connectDialogRef","autoConnectedRef","setWallets","useState","setProvider","connectWallet","useCallback","_provider","accountInfo","disconnectWallet","closeDialog","setTimeout","click","connectWalletWithDialog","directConnection","timeout","autoConnect","clearTimeout","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Card","CardContent","className","div","Dialog","DialogTrigger","asChild","DialogContent","DialogClose","DialogHeader","DialogTitle","logo","img","alt","src","span","tags","tag","DialogDescription","a","target","href","variant","Object","keys","key"],"sourceRoot":""}