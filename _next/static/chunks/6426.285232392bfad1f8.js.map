{"version":3,"file":"static/chunks/6426.285232392bfad1f8.js","mappings":"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","sources":["webpack://_N_E/./components/ApiForm/hooks/useFormContext.ts","webpack://_N_E/./components/ApiForm/store.ts","webpack://_N_E/./components/ApiForm/ApiFormProvider.tsx","webpack://_N_E/./components/ApiForm/hooks/useForm.ts","webpack://_N_E/./components/ApiForm/ApiForm.tsx","webpack://_N_E/./components/ApiForm/hooks/useField.ts","webpack://_N_E/./components/ApiForm/ApiField.tsx","webpack://_N_E/./components/ApiForm/ApiButton.tsx","webpack://_N_E/./components/ApiForm/ApiJsonEdit.tsx","webpack://_N_E/./components/ApiForm/ApiSelector.tsx","webpack://_N_E/./components/ApiForm/ApiCheckbox.tsx","webpack://_N_E/./components/ApiForm/ApiAutoTextArea.tsx","webpack://_N_E/./components/ApiForm/ApiTextArea.tsx","webpack://_N_E/./components/ApiForm/ApiSwitch.tsx","webpack://_N_E/./components/ui/command.tsx","webpack://_N_E/./components/ApiForm/ApiCombobox.tsx","webpack://_N_E/./components/ui/separator.tsx","webpack://_N_E/./components/ApiForm/ApiSeparator.tsx","webpack://_N_E/./components/ApiForm/ApiText.tsx","webpack://_N_E/./components/ApiForm/index.ts","webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/ui/dialog.tsx","webpack://_N_E/./components/ui/label.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport { FormStore } from '../store';\nimport { ApiFormRef } from '../ApiForm';\n\nexport interface ApiFormContextValue {\n  store: FormStore;\n  getFromApi: () => ApiFormRef | undefined;\n}\n\nexport const ApiFormProviderContext = React.createContext<ApiFormContextValue | null>(null);\n\nexport const useFormContext = () => {\n  const context = React.useContext(ApiFormProviderContext);\n  if (!context) {\n    throw new Error('useFormContext must be used within a ApiFormProvider');\n  }\n  return context;\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { atom, createStore } from 'jotai';\nimport { nanoid } from 'nanoid';\nimport { IFormField } from './types';\n\ntype Store = ReturnType<typeof createStore>;\n\nexport interface FormStore {\n  id: string;\n  scope: Store;\n  fieldAtom: <T , E = string>(\n    id: string,\n    initialValue?: IFormField<T, E>\n  ) => ReturnType<typeof atom<IFormField<T, E>>>;\n  fieldsAtom: (fieldIds: string[] | undefined) => ReturnType<typeof atom<(IFormField<any> & {\n    id: string;\n  })[]>>;\n  allFields: () => string[];\n  allFieldsAtom: () => ReturnType<typeof atom<(IFormField<any> & {\n    id: string;\n  })[]>>;\n  reset: () => void;\n  destroy: () => void;\n}\n\nconst formStores = new Map<string, FormStore>();\n\nexport const createFormStore = (id?: string): FormStore => {\n  const formId = id || nanoid();\n\n  if (formStores.has(formId)) {\n    return formStores.get(formId);\n  }\n\n  const fieldsAtoms = new Map<string, ReturnType<typeof atom>>();\n\n  const store: FormStore = {\n    id: formId,\n    scope: createStore(),\n    fieldAtom: <T, E = string>(id: string, initialValue?: IFormField<T, E>) => {\n      if (!fieldsAtoms.has(id)) {\n        const fieldAtom = atom<IFormField<T, E>>({\n          value: initialValue?.defaultValue ?? undefined,\n          ...initialValue\n        });\n        fieldsAtoms.set(id, fieldAtom);\n      }\n      return fieldsAtoms.get(id);\n    },\n    // @ts-expect-error\n    fieldsAtom: (fieldIds: string[] | undefined) => {\n      return atom((get) => {\n        if (!fieldIds?.length) return [];\n\n        return fieldIds.map((id) => {\n          const fieldAtom = store.fieldAtom(id);\n          const field = get(fieldAtom);\n          return {\n            id,\n            ...field,\n          };\n        });\n      });\n    },\n    allFields: () => {\n      return Array.from(fieldsAtoms.keys());\n    },\n    // @ts-expect-error\n    allFieldsAtom: () => {\n      return atom((get) => {\n        return Array.from(fieldsAtoms.values()).map((fieldAtom) => get(fieldAtom));\n      });\n    },\n    reset: () => {\n      fieldsAtoms.forEach((fieldAtom) => {\n        const field = store.scope.get(fieldAtom);\n        // @ts-expect-error\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        store.scope.set(fieldAtom, { value: undefined , defaultValue: field?.defaultValue });\n      });\n    },\n    destroy: () => {\n      fieldsAtoms.clear();\n    }\n  };\n\n  formStores.set(formId, store);\n  return store;\n};\n\nexport const getFormStore = (id: string) => {\n  return formStores.get(id);\n};\n\nexport const deleteFormStore = (id: string) => {\n  formStores.get(id)?.destroy();\n  formStores.delete(id);\n};\n","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createFormStore, deleteFormStore } from './store';\nimport { Provider } from 'jotai';\nimport { ApiFormProviderContext } from './hooks/useFormContext';\nimport { ApiFormRef } from './ApiForm';\nimport { stringifyWithSpecialType } from '../../lib/jsonUtils';\nimport { get, isEmpty } from 'lodash';\nimport { tryFormatCompactJson, tryFormatJson } from '../ApiActuator/ApiPayloadProvider';\n\nexport const ApiFormProvider = forwardRef<ApiFormRef | null, { children: React.ReactNode }>(\n    function ApiFormProvider({ children }, ref) {\n  const store = useMemo(() => createFormStore(), []);\n\n  useEffect(() => {\n    return () => {\n      deleteFormStore(store.id);\n    };\n  }, [store.id]);\n\n  const formApi: ApiFormRef = useMemo(() => ({\n    reset: () => {\n      store.reset();\n    },\n    getField: (id: string) => {\n      return store.scope.get(store.fieldAtom(id)) ;\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    setField: (id: string, field: any) => {\n      const oldField = store.scope.get(store.fieldAtom(id));\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      store.scope.set(store.fieldAtom(id), {\n        ...oldField,\n        ...field,\n      });\n    },\n    getValue: <T = any>(id: string) => {\n      return store.scope.get(store.fieldAtom(id))?.value as T;\n    },\n    setValue: (id: string, value: any) => {\n      store.scope.set(store.fieldAtom(id), {\n        value,\n      });\n    },\n    setJsonValue: (id: string, result: any) => {\n      let resultString: string;\n      let errorMessage = '';\n\n      try {\n        // normal types\n        if (\n          typeof result === 'number' ||\n          typeof result === 'boolean' ||\n          typeof result === 'string'\n        ) {\n          resultString = result.toString();\n        } else {\n          resultString = stringifyWithSpecialType(result);\n        }\n      } catch (error) {\n        console.log('execute error', error);\n        try {\n          errorMessage = JSON.stringify(error);\n        } catch (error) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          errorMessage = get(error, 'message', 'Execution error');\n        }\n      }\n\n      if (isEmpty(errorMessage)) {\n        store.scope.set(store.fieldAtom(id), {\n          value: tryFormatCompactJson(resultString),\n        });\n      } else {\n        store.scope.set(store.fieldAtom(id), {\n          error: errorMessage,\n        });\n      }\n    },\n    setError: (id: string, error: string) => {\n      store.scope.set(store.fieldAtom(id), {\n        error,\n      });\n    },\n  }), [store]);\n\n  useImperativeHandle(\n    ref,\n    () => formApi,\n    [formApi],\n  );\n\n  const getFromApi = useCallback(() => {\n    return formApi;\n  }, [formApi]);\n\n  const contextValue = useMemo(\n    () => ({\n      store,\n      getFromApi\n    }),\n    [store, getFromApi],\n  );\n\n  return (\n    <Provider store={store.scope}>\n      <ApiFormProviderContext.Provider value={contextValue}>\n        {children}\n      </ApiFormProviderContext.Provider>\n    </Provider>\n  );\n});\n","import { useCallback } from 'react';\nimport { useFormContext } from './useFormContext';\n\nexport function useForm() {\n  const context = useFormContext();\n  if (!context) throw new Error('useForm must be used within ApiForm');\n\n  const { store } = context;\n\n  const getValue = useCallback(\n    (id: string) => {\n      return store.scope.get(store.fieldAtom(id)).value;\n    },\n    [store],\n  );\n\n  const setValue = useCallback(\n    (id: string, value: any) => {\n      store.scope.set(store.fieldAtom(id), { value });\n    },\n    [store],\n  );\n\n  const reset = useCallback(() => {\n    store.reset();\n  }, [store]);\n\n  return {\n    getValue,\n    setValue,\n    reset,\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { forwardRef } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader } from '../ui/card';\nimport { Button } from '../ui/button';\nimport { IFormField } from './types';\nimport { ApiFormProvider } from './ApiFormProvider';\nimport { useForm } from './hooks/useForm';\n\nexport interface ApiFormRef {\n  reset: () => void;\n  getField: <T = any>(id: string) => IFormField<T>;\n  setField: (id: string, field: Partial<IFormField<any>>) => void;\n  getValue: <T = any>(id: string) => T;\n  setValue: (id: string, value: any) => void;\n  setJsonValue: (id: string, value: any) => void;\n  setError: (id: string, error: string) => void;\n}\n\nexport interface ApiFormProps {\n  title: string;\n  description?: string;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst ApiResetButton = function ApiResetButton() {\n  const { reset } = useForm();\n  return (\n    <Button variant=\"link\" size=\"sm\" onClick={() => reset()}>\n      Rest 请求\n    </Button>\n  );\n};\n\nexport const ApiForm = forwardRef<ApiFormRef, ApiFormProps>(function ApiForm(\n  { title, description, children, className }: ApiFormProps,\n  ref: React.Ref<ApiFormRef>,\n) {\n  return (\n    <ApiFormProvider ref={ref}>\n      <Card className={className}>\n        <div className=\"flex justify-between\">\n          <div>\n            <CardHeader className=\"text-xl font-medium searchable\">{title}</CardHeader>\n            {description && <CardDescription>{description}</CardDescription>}\n          </div>\n\n          <ApiResetButton />\n        </div>\n        <CardContent>\n          <div className=\"space-y-4\">{children}</div>\n        </CardContent>\n      </Card>\n    </ApiFormProvider>\n  );\n});\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useAtom } from 'jotai';\nimport type { IFormField } from '../types';\nimport { stringifyWithSpecialType } from '../../../lib/jsonUtils';\nimport { tryFormatJson } from '../../ApiActuator/ApiPayloadProvider';\nimport { get, isEmpty } from 'lodash';\nimport { useFormContext } from './useFormContext';\n\nexport interface UseFieldOptions<T, E> extends IFormField<T, E> {\n  id: string;\n}\n\nexport function useField<T = string | undefined, E = string>({\n  id,\n  name,\n  required,\n  defaultValue,\n  value,\n  extra,\n}: UseFieldOptions<T, E>) {\n  const { store, getFromApi } = useFormContext();\n\n  // 1. 初始化值只需要在组件挂载时创建一次\n  const initialValue = useMemo(\n    () => ({\n      name,\n      required,\n      defaultValue,\n      value: value ?? defaultValue ?? undefined,\n      extra,\n    }),\n    // 只在组件挂载时创建一次\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  const [field, setField] = useAtom(store.fieldAtom<T, E>(id, initialValue));\n\n  // 2. 所有更新函数都需要用 useCallback 缓存\n  const setValue = useCallback(\n    (value: T) => {\n      setField((prev) => {\n        if (prev.value === value) {\n          return prev;\n        }\n        return { ...prev, value };\n      });\n    },\n    [setField],\n  );\n\n  // 设置错误信息\n  const setError = useCallback(\n    (error?: string) => {\n      setField((prev) => ({ ...prev, error }));\n    },\n    [setField],\n  );\n\n  const setDisabled = useCallback(\n    (disabled: boolean) => {\n      setField((prev) => ({ ...prev, disabled }));\n    },\n    [setField],\n  );\n\n  const setExtra = useCallback(\n    (extra: E) => {\n      setField((prev) => ({ ...prev, extra }));\n    },\n    [setField],\n  );\n\n  const setValueJson = useCallback(\n    (value: T) => {\n      let resultString: string;\n      let errorMessage = '';\n\n      try {\n        // normal types\n        if (typeof value === 'number' || typeof value === 'boolean' || typeof value === 'string') {\n          resultString = value.toString();\n        } else {\n          resultString = stringifyWithSpecialType(value);\n        }\n      } catch (error) {\n        console.log('execute error', error);\n        try {\n          errorMessage = JSON.stringify(error);\n        } catch (error) {\n          errorMessage = get(error, 'message', 'Execution error');\n        }\n      }\n\n      if (isEmpty(errorMessage)) {\n        setValue(tryFormatJson(resultString) as T);\n      } else {\n        setError(errorMessage);\n      }\n    },\n    [setError, setValue],\n  );\n\n  // 3. 外部属性变化时的更新\n  useEffect(() => {\n    if (extra !== undefined) {\n      setExtra(extra);\n    }\n  }, [extra, setExtra]);\n\n  useEffect(() => {\n    if (value !== undefined) {\n      setField((prev) => ({ ...prev, value }));\n    }\n  }, [value, setField]);\n\n  useEffect(() => {\n    setField((prev) => {\n      if (prev.value === defaultValue) {\n        return prev;\n      }\n      return { ...prev, value: defaultValue };\n    });\n  }, [defaultValue, setField]);\n\n  // 4. 返回值使用 useMemo 缓存\n  return useMemo(\n    () => ({\n      field,\n      setValue,\n      setError,\n      setDisabled,\n      setExtra,\n      setValueJson,\n      getFromApi,\n    }),\n    [field, setValue, setError, setDisabled, setExtra, setValueJson, getFromApi],\n  );\n}\n","import React, { memo } from 'react';\nimport { Input } from '../ui/input';\nimport { Label } from '../ui/label';\nimport { useField } from './hooks/useField';\n\ninterface ApiInputProps {\n  id: string;\n  placeholder?: string;\n  type?: 'text' | 'number' | 'password';\n  hidden?: boolean;\n  defaultValue?: string;\n  label?: string;\n  required?: boolean;\n}\n\nconst ApiInput = memo(\n  ({\n    id,\n    placeholder,\n    type = 'text',\n    hidden = false,\n    defaultValue,\n    label,\n    required,\n  }: ApiInputProps) => {\n    const { field, setValue } = useField<string>({\n      id,\n      name: label,\n      required,\n      defaultValue,\n    });\n\n    return (\n      <>\n        <Input\n          id={id}\n          value={field?.value ?? ''}\n          onChange={(e) => setValue(e.target.value)}\n          placeholder={placeholder}\n          disabled={field?.disabled}\n          type={type}\n          hidden={hidden}\n        />\n        {field?.error && !hidden && <div className=\"text-sm text-red-500\">{field.error}</div>}\n      </>\n    );\n  },\n);\n\nexport interface ApiFieldProps extends ApiInputProps {\n  id: string;\n  required?: boolean;\n}\n\nexport const ApiField = memo(\n  ({ id, label, placeholder, required, hidden = false, defaultValue, type }: ApiFieldProps) => {\n    return (\n      <div>\n        {label && !hidden && (\n          <Label htmlFor={id}>\n            {label}\n            {required && <span className=\"text-red-500\">*</span>}\n          </Label>\n        )}\n        <ApiInput\n          id={id}\n          placeholder={placeholder}\n          type={type}\n          hidden={hidden}\n          defaultValue={defaultValue}\n          label={label}\n          required={required}\n        />\n      </div>\n    );\n  },\n);\n\nApiField.displayName = 'ApiField';\n","import React, { memo, useCallback, useMemo } from 'react';\nimport { useAtom } from 'jotai';\nimport { Button } from '../ui/button';\nimport { get, isEmpty } from 'lodash';\nimport { toast } from '../ui/use-toast';\nimport { useFormContext } from './hooks/useFormContext';\nimport { useField } from './hooks/useField';\nimport { IFormField } from './types';\nimport { ApiFormRef } from './ApiForm';\n\nexport interface ApiButtonProps {\n  id: string;\n  label: string;\n  disabled?: boolean;\n  onClick: (\n    form: ApiFormRef | null | undefined,\n    values: Record<string, IFormField<any>>,\n  ) => Promise<void>;\n  validation?: {\n    fields: string[];\n    validator?: (values: Record<string, IFormField<any>>) => string | undefined;\n  };\n  availableDependencyFields?: {\n    fieldIds?: string[];\n    required?: () =>\n      | {\n          errorMessage?: string;\n        }\n      | undefined;\n  }[];\n}\n\nexport const ApiButton = memo(\n  ({ id, label, onClick, validation, availableDependencyFields, disabled}: ApiButtonProps) => {\n    const context = useFormContext();\n    if (!context) throw new Error('ApiButton must be used within ApiForm');\n\n    const { store, getFromApi } = context;\n    const { field, setExtra } = useField<string, { loading: boolean; result: string }>({\n      id,\n      name: label,\n    });\n\n    const loading = field?.extra?.loading ?? false;\n    const result = field?.extra?.result;\n\n    // 使用 useMemo 缓存依赖字段ID数组\n    const dependencyFieldIds = useMemo(() => {\n      if (!availableDependencyFields?.length) return [];\n\n      return Array.from(\n        availableDependencyFields.reduce((acc, field) => {\n          field.fieldIds.forEach((fieldId) => {\n            acc.add(fieldId);\n          });\n          return acc;\n        }, new Set<string>()),\n      );\n    }, [availableDependencyFields]);\n\n    // 使用缓存的依赖字段ID数组\n    const [dependencyStates] = useAtom(\n      useMemo(() => store.fieldsAtom(dependencyFieldIds), [store, dependencyFieldIds]),\n    );\n\n    const disabledTooltip = useMemo(() => {\n      const filterEmptyFields = dependencyStates.filter(\n        (field) => field?.value == null || isEmpty(field?.value),\n      );\n\n      // 检查是否有任意一组依赖字段全部填写完整\n      const hasValidDependencyGroup = availableDependencyFields?.some((field) => {\n        // 检查这组字段是否都已填写（即没有出现在 filterEmptyFields 中）\n        const everyFilled = field.fieldIds.every((fieldId) => {\n          return !filterEmptyFields.some((f) => f.id === fieldId);\n        });\n        // 没有依赖的错误信息\n        const requiredError = field.required?.()?.errorMessage == null;\n\n        return everyFilled && requiredError;\n      });\n\n      // 如果有任意一组依赖字段全部填写完整，返回 null（允许点击）\n      if (hasValidDependencyGroup) {\n        return null;\n      }\n\n      // 生成分组提示信息\n      if (availableDependencyFields?.length > 0) {\n        const groupMessages = availableDependencyFields\n          .map((group) => {\n            const required = group.required?.();\n            if (required?.errorMessage) {\n              return required.errorMessage;\n            }\n\n            const emptyFieldsInGroup = group.fieldIds\n              .map((fieldId) => dependencyStates.find((f) => f.id === fieldId))\n              .filter((field) => field && (field.value == null || isEmpty(field.value)))\n              .map((field) => field.name ?? field.id);\n\n            if (emptyFieldsInGroup.length === 0) return null;\n            return `(${emptyFieldsInGroup.join(' 和 ')})`;\n          })\n          .filter(Boolean);\n\n        if (groupMessages.length > 0) {\n          return `请填写: ${groupMessages.join(' 或 ')}`;\n        }\n      }\n\n      return null;\n    }, [availableDependencyFields, dependencyStates]);\n\n    const setResult = useCallback(\n      (value: string) => {\n        setExtra({ ...field?.extra, result: value });\n      },\n      [field?.extra, setExtra],\n    );\n\n    const setLoading = useCallback(\n      (value: boolean) => {\n        setExtra({ ...field?.extra, loading: value });\n      },\n      [field?.extra, setExtra],\n    );\n\n    const handleClick = useCallback(async () => {\n      setResult(undefined);\n\n      let isValid = true;\n      let validError = '';\n\n      // 运行自定义验证\n      if (validation?.validator) {\n        const fields = store.fieldsAtom(validation?.fields);\n        const fieldValues = store.scope.get(fields)?.reduce((acc, field) => {\n          acc[field.id] = field;\n          return acc;\n        }, {} as Record<string, IFormField<any>>);\n\n        const hasEmptyRequired = validation.fields.some(\n          (fieldId) => isEmpty(fieldValues[fieldId]?.value) && !!fieldValues[fieldId]?.required,\n        );\n\n        if (hasEmptyRequired) {\n          isValid = false;\n          validError = `请填写 ${validation.fields\n            .filter(\n              (fieldId) => isEmpty(fieldValues[fieldId]?.value) && !!fieldValues[fieldId]?.required,\n            )\n            .join(', ')} 字段`;\n        }\n\n        if (!isValid) {\n          setResult(validError || '验证失败');\n          return;\n        }\n\n        const error = validation.validator(fieldValues);\n        isValid = !error;\n        validError = error;\n      }\n\n      if (!isValid) {\n        setResult(validError || '验证失败');\n        return;\n      }\n\n      try {\n        setLoading(true);\n        const allFields = store.allFieldsAtom();\n        const fieldValues = store.scope.get(allFields)?.reduce((acc, field) => {\n          acc[field.id] = field;\n          return acc;\n        }, {} as Record<string, IFormField<any>>);\n        await onClick(getFromApi(), fieldValues);\n      } catch (error) {\n        const errorMessage = get(error, 'message', 'error') ?? JSON.stringify(error);\n        toast({\n          title: '执行失败',\n          description: errorMessage,\n          variant: 'destructive',\n        });\n        setResult(errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    }, [setResult, validation, store, setLoading, onClick, getFromApi]);\n\n    return (\n      <div className=\"flex flex-col gap-1\">\n        <Button key={id} onClick={handleClick} disabled={disabledTooltip != null || disabled} loading={loading}>\n          {label}\n        </Button>\n        {disabledTooltip && <div className=\"text-red-500 text-sm\">{disabledTooltip}</div>}\n        {result && <div className=\"text-red-500 text-sm\">{result}</div>}\n      </div>\n    );\n  },\n);\n\nApiButton.displayName = 'ApiButton';\n","import React, { memo } from 'react';\nimport { Label } from '../ui/label';\nimport JsonEditor from '../ui/jsonEditor';\nimport { useField } from './hooks/useField';\n\ninterface JsonEditProps {\n  id: string;\n  placeholder?: string;\n  label?: string;\n  required?: boolean;\n}\n\nconst JsonEdit = memo(({ id, placeholder, label, required }: JsonEditProps) => {\n  const { field, setValue } = useField<string>({\n    id,\n    name: label,\n    required,\n  });\n\n  return (\n    <>\n      <JsonEditor\n        value={field?.value ?? ''}\n        onChange={(e) => setValue(e)}\n        placeholder={placeholder}\n      />\n      {field?.error && <div className=\"text-sm text-red-500\">{field.error}</div>}\n    </>\n  );\n});\n\nexport interface ApiJsonEditProps extends JsonEditProps {\n  id: string;\n  label?: string;\n  required?: boolean;\n}\n\nexport const ApiJsonEdit = memo(({ id, label, placeholder, required }: ApiJsonEditProps) => {\n  return (\n    <div>\n      {label && (\n        <Label htmlFor={id}>\n          {label}\n          {required && <span className=\"text-red-500\">*</span>}\n        </Label>\n      )}\n      <JsonEdit id={id} placeholder={placeholder} />\n    </div>\n  );\n});\n\nApiJsonEdit.displayName = 'ApiJsonEdit';\n","import React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\nimport { Label } from '../ui/label';\nimport { useField } from './hooks/useField';\nimport { ApiFormRef } from './ApiForm';\nimport { useFormContext } from './hooks/useFormContext';\n\ninterface IOption<T> {\n  value: string;\n  label: string;\n  extra?: T;\n  remark?: string;\n}\n\nexport interface ApiSelectorProps<T = string> {\n  id: string;\n  label?: string;\n  required?: boolean;\n  defaultValue?: string;\n  placeholder?: string;\n  onRequestOptions?: () => Promise<IOption<T>[]>;\n  onValueChange?: (value: string | null, formRef: ApiFormRef | null | undefined) => void;\n  onOptionChange?: (option: IOption<T> | null, formRef: ApiFormRef | null | undefined) => void;\n}\n\nexport interface ApiSelectorRef<T = string> {\n  getCurrentValue: () => string | undefined;\n  getCurrentOption: () => IOption<T> | undefined;\n  getOptions: () => IOption<T>[];\n  setValue: (value: string) => void;\n}\n\nexport const ApiSelector = forwardRef<ApiSelectorRef, ApiSelectorProps>(function ApiSelector<\n  T = string,\n>(\n  {\n    id,\n    label,\n    required,\n    defaultValue,\n    placeholder,\n    onRequestOptions,\n    onValueChange,\n    onOptionChange,\n  }: ApiSelectorProps<T>,\n  ref: React.Ref<ApiSelectorRef<T>>,\n) {\n  const {\n    getFromApi,\n    field,\n    setValue: setField,\n    setExtra,\n  } = useField<string, { options: IOption<T>[] | undefined }>({\n    id,\n    name: label,\n    required,\n  });\n  const options = field.extra?.options;\n\n  const getCurrentOption = useCallback(() => {\n    return options?.find((opt) => opt.value === field.value);\n  }, [options, field.value]);\n\n  const currentOption = useMemo(() => getCurrentOption(), [getCurrentOption]);\n\n  const setOptions = useCallback(\n    (options: IOption<T>[]) => {\n      setExtra({\n        options,\n      });\n    },\n    [setExtra],\n  );\n\n  useEffect(() => {\n    if (onRequestOptions) {\n      void onRequestOptions().then((options) => {\n        setOptions(options);\n      });\n    }\n  }, [onRequestOptions, setOptions]);\n\n  const setValue = useCallback(\n    (value: string | null) => {\n      setField(value);\n      onValueChange?.(value, getFromApi());\n      onOptionChange?.(options?.find((opt) => opt.value === value) ?? null, getFromApi());\n    },\n    [setField, onValueChange, getFromApi, onOptionChange, options],\n  );\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      setValue,\n      getCurrentValue: () => currentOption?.value,\n      getCurrentOption: () => currentOption,\n      getOptions: () => options,\n      setOptions,\n    }),\n    [currentOption, options, setOptions, setValue],\n  );\n\n  return (\n    <div>\n      {label && (\n        <Label htmlFor={id}>\n          {label}\n          {required && <span className=\"text-red-500\">*</span>}\n        </Label>\n      )}\n      <Select defaultValue={defaultValue} value={field.value} onValueChange={setValue}>\n        {placeholder && (\n          <SelectTrigger className=\"w-full\">\n            <SelectValue className=\"text-base font-medium\" placeholder={placeholder} />\n          </SelectTrigger>\n        )}\n        <SelectContent>\n          {options?.map((option) => (\n            <SelectItem key={option.value} value={option.value} className=\"text-base font-medium\">\n              {option.label}\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n      {currentOption?.remark && (\n        <span className=\"px-1 text-sm text-muted-foreground\">{currentOption.remark}</span>\n      )}\n    </div>\n  );\n});\n\nApiSelector.displayName = 'ApiSelector';\n","import React, { memo } from 'react';\nimport { Checkbox } from '../ui/checkbox';\nimport { useField } from './hooks/useField';\n\nexport interface ApiCheckboxProps {\n  id: string;\n  label?: string;\n  defaultChecked?: boolean;\n}\n\nexport const ApiCheckbox = memo(({ id, label, defaultChecked }: ApiCheckboxProps) => {\n  const { field, setValue } = useField<boolean>({ id, name: label, defaultValue: defaultChecked });\n\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Checkbox\n        id={id}\n        defaultChecked={defaultChecked}\n        required={field.required}\n        checked={field.value}\n        onCheckedChange={(e) => setValue(!!e)}\n        disabled={field.disabled}\n      />\n\n      <label\n        htmlFor={id}\n        className=\"p-0 m-0 text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n      >\n        {label}\n      </label>\n\n      {field.error && <div className=\"text-sm text-red-500\">{field.error}</div>}\n    </div>\n  );\n});\n\nApiCheckbox.displayName = 'ApiCheckbox';\n","import React, { memo } from 'react';\nimport { Label } from '../ui/label';\nimport { AutoHeightTextarea } from '../ui/textarea';\nimport { useField } from './hooks/useField';\n\ninterface AutoTextAreaProps {\n  id: string;\n  placeholder?: string;\n  label?: string;\n  required?: boolean;\n  maxHeight?: number;\n}\n\nconst TextArea = memo(({ id, placeholder, label, required, maxHeight = 500 }: AutoTextAreaProps) => {\n  const { field, setValue } = useField<string>({ id, name: label, required });\n\n  return (\n    <>\n      <AutoHeightTextarea\n        id={id}\n        value={field.value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder={placeholder}\n        disabled={field.disabled}\n        className=\"min-h-10\"\n        maxHeight={maxHeight}\n      />\n      {field.error && <div className=\"text-sm text-red-500\">{field.error}</div>}\n    </>\n  );\n});\n\nexport interface ApiAutoTextAreaProps extends AutoTextAreaProps {\n  id: string;\n}\n\nexport const ApiAutoTextArea = memo(\n  ({ id, label, placeholder, required }: ApiAutoTextAreaProps) => {\n    return (\n      <div>\n        {label && (\n          <Label htmlFor={id}>\n            {label}\n            {required && <span className=\"text-red-500\">*</span>}\n          </Label>\n        )}\n        <TextArea id={id} placeholder={placeholder} label={label} required={required} />\n      </div>\n    );\n  },\n);\n\nApiAutoTextArea.displayName = 'ApiAutoTextArea';\n","import React, { memo } from 'react';\nimport { Label } from '../ui/label';\nimport { Textarea } from '../ui/textarea';\nimport { useField } from './hooks/useField';\n\ninterface TextAreaProps {\n  id: string;\n  placeholder?: string;\n  label?: string;\n  required?: boolean;\n}\n\nconst TextArea = memo(({ id, placeholder, label, required }: TextAreaProps) => {\n  const { field, setValue } = useField<string>({\n    id,\n    name: label,\n    required,\n  });\n\n  return (\n    <>\n      <Textarea\n        id={id}\n        value={field?.value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder={placeholder}\n        disabled={field?.disabled}\n        style={{ overflow: 'hidden' }}\n      />\n      {field?.error && <div className=\"text-sm text-red-500\">{field.error}</div>}\n    </>\n  );\n});\n\nexport interface ApiTextAreaProps extends TextAreaProps {\n  id: string;\n  label?: string;\n  required?: boolean;\n}\n\nexport const ApiTextArea = memo(({ id, label, placeholder, required }: ApiTextAreaProps) => {\n  return (\n    <div>\n      {label && (\n        <Label htmlFor={id}>\n          {label}\n          {required && <span className=\"text-red-500\">*</span>}\n        </Label>\n      )}\n      <TextArea id={id} placeholder={placeholder} />\n    </div>\n  );\n});\n\nApiTextArea.displayName = 'ApiTextArea';\n","import React, { memo } from 'react';\nimport { Switch } from '../ui/switch';\nimport { useField } from './hooks/useField';\n\nexport interface ApiSwitchProps {\n  id: string;\n  label?: string;\n  defaultChecked?: boolean;\n}\n\nexport const ApiSwitch = memo(({ id, label, defaultChecked }: ApiSwitchProps) => {\n  const { field, setValue } = useField<boolean>({\n    id,\n    name: label,\n    defaultValue: defaultChecked,\n  });\n\n  return (\n    <div className=\"flex items-center gap-2\">\n      <Switch\n        id={id}\n        defaultChecked={defaultChecked}\n        required={field.required}\n        checked={field.value}\n        onCheckedChange={(e) => setValue(e)}\n        disabled={field.disabled}\n      />\n\n      <label\n        htmlFor={id}\n        className=\"p-0 m-0 text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n      >\n        {label}\n      </label>\n\n      {field.error && <div className=\"text-sm text-red-500\">{field.error}</div>}\n    </div>\n  );\n});\n\nApiSwitch.displayName = 'ApiSwitch';\n","import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { Dialog, DialogContent } from \"./dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\ntype CommandDialogProps = DialogProps\n\nconst CommandDialog = ({ children, ...props }: CommandDialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","import React, { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { Label } from '../ui/label';\nimport { Popover, PopoverContent, PopoverTrigger } from '../ui/popover';\nimport { Button } from '../ui/button';\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from '../ui/command';\nimport { ChevronDownIcon, CheckIcon } from 'lucide-react';\nimport { cn } from '../../lib/utils';\nimport { useField } from './hooks/useField';\nimport { ApiFormRef } from './ApiForm';\nimport { useFormContext } from './hooks/useFormContext';\n\nexport interface IOption<T> {\n  value: string;\n  label: string;\n  extra?: T;\n  remark?: string;\n}\n\nexport interface ApiComboboxProps<T = string> {\n  id: string;\n  label?: string;\n  required?: boolean;\n  defaultValue?: string;\n  placeholder?: string;\n  requestOptionsKey?: string;\n  onRequestOptions?: () => Promise<IOption<T>[]>;\n  onValueChange?: (value: string | null, formRef: ApiFormRef | null | undefined) => void;\n  onOptionChange?: (option: IOption<T> | null, formRef: ApiFormRef | null | undefined) => void;\n}\n\nexport interface ApiComboboxRef<T = string> {\n  getCurrentValue: () => string | undefined;\n  getCurrentOption: () => IOption<T> | undefined;\n  getOptions: () => IOption<T>[];\n  setValue: (value: string) => void;\n  setOptions: (options: IOption<T>[]) => void;\n}\n\nexport const ApiCombobox = forwardRef(function ApiCombobox<T = string>(\n  {\n    id,\n    label,\n    required,\n    defaultValue,\n    placeholder,\n    requestOptionsKey,\n    onRequestOptions,\n    onValueChange,\n    onOptionChange,\n  }: ApiComboboxProps<T>,\n  ref: React.Ref<ApiComboboxRef<T>>,\n) {\n  const {\n    getFromApi,\n    field,\n    setValue: setField,\n    setExtra,\n  } = useField<string, { options: IOption<T>[] | undefined }>({\n    id,\n    name: label,\n    required,\n    defaultValue,\n  });\n\n  const options = field?.extra?.options;\n  const [open, setOpen] = React.useState(false);\n\n  const getCurrentOption = useCallback(() => {\n    return options?.find((opt) => opt.value === field.value);\n  }, [options, field?.value]);\n\n  const currentOption = useMemo(() => getCurrentOption(), [getCurrentOption]);\n\n  const setOptions = useCallback(\n    (options: IOption<T>[]) => {\n      setExtra({\n        options,\n      });\n    },\n    [setExtra],\n  );\n\n  useEffect(() => {\n    setOptions([]);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [requestOptionsKey]);\n\n  useEffect(() => {\n    if (open && onRequestOptions && (options?.length == null || options?.length === 0)) {\n      void onRequestOptions().then((options) => {\n        setOptions(options);\n      });\n    }\n  }, [open, onRequestOptions, options?.length, setOptions]);\n\n  const setValue = useCallback(\n    (value: string | null) => {\n      setField(value);\n      setOpen(false);\n      onValueChange?.(value, getFromApi());\n      onOptionChange?.(options?.find((opt) => opt.value === value) ?? null, getFromApi());\n    },\n    [setField, onValueChange, getFromApi, onOptionChange, options],\n  );\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      setValue,\n      getCurrentValue: () => currentOption?.value,\n      getCurrentOption: () => currentOption,\n      getOptions: () => options,\n      setOptions,\n    }),\n    [currentOption, options, setOptions, setValue],\n  );\n\n  return (\n    <div className=\"flex flex-col\">\n      {label && (\n        <Label htmlFor={id}>\n          {label}\n          {required && <span className=\"text-red-500\">*</span>}\n        </Label>\n      )}\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            variant=\"outline\"\n            role=\"combobox\"\n            aria-expanded={open}\n            className=\"w-full justify-between\"\n          >\n            <span className=\"truncate text-left break-all line-clamp-2\">\n              {currentOption?.value\n                ? options.find((option) => option.value === currentOption?.value)?.label\n                : placeholder}\n            </span>\n            <ChevronDownIcon className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-[var(--radix-popover-trigger-width)] p-0\">\n          <Command>\n            <CommandInput placeholder={placeholder} className=\"h-9\" />\n            <CommandList>\n              <CommandEmpty>没有找到选项</CommandEmpty>\n              <CommandGroup>\n                {options?.map((option) => (\n                  <CommandItem\n                    key={option.value}\n                    value={option.label}\n                    className=\"break-all\"\n                    onSelect={(currentLabel) => {\n                      const currentOption = options?.find((opt) => opt.label === currentLabel);\n                      setValue(currentOption?.value ?? null);\n                    }}\n                  >\n                    {option.label}\n                    <CheckIcon\n                      className={cn(\n                        'ml-auto h-4 w-4',\n                        currentOption?.value === option.value ? 'opacity-100' : 'opacity-0',\n                      )}\n                    />\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n      {currentOption?.remark && (\n        <span className=\"px-1 text-sm text-muted-foreground\">{currentOption.remark}</span>\n      )}\n    </div>\n  );\n}) as <T>(\n  props: ApiComboboxProps<T> & { ref?: React.Ref<ApiComboboxRef<T>> },\n) => React.ReactElement;\n\n// ApiCombobox.displayName = 'ApiCombobox';\n","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[2px] w-full\" : \"h-full w-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","import React, { memo } from 'react';\nimport { Separator } from '../ui/separator';\n\nexport const ApiSeparator = memo(() => {\n    return <Separator />\n});\n\nApiSeparator.displayName = 'ApiSeparator';","import React, { memo } from 'react';\nimport { cn } from '../../lib/utils';\nimport { useField } from './hooks/useField';\nexport interface ApiTextProps {\n  id?: string;\n  size?: 'sm' | 'md' | 'lg';\n  type?: 'text' | 'error' | 'warning' | 'success' | 'info';\n  hidden?: boolean;\n  value?: string;\n}\n\nexport const ApiText = memo(({ id, size = 'md', type = 'text', hidden = false, value }: ApiTextProps) => {\n  const { field } = useField<string>({\n    id,\n    value,\n  });\n\n  if (hidden) return null;\n\n  let textSize = '';\n  switch (size) {\n    case 'sm':\n      textSize = 'text-sm';\n      break;\n    case 'md':\n      textSize = 'text-base';\n      break;\n    case 'lg':\n      textSize = 'text-lg';\n      break;\n  }\n\n  let bgColor = '';\n  let textColor = '';\n  switch (type) {\n    case 'error':\n      textColor = 'text-black';\n      bgColor = 'bg-red-100';\n      break;\n    case 'warning':\n      textColor = 'text-black';\n      bgColor = 'bg-yellow-100';\n      break;\n    case 'success':\n      textColor = 'text-black';\n      bgColor = 'bg-green-100';\n      break;\n    case 'info':\n      textColor = 'text-black';\n      bgColor = 'bg-gray-100';\n      break;\n    case 'text':\n      textColor = 'text-black';\n      bgColor = 'bg-white';\n      break;\n    default:\n      textColor = 'text-black';\n      bgColor = 'bg-white';\n  }\n\n  if (field.value) {\n    return (\n      <div className={cn(textSize, textColor, bgColor, 'p-1 rounded-md font-medium')}>\n        {field?.value}\n      </div>\n    );\n  }\n  return null;\n});\n\nApiText.displayName = 'ApiText';\n","import { ApiForm } from './ApiForm';\nimport { ApiField } from './ApiField';\nimport { ApiButton } from './ApiButton';\nimport { ApiJsonEdit } from './ApiJsonEdit';\nimport { ApiSelector } from './ApiSelector';\nimport { ApiCheckbox } from './ApiCheckbox';\nimport { ApiAutoTextArea } from './ApiAutoTextArea';\nimport { ApiTextArea } from './ApiTextArea';\nimport { ApiSwitch } from './ApiSwitch';\nimport { ApiCombobox } from './ApiCombobox';\nimport { ApiSeparator } from './ApiSeparator';\nimport { ApiText } from './ApiText';\nimport { useField } from './hooks/useField';\nimport { useForm } from './hooks/useForm';\nimport { useFormContext } from './hooks/useFormContext';\n\nconst Form = ApiForm as typeof ApiForm & {\n  Field: typeof ApiField;\n  Button: typeof ApiButton;\n  JsonEdit: typeof ApiJsonEdit;\n  Selector: typeof ApiSelector;\n  Checkbox: typeof ApiCheckbox;\n  AutoHeightTextArea: typeof ApiAutoTextArea;\n  TextArea: typeof ApiTextArea;\n  Switch: typeof ApiSwitch;\n  Combobox: typeof ApiCombobox;\n  Separator: typeof ApiSeparator;\n  Text: typeof ApiText;\n  useField: typeof useField;\n  useForm: typeof useForm;\n  useFormContext: typeof useFormContext;\n};\n\nForm.Field = ApiField;\nForm.Button = ApiButton;\nForm.JsonEdit = ApiJsonEdit;\nForm.Selector = ApiSelector;\nForm.Checkbox = ApiCheckbox;\nForm.AutoHeightTextArea = ApiAutoTextArea;\nForm.TextArea = ApiTextArea;\nForm.Switch = ApiSwitch;\nForm.Combobox = ApiCombobox;\nForm.Separator = ApiSeparator;\nForm.Text = ApiText;\nForm.useField = useField;\nForm.useForm = useForm;\nForm.useFormContext = useFormContext;\n\nexport { Form as ApiForm };\nexport type { ApiFormProps, ApiFormRef } from './ApiForm';\nexport type { ApiFieldProps } from './ApiField';\nexport type { ApiButtonProps } from './ApiButton';\nexport type { ApiJsonEditProps } from './ApiJsonEdit';\nexport type { ApiSelectorProps, ApiSelectorRef } from './ApiSelector';\nexport type { ApiCheckboxProps } from './ApiCheckbox';\nexport type { ApiAutoTextAreaProps } from './ApiAutoTextArea';\nexport type { ApiTextAreaProps } from './ApiTextArea';\nexport type { ApiSwitchProps } from './ApiSwitch';\nexport type { ApiComboboxProps, ApiComboboxRef, IOption as ComboboxOption } from './ApiCombobox';\nexport type { ApiTextProps } from './ApiText';\n","import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[35%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":["ApiFormProviderContext","React","useFormContext","context","formStores","Map","createFormStore","formId","id","nanoid","has","get","fieldsAtoms","store","scope","createStore","fieldAtom","initialValue","atom","value","defaultValue","undefined","set","fieldsAtom","fieldIds","length","map","field","allFields","Array","from","keys","allFieldsAtom","values","reset","forEach","destroy","clear","deleteFormStore","delete","ApiFormProvider","forwardRef","param","ref","children","useMemo","useEffect","formApi","getField","setField","oldField","getValue","setValue","setJsonValue","result","resultString","errorMessage","toString","stringifyWithSpecialType","error","console","log","JSON","stringify","isEmpty","tryFormatCompactJson","setError","useImperativeHandle","getFromApi","useCallback","contextValue","jsx_runtime","jsx","Provider","useForm","ApiResetButton","Button","variant","size","onClick","ApiForm","title","description","className","jsxs","Card","div","CardHeader","CardDescription","CardContent","useField","name","required","extra","useAtom","prev","setDisabled","disabled","setExtra","setValueJson","tryFormatJson","ApiInput","memo","placeholder","type","hidden","label","Fragment","Input","onChange","e","target","ApiField","Label","htmlFor","span","displayName","ApiButton","validation","availableDependencyFields","loading","dependencyFieldIds","reduce","acc","add","fieldId","Set","dependencyStates","disabledTooltip","filterEmptyFields","filter","hasValidDependencyGroup","some","everyFilled","every","f","requiredError","groupMessages","group","emptyFieldsInGroup","find","concat","join","Boolean","setResult","setLoading","handleClick","isValid","validError","validator","fields","fieldValues","hasEmptyRequired","toast","JsonEdit","JsonEditor","ApiJsonEdit","ApiSelector","onRequestOptions","onValueChange","onOptionChange","options","getCurrentOption","opt","currentOption","setOptions","then","getCurrentValue","getOptions","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","option","remark","ApiCheckbox","defaultChecked","Checkbox","checked","onCheckedChange","TextArea","maxHeight","AutoHeightTextarea","ApiAutoTextArea","Textarea","style","overflow","ApiTextArea","ApiSwitch","Switch","Command","props","CommandPrimitive","cn","CommandInput","cmdk-input-wrapper","Search","CommandList","List","CommandEmpty","Empty","CommandGroup","Group","CommandSeparator","Separator","CommandItem","Item","ApiCombobox","requestOptionsKey","open","setOpen","Popover","onOpenChange","PopoverTrigger","asChild","role","aria-expanded","ChevronDownIcon","PopoverContent","onSelect","currentLabel","CheckIcon","orientation","decorative","SeparatorPrimitive","ApiSeparator","ApiText","textSize","bgColor","textColor","Form","Field","Selector","AutoHeightTextArea","Combobox","Text","__webpack_exports__","Z","dapps","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","CardTitle","dapp","index","Link","href","url","legacyBehavior","a","Dialog","DialogPrimitive","DialogTrigger","DialogPortal","DialogClose","DialogOverlay","DialogContent","X","DialogHeader","DialogTitle","DialogDescription","labelVariants","cva","LabelPrimitive"],"sourceRoot":""}