import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import * as NearApi from 'near-api-js';
import { OneKeyNearProvider, NearAccountsChangedPayload } from '@onekeyfe/onekey-near-provider';
import { useEffect, useState } from 'react';

const hasWindow = typeof window !== 'undefined';

const myImageLoader = ({ src, width, quality }: any) => {
  return src as string;
};

const Home: NextPage = () => {
  const [provider, setProvider] = useState<OneKeyNearProvider | null>(null);
  const [accountId, setAccountId] = useState('');
  useEffect(() => {
    if (!hasWindow) {
      // return;
    }
    const config = {
      networkId: 'mainnet',
      nodeUrl: 'https://rpc.mainnet.near.org',
      headers: {},
      keyStore: new NearApi.keyStores.BrowserLocalStorageKeyStore(),
    };

    void (async () => {
      const near = new NearApi.Near(config);
      const connection = near.connection;
      // const connection = NearApi.Connection.fromConfig({
      //   networkId: config.networkId,
      //   provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },
      //   signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }
      // });

      const _provider = new OneKeyNearProvider({
        connection,
        networkId: config.networkId,
        logger: console,
      });
      const installed = await _provider.detectWalletInstalled();
      if (!installed) {
        return;
      }
      setAccountId(_provider.getAccountId());
      // TODO event name typescript
      _provider.on('accountsChanged', (payload) => {
        const _accountId = payload?.accounts?.[0]?.accountId || '';
        console.log('accountsChanged', _accountId);
        setAccountId(_accountId);
      });
      // eslint-disable-next-line @typescript-eslint/ban-ts-comment
      // @ts-ignore
      global.$nearWallet = _provider;
      setProvider(_provider);
    })();
  }, []);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <div>{accountId}</div>
        <button onClick={() => provider?.requestSignIn()}>requestSignIn</button>
        {/* TODO signOut emit accountsChanged */}
        <button onClick={() => provider?.signOut()}>signOut</button>

        <p className={styles.description}>
          Get started by editing <code className={styles.code}>pages/index.tsx</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a href="https://github.com/vercel/next.js/tree/canary/examples" className={styles.card}>
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>Instantly deploy your Next.js site to a public URL with Vercel.</p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image
              loader={myImageLoader}
              src="/vercel.svg"
              alt="Vercel Logo"
              width={72}
              height={16}
            />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
