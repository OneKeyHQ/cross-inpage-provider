{"version":3,"file":"static/chunks/7326.1abb06ee5dcfd6ec.js","mappings":"4JA8BAA,CAAAA,EAAAC,CAAA,CAjB0C,OAAC,CAAEC,MAAAA,CAAK,CAAE,CAAAC,EAClD,MACE,GAAAC,EAAAC,IAAA,EAACC,EAAAA,EAAIA,CAAAA,WACH,GAAAF,EAAAG,GAAA,EAACC,EAAAA,EAASA,CAAAA,CAACC,UAAU,mBAAU,mBAC/B,GAAAL,EAAAG,GAAA,EAACG,EAAAA,EAAWA,CAAAA,CAACD,UAAU,+EACpBP,EAAMS,GAAG,CAAC,CAACC,EAAMC,IAChB,GAAAT,EAAAG,GAAA,EAACO,MAAAA,CAAgBL,UAAU,2DACzB,GAAAL,EAAAG,GAAA,EAACQ,IAAIA,CAACC,KAAMJ,EAAKK,GAAG,CAAEC,eAAc,YAClC,GAAAd,EAAAC,IAAA,EAACc,IAAAA,CAAEV,UAAU,wDAA+CG,EAAKQ,IAAI,CAAC,WAFhEP,QASpB,yGCrBe,SAASQ,WAAWlB,CAAoC,KAApC,CAAEmB,MAAAA,CAAK,CAAEC,SAAAA,CAAQ,CAAmB,CAApCpB,EACjC,MACE,GAAAC,EAAAC,IAAA,EAACC,EAAAA,EAAIA,CAAAA,WACFgB,GAAS,GAAAlB,EAAAG,GAAA,EAACiB,EAAAA,EAAUA,CAAAA,CAACf,UAAU,uBAAea,IAC/C,GAAAlB,EAAAG,GAAA,EAACG,EAAAA,EAAWA,CAAAA,CAACD,UAAU,mDAA2Cc,MAGxE,wGCdO,IAAME,EAAW,CACtB,CACEL,KAAM,WACNM,cAAe,EACfT,IAAK,uBACP,EACA,CACEG,KAAM,SACNM,cAAe,EACfT,IAAK,8BAEP,EAMA,CACEG,KAAM,QACNM,cAAe,EACfT,IAAK,yBAEP,EACA,CACEG,KAAM,QACNM,cAAe,GACfT,IAAK,wBACP,EACA,CACEG,KAAM,YACNM,cAAe,IACfT,IAAK,yBACP,EACD,CAEYf,EAAQ,CACnB,CACEkB,KAAM,cACNH,IAAK,8BACP,EACA,CACEG,KAAM,UACNH,IAAK,sBACP,EACA,CACEG,KAAM,YACNH,IAAK,uBACP,EACD,kLChDDU,EAAe,CACbC,QAAS,CACP,CACEC,GAAI,UACJT,KAAM,UACNU,MAAO,iBACT,EACD,CACDC,YAAa,GAAqB,CAChC,CACEF,GAAI,cACJT,KAAM,cACNU,MAAOE,KAAKC,SAAS,CAAC,CACpBC,GAAIC,EACJL,MAAO,MACT,EACF,EACD,qDCYY,SAASM,UACtB,IAAMC,EAAaC,CAAAA,EAAAA,EAAAA,MAAAA,EAAwB,EAAE,EAEvC,CAAEC,SAAAA,CAAQ,CAAEC,WAAAA,CAAU,CAAEC,QAAAA,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IAEpC,CAACC,EAAsBC,EAAwB,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,IAClD,CAACC,EAAgBC,EAAkB,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAiB,IAEvDG,EAAiBC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IACtBR,MAAAA,EAAAA,KAAAA,EAAAA,EAASN,OAAO,CACtB,CAACM,EAAQ,EACNS,EAA8BD,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IACnCN,EACN,CAACA,EAAqB,EAEnBQ,EAASb,CAAAA,EAAAA,EAAAA,MAAAA,IAEfc,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,GAAIF,KAAgCG,IAAhCH,EAA2C,CAC7C,IAAMI,EAAc7B,EAAS8B,IAAI,CAAC,GAAOC,EAAE9B,aAAa,GAAKwB,GAC7D,GAAII,EAAa,CACf,IAAMG,EAAa,IAAIC,EAAAA,CAAUA,CAACJ,EAAYrC,GAAG,EAC3C0C,EAAiB,IAAIC,EAAAA,CAAUA,CAAC,CAAErB,SAAUkB,CAAW,GAE7DI,QAAQC,GAAG,CACT,sCACAZ,EACAI,EAAYrC,GAAG,EAIjB0C,EAAeI,OAAO,CAACC,IAAI,CAAC,KAC1Bb,EAAOc,OAAO,CAAGN,EACV,KACAA,EAAeO,UAAU,GACzBT,EAAWS,UAAU,EAC5B,GAEJ,CACF,MACEL,QAAQC,GAAG,CAAC,iDACZX,EAAOc,OAAO,CAAGZ,KAAAA,CAErB,EAAG,CAACH,EAA4B,EAEhCE,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KAGR,GAFAS,QAAQC,GAAG,CAAC,uBAAwBd,EAAgBE,GAEhDF,GAAkBE,MAAAA,EAAqC,CACzD,IAAMiB,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAAapB,GACvB,CAACqB,EAASC,EAAQC,EAAYC,EAAY,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAAqBN,GAElEb,EAAc7B,EAAS8B,IAAI,CAAC,GAAOC,EAAE9B,aAAa,GAAKwB,GAExDI,GAGLP,EACE2B,CAAAA,EAAAA,EAAAA,CAAAA,EAAcP,EAAQQ,QAAQ,CAACJ,EAAYD,GAAShB,EAAY5B,aAAa,EAEjF,MACEqB,EAAkBM,KAAAA,EAEtB,EAAG,CAACL,EAAgBE,EAA4B,EAEhDE,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,SAQgBE,EAPxB,GAAI,CAACb,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASN,OAAO,EACnB,OAEF,IAAMgC,EAAUC,CAAAA,EAAAA,EAAAA,EAAAA,EAAa3B,MAAAA,EAAAA,KAAAA,EAAAA,EAASN,OAAO,EACvC,CAACkC,EAASC,EAAQC,EAAYC,EAAY,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAAqBN,GAElEb,EAAc7B,EAAS8B,IAAI,CAAC,GAAOC,EAAE9B,aAAa,GAAK8C,GAC7D5B,EAAwBU,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAa5B,aAAa,GAA1B4B,KAAAA,IAAAA,EAAAA,EAA8B7B,CAAQ,CAAC,EAAE,CAACC,aAAa,CACjF,EAAG,CAACe,MAAAA,EAAAA,KAAAA,EAAAA,EAASN,OAAO,CAAEI,EAAS,EAE/B,IAAMqC,gBAAkB,MAAOC,QAENxC,EAeAE,EAEkBuC,EAK9BrC,EACHA,EACAA,EAxBR,IAAMsC,EAAAA,OAAiB1C,CAAAA,EAAAA,EAAW4B,OAAO,GAAlB5B,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoBkB,IAAI,CAAC,GAAOyB,EAAEC,IAAI,GAAKJ,EAAehD,EAAE,EACnF,GAAI,CAACkD,EACH,OAAOG,QAAQC,MAAM,CAAC,oBAGxB,IAAM5C,EAAWwC,EAAexC,QAAQ,CAExC,GAAI,CAACA,EAAU,CACb6C,CAAAA,EAAAA,EAAAA,EAAAA,EAAM,CACJ9D,MAAO,mBACP+D,YAAa,qCACf,GACA,MACF,CAEA,IAAMP,EAAW,MAAMvC,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAUuC,QAAQ,GAAlBvC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoB+C,GAAG,IAE9CzB,QAAQC,GAAG,CAAC,4BAA6BgB,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,CAAU,CAAC,EAAE,GAAbA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAe3C,OAAO,EAE/D,IAAMM,EAAUqC,MAAAA,EAAAA,KAAAA,EAAAA,CAAU,CAAC,EAAE,CAC7B,MAAO,CACLvC,SAAAA,EACAJ,QAASM,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASN,OAAO,GAAhBM,KAAAA,IAAAA,EAAAA,EAAoB,GAC7BrB,KAAMqB,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASrB,IAAI,GAAbqB,KAAAA,IAAAA,EAAAA,EAAiB,GACvB8C,KAAM9C,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAS8C,IAAI,GAAb9C,KAAAA,IAAAA,EAAAA,EAAiB,EACzB,CACF,EAEM+C,EAAclD,CAAAA,EAAAA,EAAAA,MAAAA,IA2BpB,MA1BAc,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,GAAKb,EAoBL,MAjBKkD,CAAAA,EAAAA,EAAAA,EAAAA,EAAsB,QAWjBhD,EARR,GAFAoB,QAAQC,GAAG,CAAC,mCAAoCgB,GAE5CA,IAAAA,EAASY,MAAM,CACjB,OAEF,GAAM,CAACjD,EAAQ,CAAGqC,EAClBtC,EAAW,CACTL,QAASM,MAAAA,EAAAA,KAAAA,EAAAA,EAASN,OAAO,CAEzBf,KAAMqB,MAAAA,EAAAA,KAAAA,EAAAA,EAASrB,IAAI,CACnBmE,KAAM9C,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAS8C,IAAI,GAAb9C,KAAAA,IAAAA,EAAAA,EAAiB,EACzB,EACF,GAAGuB,IAAI,CAAC,IACNwB,EAAYvB,OAAO,CAAG0B,CACxB,GAEO,SACLH,CAAmB,QAAnBA,CAAAA,EAAAA,EAAYvB,OAAO,GAAnBuB,KAAAA,IAAAA,GAAAA,EAAAA,IAAAA,CAAAA,EACF,CACF,EAAG,CAACjD,EAAUC,EAAW,EAGvB,GAAAoD,EAAAvF,IAAA,EAAAuF,EAAAC,QAAA,YACE,GAAAD,EAAArF,GAAA,EAACuF,EAAAA,CAAaA,CAAAA,CACZC,aAAc,UACZ,IAAMC,EAAc,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAW,aAUrC,OARA5D,EAAW4B,OAAO,CAAG+B,EAAYrF,GAAG,CAAC,GAAe,EAClDsE,KAAMiB,EAAS9E,IAAI,CACnBA,KAAM8E,EAAS9E,IAAI,CACnBmB,SAAU2D,CACZ,IAEArC,QAAQC,GAAG,CAAC,qBAAsBzB,EAAW4B,OAAO,EAE7C5B,EAAW4B,OAAO,CAACtD,GAAG,CAAC,GACrB,EACLkB,GAAIsE,EAAOlB,IAAI,CACf7D,KAAM+E,EAAO/E,IAAI,CACnB,EAEJ,EACAgF,UAAWxB,kBAGb,GAAAgB,EAAAvF,IAAA,EAACgB,EAAAA,CAAUA,CAAAA,CAACC,MAAM,sBAChB,GAAAsE,EAAArF,GAAA,EAAC8F,IAAAA,UAAE,uCACH,GAAAT,EAAAvF,IAAA,EAACiG,EAAAA,EAAMA,CAAAA,CACLxE,MAAOa,MAAAA,EAAAA,KAAAA,EAAAA,EAAsB4D,QAAQ,GACrCC,cAAe,IACb,IAAMC,EAAQhF,EAAS8B,IAAI,CACzB,GAAWkD,EAAM/E,aAAa,CAAC6E,QAAQ,KAAO7E,GAEhDkB,EAAwB6D,MAAAA,EAAAA,KAAAA,EAAAA,EAAO/E,aAAa,CAC9C,YAEA,GAAAkE,EAAArF,GAAA,EAACmG,EAAAA,EAAaA,CAAAA,CAACjG,UAAU,qBACvB,GAAAmF,EAAArF,GAAA,EAACoG,EAAAA,EAAWA,CAAAA,CAACC,YAAY,8BAE3B,GAAAhB,EAAArF,GAAA,EAACsG,EAAAA,EAAaA,CAAAA,UACXpF,EAASd,GAAG,CAAC,GACZ,GAAAiF,EAAArF,GAAA,EAACuG,EAAAA,EAAUA,CAAAA,CAAkBhF,MAAO2E,EAAM/E,aAAa,CAAC6E,QAAQ,YAC9D,GAAAX,EAAArF,GAAA,EAACwG,OAAAA,CAAKtG,UAAU,uBAAegG,EAAMrF,IAAI,IAD1BqF,EAAMrF,IAAI,QAMhC0B,GAAkB,GAAA8C,EAAAvF,IAAA,EAACgG,IAAAA,WAAE,OAAKvD,QAG7B,GAAA8C,EAAAvF,IAAA,EAAC2G,EAAAA,CAAQA,CAAAA,CAAC1F,MAAM,mBACd,GAAAsE,EAAArF,GAAA,EAAC0G,EAAAA,CAAUA,CAAAA,CACT3F,MAAM,eACN+D,YAAY,SACZ6B,sBAAqB,GACrBC,UAAW,MAAOC,IAChB,IAAMC,EAAM,MAAM9E,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUuC,QAAQ,CAACQ,GAAG,IACxC,OAAOtD,KAAKC,SAAS,CAACoF,EACxB,IAEF,GAAAzB,EAAArF,GAAA,EAAC0G,EAAAA,CAAUA,CAAAA,CACT3F,MAAM,4BACN+D,YAAY,4BACZ6B,sBAAqB,GACrBC,UAAW,MAAOC,IAEhBpF,KAAKC,SAAS,CAACM,GAGf,IAAM+E,EAAkBC,MADFhF,EACEgF,KAAAA,EAAAA,EAAezC,QAAQ,CACzCuC,EAAM,MAAMC,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAiBhC,GAAG,IACtC,OAAOtD,KAAKC,SAAS,CAACoF,EACxB,IAEF,GAAAzB,EAAArF,GAAA,EAAC0G,EAAAA,CAAUA,CAAAA,CACT3F,MAAM,UACN+D,YAAY,OACZmC,iBAAkB7F,EAAOC,OAAO,CAChCuF,UAAW,MAAOC,QAGsB3E,EAFtC,IAAMgF,EAAUC,CAAAA,EAAAA,EAAAA,CAAAA,EAAYN,GACtB,CAAC3E,EAAQ,CAAG,MAAMkF,CAAAA,EAAAA,EAAAA,EAAAA,IAClBC,EAAW,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAepF,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAASqF,IAAI,GAAbrF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAesF,MAAM,EACrDV,EAAM,MAAMO,EAASI,MAAM,CAACpG,OAAO,CAAC,CACxCqG,KAAMR,EACNtF,QAASW,EACTyC,KAAM,OACR,GACA,OAAOvD,KAAKC,SAAS,CAACoF,EACxB,EACAa,WAAY,CAACd,EAAiBe,KAC5B,IAAMV,EAAUW,CAAAA,EAAAA,EAAAA,CAAAA,EAAYhB,GACtB,CACJiB,UAAAA,CAAS,CACV,CAEGrG,KAAKsG,KAAK,CAACH,GAET,CAAE9D,QAAAA,CAAO,CAAE,CAAGkE,CAAAA,EAAAA,EAAAA,CAAAA,EAClBC,EAAOC,IAAI,CAACC,CAAAA,EAAAA,EAAAA,CAAAA,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,EAAalB,KAClCY,EACA5F,EAAQN,OAAO,EAEjB,OAAO+C,QAAQ0D,OAAO,CAACvE,EACzB,IAEF,GAAAuB,EAAArF,GAAA,EAAC0G,EAAAA,CAAUA,CAAAA,CACT3F,MAAM,cACN+D,YAAY,UACZmC,iBAAkB7F,EAAOI,WAAW,CAACe,GAAkB,IACvDqE,UAAW,MAAOC,QAUsB3E,EATtC,GAAM,CACJP,GAAAA,CAAE,CACFJ,MAAAA,CAAK,CACN,CAGGE,KAAKsG,KAAK,CAAClB,GAET,CAAC3E,EAAQ,CAAG,MAAMkF,CAAAA,EAAAA,EAAAA,EAAAA,IAClBC,EAAW,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAepF,MAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAASqF,IAAI,GAAbrF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAesF,MAAM,EAE3D,OAAO,IAAI7C,QAAQ,CAAC0D,EAASzD,KAC3BhC,EAAOc,OAAO,CAAC4E,EAAE,CAACC,QAAQ,CACvBC,iBAAiB,CAAC7G,EAAIJ,GAEtBC,WAAW,CAACiB,EAAgB,CAAEgF,OAAQJ,EAASI,MAAM,EAAI,IACxDY,EAAQI,EACV,GACCC,KAAK,CAAC,IACL,GAAM,CAAExB,QAAAA,CAAO,CAAE,CAAGyB,GAAK,CAAC,EAC1B/D,EAAOsC,GAAWyB,EACpB,EACJ,EACF,OAIJ,GAAAtD,EAAArF,GAAA,EAAC4I,EAAAA,CAAQA,CAAAA,CAACjJ,MAAOA,MAGvB,gMChRA,IAAMkJ,EAA0C,CAC9CjH,QAAS,KACTkH,UAAW,KACXC,QAAS,IACX,EAEe,SAASxD,cAAiB3F,CAIjB,KAJiB,CACvC4F,aAAAA,CAAY,CACZK,UAAAA,CAAS,CACTmD,aAAAA,CAAY,CACU,CAJiBpJ,EAKjC,CAAEqJ,SAAAA,CAAQ,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IACfC,EAAmBpH,CAAAA,EAAAA,EAAAA,MAAAA,EAAY,MAC/BqH,EAAmBrH,CAAAA,EAAAA,EAAAA,MAAAA,EAAgB,IAEnC,CAACsH,EAASC,EAAW,CAAGhH,CAAAA,EAAAA,EAAAA,QAAAA,EAAyB,EAAE,EAEnD,CAAEiH,YAAAA,CAAW,CAAEtH,WAAAA,CAAU,CAAED,SAAAA,CAAQ,CAAEE,QAAAA,CAAO,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IAEjDqH,EAAgBC,CAAAA,EAAAA,EAAAA,WAAAA,EACpB,MAAO7D,IACL,GAAI,CACF,GAAM,CAAE5D,SAAU0H,CAAS,CAAE,GAAGC,EAAa,CAAG,MAAM9D,EAAUD,GAChE2D,EAAYG,GACZzH,EAAW0H,EACb,CAAE,MAAOC,EAAO,CACdtG,QAAQC,GAAG,CAAC,sBAAuBqG,GAEnC/E,CAAAA,EAAAA,EAAAA,EAAAA,EAAM,CACJ9D,MAAO,OACP+D,YAAaC,IAAI6E,EAAO,UAAW,GACrC,EACF,CACF,EACA,CAAC/D,EAAW5D,EAAYsH,EAAY,EAGhCM,EAAmBJ,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,UACnCL,EAAiB1F,OAAO,CAAG,GAC3B,MAAMsF,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EACNO,EAAY,MACZtH,EAAW,KACb,EAAG,CAAC+G,EAAc/G,EAAYsH,EAAY,EAEpCO,EAAcL,CAAAA,EAAAA,EAAAA,WAAAA,EAAY,KAC9BM,WAAW,KACT,GAAI,KACFZ,CAAwB,QAAxBA,CAAAA,EAAAA,EAAiBzF,OAAO,GAAxByF,KAAAA,IAAAA,GAAAA,EAA0Ba,KAAK,EACjC,CAAE,MAAOJ,EAAO,CAEhB,CACF,EAAG,IACL,EAAG,EAAE,EAECK,EAA0BR,CAAAA,EAAAA,EAAAA,WAAAA,EAC9B,MAAOS,IACL,IAAMb,EAAU,MAAM7D,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,GAAAA,EAEtB,GAAI6D,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASlE,MAAM,IAAK,EAAG,CACzB2E,IACA,MACF,CAEA,GAAM,CAAEK,iBAAAA,CAAgB,CAAE,CAAGD,MAAAA,EAAAA,EAAW,CAAEC,iBAAkB,EAAM,CAC9Dd,CAAAA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASlE,MAAM,IAAK,GAAMkE,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASlE,MAAM,EAAG,GAAKgF,GACnDL,IACA,MAAMN,EAAcH,CAAO,CAAC,EAAE,GAE9BC,EAAWD,EAEf,EACA,CAACS,EAAaN,EAAehE,EAAa,EAsB5C,MAnBA3C,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMuH,EAAUL,WAAW,WACrBX,EAAiB1F,OAAO,GAE5BJ,QAAQC,GAAG,CAAC,uBAAwB0F,EAASoB,WAAW,EACpDpB,EAASoB,WAAW,GACtBjB,EAAiB1F,OAAO,CAAG,GAC3B,MAAMuG,EAAwB,CAC5BE,iBAAkB,EACpB,IAEJ,EAAG,KAEH,MAAO,KACLG,aAAaF,EACf,CAEF,EAAG,CAACnB,EAASoB,WAAW,CAAC,EAGvB,GAAAxK,EAAAG,GAAA,EAACD,EAAAA,EAAIA,CAAAA,UACH,GAAAF,EAAAC,IAAA,EAACK,EAAAA,EAAWA,CAAAA,CAACD,UAAU,0CACrB,GAAAL,EAAAC,IAAA,EAACS,MAAAA,CAAIL,UAAU,oDACb,GAAAL,EAAAC,IAAA,EAACyK,EAAAA,EAAMA,CAAAA,WACL,GAAA1K,EAAAG,GAAA,EAACwK,EAAAA,EAAaA,CAAAA,CAACC,QAAO,YACpB,GAAA5K,EAAAG,GAAA,EAAC0K,EAAAA,CAAMA,CAAAA,CAACC,QAAS,IAAMV,aAA2B,qBAEpD,GAAApK,EAAAC,IAAA,EAAC8K,EAAAA,EAAaA,CAAAA,WACZ,GAAA/K,EAAAG,GAAA,EAAC6K,EAAAA,EAAWA,CAAAA,CAACC,IAAK3B,IAClB,GAAAtJ,EAAAC,IAAA,EAACiL,EAAAA,EAAYA,CAAAA,WACX,GAAAlL,EAAAG,GAAA,EAACgL,EAAAA,EAAWA,CAAAA,UAAC,aACZ,CAAC,CAAC3B,GACDA,EAAQjJ,GAAG,CAAC,QAWLwF,QAVL,GAAA/F,EAAAG,GAAA,EAAC6K,EAAAA,EAAWA,CAAAA,CAACJ,QAAO,YAClB,GAAA5K,EAAAC,IAAA,EAAC4K,EAAAA,CAAMA,CAAAA,CAACC,QAAS,IAAMnB,EAAc5D,GAAS1F,UAAU,kBACrD0F,EAAOqF,IAAI,EACV,GAAApL,EAAAG,GAAA,EAACkL,MAAAA,CACCC,IAAKvF,EAAO/E,IAAI,CAChBuK,IAAKxF,EAAOqF,IAAI,CAChB/K,UAAU,yBAGd,GAAAL,EAAAG,GAAA,EAACwG,OAAAA,CAAKtG,UAAU,uBAAe0F,EAAO/E,IAAI,GAC9B,OAAX+E,CAAAA,EAAAA,EAAOyF,IAAI,GAAXzF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAaxF,GAAG,CAAC,GAChB,GAAAP,EAAAG,GAAA,EAACwG,OAAAA,CAAetG,UAAU,8BACvBoL,GADQA,QAXS1F,EAAOtE,EAAE,IAkBtC,CAAC+H,GACCA,IAAAA,EAAQlE,MAAM,EACb,GAAAtF,EAAAC,IAAA,EAACyL,EAAAA,EAAiBA,CAAAA,WAAC,8BAEjB,GAAA1L,EAAAG,GAAA,EAACY,IAAAA,CAAE4K,OAAO,SAAS/K,KAAM,2CAAmC,2CAQvEuB,GACC,GAAAnC,EAAAG,GAAA,EAAC0K,EAAAA,CAAMA,CAAAA,CAACe,QAAQ,cAAcd,QAASd,WAAkB,YAK5D3H,GACC,GAAArC,EAAAG,GAAA,EAACO,MAAAA,CAAIL,UAAU,0EACZwL,OAAOC,IAAI,CAACzJ,GAAS9B,GAAG,CAAC,QAGVyI,EAFd,MACE,GAAAhJ,EAAAC,IAAA,EAACS,MAAAA,WACC,GAAAV,EAAAC,IAAA,EAAC0G,OAAAA,WAAO,GAAgCoF,MAAA,CAA9B/C,OAAAA,CAAAA,EAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CAAiB,CAACgD,EAAI,GAAtBhD,KAAAA,IAAAA,EAAAA,EAA0BgD,GAAM,QAE1C,GAAAhM,EAAAG,GAAA,EAACwG,OAAAA,CAAKtG,UAAU,iDAAyC,GAAkB0L,MAAA,CAAf1J,MAAAA,EAAAA,KAAAA,EAAAA,CAAS,CAAC2J,EAAI,MAHlEA,EAMd,SAMZ,6RCtLA,IAAMtB,EAASuB,EAAAA,EAAoB,CAE7BtB,EAAgBsB,EAAAA,EAAuB,CAEvCC,EAAeD,EAAAA,EAAsB,CAErCjB,EAAciB,EAAAA,EAAqB,CAEnCE,EAAgBC,EAAAA,UAAgB,CAGpC,CAAArM,EAA0BkL,QAAzB,CAAE5K,UAAAA,CAAS,CAAE,GAAGgM,EAAO,CAAAtM,QACxB,GAAAC,EAAAG,GAAA,EAAC8L,EAAAA,EAAuB,EACtBhB,IAAKA,EACL5K,UAAWiM,CAAAA,EAAAA,EAAAA,EAAAA,EACT,0JACAjM,GAED,GAAGgM,CAAK,EACV,EAEHF,CAAAA,EAAcI,WAAW,CAAGN,EAAAA,EAAuB,CAACM,WAAW,CAE/D,IAAMxB,EAAgBqB,EAAAA,UAAgB,CAGpC,CAAArM,EAAoCkL,QAAnC,CAAE5K,UAAAA,CAAS,CAAEc,SAAAA,CAAQ,CAAE,GAAGkL,EAAO,CAAAtM,QAClC,GAAAC,EAAAC,IAAA,EAACiM,EAAAA,WACC,GAAAlM,EAAAG,GAAA,EAACgM,EAAAA,CAAAA,GACD,GAAAnM,EAAAC,IAAA,EAACgM,EAAAA,EAAuB,EACtBhB,IAAKA,EACL5K,UAAWiM,CAAAA,EAAAA,EAAAA,EAAAA,EACT,8fACAjM,GAED,GAAGgM,CAAK,WAERlL,EACD,GAAAnB,EAAAC,IAAA,EAACgM,EAAAA,EAAqB,EAAC5L,UAAU,0RAC/B,GAAAL,EAAAG,GAAA,EAACqM,EAAAA,CAACA,CAAAA,CAACnM,UAAU,YACb,GAAAL,EAAAG,GAAA,EAACwG,OAAAA,CAAKtG,UAAU,mBAAU,kBAGlB,EAEhB0K,CAAAA,EAAcwB,WAAW,CAAGN,EAAAA,EAAuB,CAACM,WAAW,CAE/D,IAAMrB,aAAe,OAAC,CACpB7K,UAAAA,CAAS,CACT,GAAGgM,EACkC,CAAAtM,QACrC,GAAAC,EAAAG,GAAA,EAACO,MAAAA,CACCL,UAAWiM,CAAAA,EAAAA,EAAAA,EAAAA,EACT,qDACAjM,GAED,GAAGgM,CAAK,EACV,CAEHnB,CAAAA,aAAaqB,WAAW,CAAG,eAgB3B,IAAMpB,EAAciB,EAAAA,UAAgB,CAGlC,CAAArM,EAA0BkL,QAAzB,CAAE5K,UAAAA,CAAS,CAAE,GAAGgM,EAAO,CAAAtM,QACxB,GAAAC,EAAAG,GAAA,EAAC8L,EAAAA,EAAqB,EACpBhB,IAAKA,EACL5K,UAAWiM,CAAAA,EAAAA,EAAAA,EAAAA,EACT,oDACAjM,GAED,GAAGgM,CAAK,EACV,EAEHlB,CAAAA,EAAYoB,WAAW,CAAGN,EAAAA,EAAqB,CAACM,WAAW,CAE3D,IAAMb,EAAoBU,EAAAA,UAAgB,CAGxC,CAAArM,EAA0BkL,QAAzB,CAAE5K,UAAAA,CAAS,CAAE,GAAGgM,EAAO,CAAAtM,QACxB,GAAAC,EAAAG,GAAA,EAAC8L,EAAAA,EAA2B,EAC1BhB,IAAKA,EACL5K,UAAWiM,CAAAA,EAAAA,EAAAA,EAAAA,EAAG,gCAAiCjM,GAC9C,GAAGgM,CAAK,EACV,EAEHX,CAAAA,EAAkBa,WAAW,CAAGN,EAAAA,EAA2B,CAACM,WAAW","sources":["webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/InfoLayout.tsx","webpack://_N_E/./components/chains/polkadot/dapps.config.ts","webpack://_N_E/./components/chains/polkadot/params.ts","webpack://_N_E/./components/chains/polkadot/example.tsx","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/./components/ui/dialog.tsx","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bn.js/lib|buffer","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","import { Card, CardContent, CardHeader } from './ui/card';\n\nexport type InfoLayoutProps = {\n  title?: string;\n  children?: React.ReactNode;\n};\n\nexport default function InfoLayout({ title, children }: InfoLayoutProps) {\n  return (\n    <Card>\n      {title && <CardHeader className=\"font-medium\">{title}</CardHeader>}\n      <CardContent className=\"flex flex-col flex-wrap gap-3 break-all\">{children}</CardContent>\n    </Card>\n  );\n}\n","export const networks = [\n  {\n    name: 'Polkadot',\n    addressPrefix: 0,\n    url: 'wss://rpc.polkadot.io',\n  },\n  {\n    name: 'Kusama',\n    addressPrefix: 2,\n    url: 'wss://kusama-rpc.polkadot.io',\n    // url: 'wss://1rpc.io/ksm',\n  },\n  // {\n  //   name: 'Westend',\n  //   addressPrefix: 42,\n  //   url: 'wss://westend-rpc.polkadot.io',\n  // },\n  {\n    name: 'Astar',\n    addressPrefix: 5,\n    url: 'wss://rpc.astar.network',\n    // url: 'wss://1rpc.io/astr',\n  },\n  {\n    name: 'Manta',\n    addressPrefix: 77,\n    url: 'wss://ws.manta.systems',\n  },\n  {\n    name: 'JoyStream',\n    addressPrefix: 126,\n    url: 'wss://rpc.joystream.org',\n  },\n];\n\nexport const dapps = [\n  {\n    name: 'Polkadot.js',\n    url: 'https://polkadot.js.org/apps',\n  },\n  {\n    name: 'Bifrost',\n    url: 'https://bifrost.app/',\n  },\n  {\n    name: 'Polkaswap',\n    url: 'https://polkaswap.io/',\n  },\n];\n","export default {\n  signRaw: [\n    {\n      id: 'signRaw',\n      name: 'signRaw',\n      value: 'message to sign',\n    },\n  ],\n  signAndSend: (address: string) => [\n    {\n      id: 'signAndSend',\n      name: 'signAndSend',\n      value: JSON.stringify({\n        to: address,\n        value: '1000',\n      }),\n    },\n  ],\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { dapps, networks } from './dapps.config';\nimport ConnectButton from '../../../components/connect/ConnectButton';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { IProviderApi, IProviderInfo } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../../components/connect/WalletContext';\nimport type { IKnownWallet } from '../../../components/connect/types';\nimport DappList from '../../../components/DAppList';\nimport {\n  web3Accounts,\n  web3AccountsSubscribe,\n  web3Enable,\n  web3FromSource,\n} from '@polkadot/extension-dapp';\nimport { stringToU8a, u8aToHex, u8aToU8a, u8aWrapBytes } from '@polkadot/util';\nimport {\n  signatureVerify,\n  base58Decode,\n  checkAddressChecksum,\n  encodeAddress,\n} from '@polkadot/util-crypto';\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { hexToU8a, stringToHex } from '@polkadot/util';\nimport params from './params';\nimport { toast } from '../../ui/use-toast';\nimport InfoLayout from '../../InfoLayout';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../ui/select';\n\nexport default function Example() {\n  const walletsRef = useRef<IProviderInfo[]>([]);\n\n  const { provider, setAccount, account } = useWallet<IProviderApi>();\n\n  const [networkAddressPrefix, setNetworkAddressPrefix] = useState<number>();\n  const [dynamicAddress, setDynamicAddress] = useState<string>('');\n\n  const currentAddress = useMemo(() => {\n    return account?.address;\n  }, [account]);\n  const currentNetworkAddressPrefix = useMemo(() => {\n    return networkAddressPrefix;\n  }, [networkAddressPrefix]);\n\n  const apiRef = useRef<ApiPromise>();\n\n  useEffect(() => {\n    if (currentNetworkAddressPrefix !== undefined) {\n      const networkInfo = networks.find((n) => n.addressPrefix === currentNetworkAddressPrefix);\n      if (networkInfo) {\n        const wsProvider = new WsProvider(networkInfo.url);\n        const newApiProvider = new ApiPromise({ provider: wsProvider });\n\n        console.log(\n          'polkadot newApiProvider [useEffect]',\n          currentNetworkAddressPrefix,\n          networkInfo.url,\n        );\n\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        newApiProvider.isReady.then(() => {\n          apiRef.current = newApiProvider;\n          return () => {\n            void newApiProvider.disconnect();\n            void wsProvider.disconnect();\n          }; // 清理函数\n        });\n      }\n    } else {\n      console.log('polkadot newApiProvider [useEffect] undefined');\n      apiRef.current = undefined;\n    }\n  }, [currentNetworkAddressPrefix]);\n\n  useEffect(() => {\n    console.log('polkadot [useEffect]', currentAddress, currentNetworkAddressPrefix);\n\n    if (currentAddress && currentNetworkAddressPrefix != null) {\n      const decoded = base58Decode(currentAddress);\n      const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded);\n\n      const networkInfo = networks.find((n) => n.addressPrefix === currentNetworkAddressPrefix);\n\n      if (!networkInfo) {\n        return;\n      }\n      setDynamicAddress(\n        encodeAddress(decoded.subarray(ss58Length, endPos), networkInfo.addressPrefix),\n      );\n    } else {\n      setDynamicAddress(undefined);\n    }\n  }, [currentAddress, currentNetworkAddressPrefix]);\n\n  useEffect(() => {\n    if (!account?.address) {\n      return;\n    }\n    const decoded = base58Decode(account?.address);\n    const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded);\n\n    const networkInfo = networks.find((n) => n.addressPrefix === ss58Decoded);\n    setNetworkAddressPrefix(networkInfo?.addressPrefix ?? networks[0].addressPrefix);\n  }, [account?.address, provider]);\n\n  const onConnectWallet = async (selectedWallet: IKnownWallet) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const providerDetail = walletsRef.current?.find((w) => w.uuid === selectedWallet.id);\n    if (!providerDetail) {\n      return Promise.reject('Wallet not found');\n    }\n\n    const provider = providerDetail.provider;\n\n    if (!provider) {\n      toast({\n        title: 'Wallet not found',\n        description: 'Please install the wallet extension',\n      });\n      return;\n    }\n\n    const accounts = await provider?.accounts?.get();\n\n    console.log('polkadot [connect wallet]', accounts?.[0]?.address);\n\n    const account = accounts?.[0];\n    return {\n      provider,\n      address: account?.address ?? '',\n      name: account?.name ?? '',\n      type: account?.type ?? '',\n    };\n  };\n\n  const listenerRef = useRef<() => void>();\n  useEffect(() => {\n    if (!provider) {\n      return;\n    }\n    void web3AccountsSubscribe((accounts) => {\n      console.log('polkadot [web3AccountsSubscribe]', accounts);\n\n      if (accounts.length === 0) {\n        return;\n      }\n      const [account] = accounts;\n      setAccount({\n        address: account?.address,\n        // @ts-expect-error\n        name: account?.name,\n        type: account?.type ?? '',\n      });\n    }).then((listener) => {\n      listenerRef.current = listener;\n    });\n\n    return () => {\n      listenerRef.current?.();\n    };\n  }, [provider, setAccount]);\n\n  return (\n    <>\n      <ConnectButton<IProviderApi>\n        fetchWallets={async () => {\n          const allInjected = await web3Enable('Test Dapp');\n\n          walletsRef.current = allInjected.map((injected) => ({\n            uuid: injected.name,\n            name: injected.name,\n            provider: injected,\n          }));\n\n          console.log('walletsRef.current', walletsRef.current);\n\n          return walletsRef.current.map((wallet) => {\n            return {\n              id: wallet.uuid,\n              name: wallet.name,\n            };\n          });\n        }}\n        onConnect={onConnectWallet}\n      />\n\n      <InfoLayout title=\"该内容是动态计算的\">\n        <p>只链接 Dot 账户即可，在这个切换不同网络即可发送不同网络的资产。</p>\n        <Select\n          value={networkAddressPrefix?.toString()}\n          onValueChange={(addressPrefix) => {\n            const chain = networks.find(\n              (chain) => chain.addressPrefix.toString() === addressPrefix,\n            );\n            setNetworkAddressPrefix(chain?.addressPrefix);\n          }}\n        >\n          <SelectTrigger className=\"w-[260px]\">\n            <SelectValue placeholder=\"Change Polkadot Network\" />\n          </SelectTrigger>\n          <SelectContent>\n            {networks.map((chain) => (\n              <SelectItem key={chain.name} value={chain.addressPrefix.toString()}>\n                <span className=\"font-medium\">{chain.name}</span>\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n        {dynamicAddress && <p>地址: {dynamicAddress}</p>}\n      </InfoLayout>\n\n      <ApiGroup title=\"Basics\">\n        <ApiPayload\n          title=\"accounts.get\"\n          description=\"获取账户权限\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.accounts.get();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"accounts.get (Manta dApp)\"\n          description=\"Test Manta Connect (dApp)\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            // serialization provider\n            JSON.stringify(provider);\n            // get accounts\n            const localProvider = provider;\n            const accountProvider = localProvider?.accounts;\n            const res = await accountProvider?.get();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"signRaw\"\n          description=\"签名消息\"\n          presupposeParams={params.signRaw}\n          onExecute={async (request: string) => {\n            const message = stringToHex(request);\n            const [account] = await web3Accounts();\n            const injector = await web3FromSource(account?.meta?.source);\n            const res = await injector.signer.signRaw({\n              data: message,\n              address: dynamicAddress,\n              type: 'bytes',\n            });\n            return JSON.stringify(res);\n          }}\n          onValidate={(request: string, result: string) => {\n            const message = stringToU8a(request);\n            const {\n              signature,\n            }: {\n              signature: string;\n            } = JSON.parse(result);\n\n            const { isValid } = signatureVerify(\n              Buffer.from(u8aToU8a(u8aWrapBytes(message))),\n              signature,\n              account.address,\n            );\n            return Promise.resolve(isValid);\n          }}\n        />\n        <ApiPayload\n          title=\"signPayload\"\n          description=\"签名并发送交易\"\n          presupposeParams={params.signAndSend(dynamicAddress || '')}\n          onExecute={async (request: string) => {\n            const {\n              to,\n              value,\n            }: {\n              to: string;\n              value: string;\n            } = JSON.parse(request);\n\n            const [account] = await web3Accounts();\n            const injector = await web3FromSource(account?.meta?.source);\n\n            return new Promise((resolve, reject) => {\n              apiRef.current.tx.balances\n                .transferKeepAlive(to, value)\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                .signAndSend(currentAddress, { signer: injector.signer }, (status) => {\n                  resolve(status);\n                })\n                .catch((e) => {\n                  const { message } = e || {};\n                  reject(message || e);\n                });\n            });\n          }}\n        />\n      </ApiGroup>\n\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[35%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","/* (ignored) */"],"names":["__webpack_exports__","Z","dapps","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Card","jsx","CardTitle","className","CardContent","map","dapp","index","div","Link","href","url","legacyBehavior","a","name","InfoLayout","title","children","CardHeader","networks","addressPrefix","params","signRaw","id","value","signAndSend","JSON","stringify","to","address","Example","walletsRef","useRef","provider","setAccount","account","useWallet","networkAddressPrefix","setNetworkAddressPrefix","useState","dynamicAddress","setDynamicAddress","currentAddress","useMemo","currentNetworkAddressPrefix","apiRef","useEffect","undefined","networkInfo","find","n","wsProvider","WsProvider","newApiProvider","ApiPromise","console","log","isReady","then","current","disconnect","decoded","base58Decode","isValid","endPos","ss58Length","ss58Decoded","checkAddressChecksum","encodeAddress","subarray","onConnectWallet","selectedWallet","accounts","providerDetail","w","uuid","Promise","reject","toast","description","get","type","listenerRef","web3AccountsSubscribe","length","listener","jsx_runtime","Fragment","ConnectButton","fetchWallets","allInjected","web3Enable","injected","wallet","onConnect","p","Select","toString","onValueChange","chain","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","span","ApiGroup","ApiPayload","disableRequestContent","onExecute","request","res","accountProvider","localProvider","presupposeParams","message","stringToHex","web3Accounts","injector","web3FromSource","meta","source","signer","data","onValidate","result","stringToU8a","signature","parse","signatureVerify","Buffer","from","u8aToU8a","u8aWrapBytes","resolve","tx","balances","transferKeepAlive","status","catch","e","DappList","accountInfoKeys","publicKey","chainId","onDisconnect","settings","useSettings","connectDialogRef","autoConnectedRef","wallets","setWallets","setProvider","connectWallet","useCallback","_provider","accountInfo","error","disconnectWallet","closeDialog","setTimeout","click","connectWalletWithDialog","options","directConnection","timeout","autoConnect","clearTimeout","Dialog","DialogTrigger","asChild","Button","onClick","DialogContent","DialogClose","ref","DialogHeader","DialogTitle","logo","img","alt","src","tags","tag","DialogDescription","target","variant","Object","keys","concat","key","DialogPrimitive","DialogPortal","DialogOverlay","React","props","cn","displayName","X"],"sourceRoot":""}