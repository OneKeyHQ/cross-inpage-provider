{"version":3,"file":"static/chunks/5274.05c42ae38151a524.js","mappings":"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","sources":["webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/InfoLayout.tsx","webpack://_N_E/./components/chains/alephium/dapps.config.ts","webpack://_N_E/./components/chains/alephium/params.ts","webpack://_N_E/./components/ui/radio-group.tsx","webpack://_N_E/./components/chains/alephium/example.tsx","webpack://_N_E/./components/ui/label.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","import { Card, CardContent, CardHeader } from './ui/card';\n\nexport type InfoLayoutProps = {\n  title?: string;\n  children?: React.ReactNode;\n};\n\nexport default function InfoLayout({ title, children }: InfoLayoutProps) {\n  return (\n    <Card>\n      {title && <CardHeader className=\"font-medium\">{title}</CardHeader>}\n      <CardContent className=\"flex flex-col flex-wrap gap-3 break-all\">{children}</CardContent>\n    </Card>\n  );\n}\n","export const dapps = [\n  {\n    name: 'Magic Eden',\n    url: 'https://magiceden.io/',\n  },\n];\n","import { ONE_ALPH, DUST_AMOUNT } from '@alephium/web3';\n\nexport default {\n  signAndSubmitTransferTx: (from: string, to: string) => [\n    {\n      id: 'signAndSubmitTransferTx-native',\n      name: 'Native',\n      value: JSON.stringify({\n        signerAddress: from,\n        destinations: [\n          {\n            address: to,\n            amount: ONE_ALPH.toString(),\n          },\n        ],\n      }),\n    },\n    {\n      id: 'signAndSubmitTransferTx-token-722954d9067c5a5ad532746a024f2a9d7a18ed9b90e27d0a3a504962160b5600',\n      name: 'Token-USDC-MAIN',\n      value: JSON.stringify({\n        signerAddress: from,\n        destinations: [\n          {\n            address: to,\n            amount: DUST_AMOUNT.toString(),\n            tokens: [\n              {\n                id: '722954d9067c5a5ad532746a024f2a9d7a18ed9b90e27d0a3a504962160b5600',\n                amount: '10',\n              },\n            ],\n          },\n        ],\n      }),\n    },\n    {\n      id: 'signAndSubmitTransferTx-token-556d9582463fe44fbd108aedc9f409f69086dc78d994b88ea6c9e65f8bf98e00',\n      name: 'Token-USDT-MAIN',\n      value: JSON.stringify({\n        signerAddress: from,\n        destinations: [\n          {\n            address: to,\n            amount: DUST_AMOUNT.toString(),\n            tokens: [\n              {\n                id: '556d9582463fe44fbd108aedc9f409f69086dc78d994b88ea6c9e65f8bf98e00',\n                amount: '10',\n              },\n            ],\n          },\n        ],\n      }),\n    },\n    {\n      id: 'signAndSubmitTransferTx-Multiple-Native-and-Token-USDT-MAIN',\n      name: 'Multiple Native andToken-USDT-MAIN',\n      value: JSON.stringify({\n        signerAddress: from,\n        destinations: [\n          {\n            address: to,\n            amount: DUST_AMOUNT.toString(),\n            tokens: [\n              {\n                id: '556d9582463fe44fbd108aedc9f409f69086dc78d994b88ea6c9e65f8bf98e00',\n                amount: '10',\n              },\n            ],\n          },\n          {\n            address: to,\n            amount: ONE_ALPH.toString(),\n          },\n        ],\n      }),\n    },\n  ],\n  signAndSubmitDeployContractTx: (from: string) => {\n    return [\n      {\n        id: 'signAndSubmitDeployContractTx-test',\n        name: 'Deploy test contract',\n        description: 'Deploy test contract 最少需要 0.1 ALPH',\n        value: JSON.stringify({\n          signerAddress: from,\n          bytecode: '000110010001010105d3eb23039a16000e2c020000',\n        }),\n      },\n    ];\n  },\n  signAndSubmitExecuteScriptTx: (from: string) => {\n    return [\n      {\n        id: 'signAndSubmitExecuteScriptTx-call-test-contract',\n        name: 'call test contract',\n        value: JSON.stringify({\n          signerAddress: from,\n          bytecode:\n            '0101030001000d13020d0d144020c3fb9f552e7ab1138023ef0e313cf43483fc7fa35f2bbadc3f997ab17e52a10001001700160013020e2c2f0c7b',\n        }),\n      },\n    ];\n  },\n  signAndSubmitUnsignedTx: (from: string) => {\n    return [\n      {\n        id: 'signAndSubmitUnsignedTx-native',\n        name: 'Native with body',\n        value: JSON.stringify({\n          signerAddress: from,\n          unsignedTx: '010203',\n        }),\n      },\n    ];\n  },\n  signUnsignedTx: (from: string) => {\n    return [\n      {\n        id: 'signUnsignedTx-native',\n        name: 'Native with body',\n        value: JSON.stringify({\n          signerAddress: from,\n          unsignedTx: '010203',\n        }),\n      },\n    ];\n  },\n  signMessage: (from: string) => {\n    return [\n      {\n        id: 'signMessage-default-alephium',\n        name: 'Default with Alephium',\n        value: JSON.stringify({\n          signerAddress: from,\n          signerKeyType: 'default',\n          message: '010203',\n          messageHasher: 'alephium',\n        }),\n      },\n      {\n        id: 'signMessage-default-sha256',\n        name: 'Default with Sha256（硬件不支持）',\n        value: JSON.stringify({\n          signerAddress: from,\n          signerKeyType: 'default',\n          message: '010203',\n          messageHasher: 'sha256',\n        }),\n      },\n      {\n        id: 'signMessage-default-blake2b',\n        name: 'Default with Blake2b（硬件不支持）',\n        value: JSON.stringify({\n          signerAddress: from,\n          signerKeyType: 'default',\n          message: '010203',\n          messageHasher: 'blake2b',\n        }),\n      },\n      {\n        id: 'signMessage-default-identity',\n        name: 'Default with Identity（硬件不支持）',\n        value: JSON.stringify({\n          signerAddress: from,\n          signerKeyType: 'default',\n          message: '010203',\n          messageHasher: 'identity',\n        }),\n      },\n      {\n        id: 'signMessage-bip340-schnorr-alephium',\n        name: 'Bip340 Schnorr with Alephium（不支持）',\n        value: JSON.stringify({\n          signerAddress: from,\n          signerKeyType: 'bip340-schnorr',\n          message: '010203',\n          messageHasher: 'alephium',\n        }),\n      },\n      {\n        id: 'signMessage-bip340-schnorr-sha256',\n        name: 'Bip340 Schnorr with Sha256（不支持）',\n        value: JSON.stringify({\n          signerAddress: from,\n          signerKeyType: 'bip340-schnorr',\n          message: '010203',\n          messageHasher: 'sha256',\n        }),\n      },\n      {\n        id: 'signMessage-bip340-schnorr-blake2b',\n        name: 'Bip340 Schnorr with Blake2b（不支持）',\n        value: JSON.stringify({\n          signerAddress: from,\n          signerKeyType: 'bip340-schnorr',\n          message: '010203',\n          messageHasher: 'blake2b',\n        }),\n      },\n      {\n        id: 'signMessage-bip340-schnorr-identity',\n        name: 'Bip340 Schnorr with Identity（不支持）',\n        value: JSON.stringify({\n          signerAddress: from,\n          signerKeyType: 'bip340-schnorr',\n          message: '010203',\n          messageHasher: 'identity',\n        }),\n      },\n    ];\n  },\n};\n","import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from '../../lib/utils';\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument */\n\nimport { dapps } from './dapps.config';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport DappList from '../../DAppList';\nimport InfoLayout from '../../InfoLayout';\nimport params from './params';\nimport {\n  AlephiumWalletProvider,\n  AlephiumConnectButton,\n  useWallet,\n  useBalance,\n} from '@alephium/web3-react';\nimport { verifySignedMessage } from '@alephium/web3';\n\nimport { NodeProvider, TransactionBuilder, DUST_AMOUNT } from \"@alephium/web3\"\nimport * as fetchRetry from 'fetch-retry'\nimport { useState } from 'react';\nimport { RadioGroup, RadioGroupItem } from '../../ui/radio-group';\nimport { Label } from '../../ui/label';\nimport { useToast } from '../../ui/use-toast';\nimport { Input } from '../../ui/input';\n\n// 防止限频\nconst retryFetch = fetchRetry.default(fetch, {\n  retries: 10,\n  retryDelay: 1000\n})\n\nconst nodeUrl = \"https://node.mainnet.alephium.org\"\nconst nodeProvider = new NodeProvider(nodeUrl, undefined, retryFetch)\n\nexport function Example() {\n  const wallet = useWallet();\n  const balance = useBalance();\n  const { toast } = useToast();\n\n  // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n  const getTokenTransferFrom = (chainId: string | undefined, approve: boolean = false) => {\n    const tokens: {\n      name: string;\n      address: string;\n    }[] = [];\n\n    tokens.push({\n      name: 'USDC',\n      address: '722954d9067c5a5ad532746a024f2a9d7a18ed9b90e27d0a3a504962160b5600',\n    });\n    tokens.push({\n      name: 'USDT',\n      address: '556d9582463fe44fbd108aedc9f409f69086dc78d994b88ea6c9e65f8bf98e00',\n    });\n\n    return (\n      <>\n        <Input\n          label=\"收款地址\"\n          type=\"text\"\n          name=\"toAddress\"\n          defaultValue={wallet?.account?.address ?? ''}\n        />\n        <Input label=\"金额\" type=\"number\" name=\"amount\" defaultValue={DUST_AMOUNT.toString()} />\n\n        <select name=\"tokenAddress\" className=\"select\">\n          <option selected value={undefined}>选择 Token</option>\n          {tokens.map((token) => (\n            <option value={token.address}>{token.name}</option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const tokenTransferFromToTx = async (fromData: Record<string, any>) => {\n    const from = wallet?.account?.address ?? '';\n    const senderPublicKey = wallet?.account?.publicKey ?? '';\n    const to = fromData.toAddress ?? from;\n    const amount = fromData.amount;\n    const tokenAddress = fromData.tokenAddress;\n\n    if (!amount) {\n      return 'Amount is required';\n    }\n\n    const builder = TransactionBuilder.from(nodeUrl)\n\n    if (tokenAddress && tokenAddress !== '选择 Token') {\n\n      const buildTxResultScript = await builder.buildTransferTx(\n        {\n          signerAddress: from,\n          destinations: [\n            { address: to, attoAlphAmount: amount },\n          ]\n        },\n        senderPublicKey\n      )\n\n      return JSON.stringify({\n        unsignedTx: buildTxResultScript.unsignedTx,\n        signerAddress: from,\n      })\n    }\n\n    const buildTxResultScript = await builder.buildTransferTx(\n      {\n        signerAddress: from,\n        destinations: [\n          { address: to, attoAlphAmount: DUST_AMOUNT, tokens: [{ id: tokenAddress, amount: amount }] },\n        ]\n      },\n      senderPublicKey\n    )\n\n    return JSON.stringify({\n      unsignedTx: buildTxResultScript.unsignedTx,\n      signerAddress: from,\n    })\n  }\n\n  return (\n    <>\n      <AlephiumConnectButton />\n\n      <InfoLayout title=\"Base Info\">\n        {wallet && <p>address: {wallet?.account?.address}</p>}\n      </InfoLayout>\n\n      <ApiGroup title=\"Send Transaction\">\n        <ApiPayload\n          title=\"signAndSubmitTransferTx\"\n          description=\"转账普通 Native\"\n          allowCallWithoutProvider={!!wallet}\n          presupposeParams={params.signAndSubmitTransferTx(\n            wallet?.account?.address ?? '',\n            wallet?.account?.address ?? '',\n          )}\n          onExecute={async (request: string) => {\n            const params = JSON.parse(request);\n            return wallet.signer.signAndSubmitTransferTx({\n              ...params,\n              destinations: params.destinations.map((destination: any) => ({\n                address: destination?.address,\n                attoAlphAmount: destination?.amount?.toString(),\n                tokens: destination?.tokens?.map((token: any) => ({\n                  id: token?.id,\n                  amount: token?.amount?.toString(),\n                })),\n                lockTime: destination?.lockTime,\n                message: destination?.message,\n              })),\n              signerAddress: params.signerAddress,\n            });\n          }}\n        />\n        <ApiPayload\n          title=\"signAndSubmitDeployContractTx\"\n          description=\"\"\n          allowCallWithoutProvider={!!wallet}\n          presupposeParams={params.signAndSubmitDeployContractTx(wallet?.account?.address ?? '')}\n          onExecute={async (request: string) => {\n            console.log('xxx=====>>>>>>> 1');\n            const xxx = await wallet.signer.signAndSubmitDeployContractTx(JSON.parse(request));\n            console.log('xxx=====>>>>>>> 2', xxx);\n\n            return xxx;\n          }}\n        />\n        <ApiPayload\n          title=\"signAndSubmitExecuteScriptTx\"\n          description=\"\"\n          allowCallWithoutProvider={!!wallet}\n          presupposeParams={params.signAndSubmitExecuteScriptTx(wallet?.account?.address ?? '')}\n          onExecute={async (request: string) => {\n            return wallet.signer.signAndSubmitExecuteScriptTx(JSON.parse(request));\n          }}\n        />\n        <ApiPayload\n          title=\"signAndSubmitUnsignedTx\"\n          description=\"\"\n          allowCallWithoutProvider={!!wallet}\n          presupposeParams={params.signAndSubmitUnsignedTx(wallet?.account?.address ?? '')}\n          generateRequestFrom={() => getTokenTransferFrom(wallet?.account?.address ?? '')}\n          onGenerateRequest={tokenTransferFromToTx}\n          onExecute={async (request: string) => {\n            return wallet.signer.signAndSubmitUnsignedTx(JSON.parse(request));\n          }}\n        />\n        <ApiPayload\n          title=\"signUnsignedTx\"\n          description=\"\"\n          allowCallWithoutProvider={!!wallet}\n          presupposeParams={params.signUnsignedTx(wallet?.account?.address ?? '')}\n          generateRequestFrom={() => getTokenTransferFrom(wallet?.account?.address ?? '')}\n          onGenerateRequest={tokenTransferFromToTx}\n          onExecute={async (request: string) => {\n            return wallet.signer.signUnsignedTx(JSON.parse(request));\n          }}\n          onValidate={async (request: string, response: string) => {\n            const { unsignedTx, signature } = JSON.parse(response);\n            const txId = await nodeProvider.transactions.postTransactionsSubmit({\n              unsignedTx,\n              signature,\n            });\n            if (!txId.txId) {\n              toast({\n                title: '交易提交失败',\n                description: '请排出网络问题,',\n                variant: 'destructive',\n              });\n            }\n            return txId.txId;\n          }}\n        />\n        <ApiPayload\n          title=\"signMessage\"\n          description=\"\"\n          allowCallWithoutProvider={!!wallet}\n          presupposeParams={params.signMessage(wallet?.account?.address ?? '')}\n          onExecute={async (request: string) => {\n            return wallet.signer.signMessage(JSON.parse(request));\n          }}\n          onValidate={async (request: string, response: string) => {\n            const params = JSON.parse(request);\n            const signature = JSON.parse(response).signature;\n\n            const signed = verifySignedMessage(\n              params.message,\n              params.messageHasher,\n              wallet.account.publicKey,\n              signature,\n              params.signerKeyType,\n            )\n\n            if (!signed) {\n              toast({\n                title: '签名验证失败',\n                variant: 'destructive',\n              });\n            }\n\n            return Promise.resolve(signed.toString());\n          }}\n        />\n      </ApiGroup>\n\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n\nconst groupOptions = [\n  { label: '不指定', value: -1 },\n  { label: 'Group 0', value: 0 },\n  { label: 'Group 1', value: 1 },\n  { label: 'Group 2', value: 2 },\n  { label: 'Group 3', value: 3 },\n];\n\nexport default function App() {\n  const [group, setGroup] = useState(0);\n\n  return (\n    <AlephiumWalletProvider network=\"mainnet\" theme=\"retro\" addressGroup={group === -1 ? undefined : group}>\n      <InfoLayout title=\"连接指定 Group 账户\">\n        <RadioGroup className='flex flex-row space-x-4' aria-labelledby=\"Select one item\" defaultValue={\"0\"} name=\"form\" onValueChange={(value) => {\n          const valueInt = parseInt(value);\n          if (valueInt === -1) {\n            setGroup(-1);\n          } else {\n            setGroup(valueInt);\n          }\n        }}>\n          {groupOptions.map((option) => (\n            <div className=\"items-center space-x-2\">\n              <RadioGroupItem value={option.value.toString()} id={option.value.toString()} />\n              <Label htmlFor={option.value.toString()}>{option.label}</Label>\n            </div>\n          ))}\n        </RadioGroup>\n      </InfoLayout>\n      <Example />\n    </AlephiumWalletProvider>\n  );\n}\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":["__webpack_exports__","Z","dapps","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Card","jsx","CardTitle","className","CardContent","map","dapp","index","div","Link","href","url","legacyBehavior","a","name","InfoLayout","title","children","CardHeader","RadioGroup","React","ref","props","jsx_runtime","RadioGroupPrimitive","cn","displayName","RadioGroupItem","Circle","retryFetch","fetchRetry","fetch","retries","retryDelay","nodeUrl","nodeProvider","NodeProvider","undefined","Example","wallet","from","to","useWallet","useBalance","toast","useToast","getTokenTransferFrom","chainId","approve","tokens","push","address","Fragment","Input","label","type","defaultValue","account","DUST_AMOUNT","toString","select","option","selected","value","token","tokenTransferFromToTx","fromData","senderPublicKey","publicKey","toAddress","amount","tokenAddress","builder","TransactionBuilder","buildTxResultScript","buildTransferTx","signerAddress","destinations","attoAlphAmount","JSON","stringify","unsignedTx","id","AlephiumConnectButton","p","ApiGroup","ApiPayload","description","allowCallWithoutProvider","presupposeParams","ONE_ALPH","onExecute","request","params","parse","signer","signAndSubmitTransferTx","destination","lockTime","message","bytecode","console","log","xxx","signAndSubmitDeployContractTx","signAndSubmitExecuteScriptTx","generateRequestFrom","onGenerateRequest","signAndSubmitUnsignedTx","signUnsignedTx","onValidate","response","signature","txId","transactions","postTransactionsSubmit","variant","signerKeyType","messageHasher","signMessage","signed","verifySignedMessage","Promise","resolve","DappList","groupOptions","App","group","setGroup","useState","AlephiumWalletProvider","network","theme","addressGroup","aria-labelledby","onValueChange","valueInt","parseInt","Label","htmlFor","labelVariants","cva","LabelPrimitive"],"sourceRoot":""}