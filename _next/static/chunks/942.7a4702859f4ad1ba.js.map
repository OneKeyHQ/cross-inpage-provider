{"version":3,"file":"static/chunks/942.7a4702859f4ad1ba.js","mappings":"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,sBACV,OAAU,EAAE,EAEhB,EACD,CACD,mBAAsB,CACpB,CACE,GAAM,eACN,KAAQ,eACR,YAAe,OACf,MAASD,KAAKC,SAAS,CAAC,CACtB,aAAgB,CAAC,CACnB,EACF,EACA,CACE,GAAM,+BACN,KAAQ,2BACR,YAAe,OACf,MAASD,KAAKC,SAAS,CAAC,CACtB,aAAgB,CAAC,EACjB,YAAe,CAAC,CAClB,EACF,EACD,CACD8J,kBAAmB,CACjB,CACE,GAAM,oBACN,KAAQ,oBACR,YAAe,eACf,MAAS/J,KAAKC,SAAS,CAAC,CACtB,aAAgB,CAAC,CACnB,EACF,EACD,CACD+J,iBAAkB,CAChB,CACE,GAAM,2BACN,KAAQ,yBACR,YAAe,mBACf,MAAShK,KAAKC,SAAS,CAAC,CACtB,QAAW,WACX,UAAa,kBACb,QAAW,CAAC,0BAA2B,0BAA0B,CACjE,SAAY,CAAC,yCAAyC,CACtD,eAAkB,CAChB,KAAQ,OACR,OAAU,OACV,SAAY,EACd,EACA,kBAAqB,CAAC,gCAAgC,EAE1D,EACA,CACE,GAAM,0BACN,KAAQ,mBACR,YAAe,kBACf,MAASD,KAAKC,SAAS,CAAC,CACtB,QAAW,OACX,UAAa,SACb,QAAW,CAAC,8BAA8B,CAC1C,SAAY,CACV,kDACA,kDACD,CACD,eAAkB,CAChB,KAAQ,OACR,OAAU,OACV,SAAY,EACd,EACA,kBAAqB,CAAC,mCAAmC,EAE7D,EACD,CACDgK,oBAAqB,CACnB,CACEvK,KAAM,eACNS,QAAS,UACX,EACA,CACET,KAAM,SACNS,QAAS,MACX,EACA,CACET,KAAM,eACNS,QAAS,OACX,EACA,CACET,KAAM,WACNS,QAAS,KACX,EACA,CACET,KAAM,WACNS,QAAS,KACX,EAKA,CACET,KAAM,iBACNS,QAAS,OACX,EACA,CACET,KAAM,YACNS,QAAS,MACX,EACA,CACET,KAAM,SACNS,QAAS,YACX,EACA,CACET,KAAM,UACNS,QAAS,MACX,EACA,CACET,KAAM,gBACNS,QAAS,OACX,EACA,CACET,KAAM,SACNS,QAAS,MACX,EACA,CACET,KAAM,SACNS,QAAS,MACX,EACA,CACET,KAAM,OACNS,QAAS,OACX,EACA,CACET,KAAM,SACNS,QAAS,OACX,EACA,CACET,KAAM,WACNS,QAAS,QACX,EACA,CACET,KAAM,OACNS,QAAS,QACX,EACA,CACET,KAAM,YACNS,QAAS,QACX,EAKA,CACET,KAAM,kBACNS,QAAS,MACX,EACA,CACET,KAAM,mBACNS,QAAS,MACX,EAKA,CACET,KAAM,wBACNS,QAAS,SACX,EACA,CACET,KAAM,QACNS,QAAS,QACX,EACA,CACET,KAAM,OACNS,QAAS,QACX,EACA,CACET,KAAM,SACNS,QAAS,QACX,EACA,CACET,KAAM,QACNS,QAAS,QACX,EAKA,CACET,KAAM,QACNS,QAAS,MACX,EACA,CACET,KAAM,YACNS,QAAS,SACX,EACD,CAAC+J,GAAG,CAAC,GACG,EACL,GAAM,uBAAiCnI,MAAA,CAAVoI,EAAKzK,IAAI,EACtC,KAAQ,GAAaqC,MAAA,CAAVoI,EAAKzK,IAAI,EACpB,YAAe,MAAgBqC,MAAA,CAAVoI,EAAKzK,IAAI,CAAC,UAC/B,MAASM,KAAKC,SAAS,CAAC,CACtB,QAAWkK,EAAKhK,OAAO,EAE3B,IAEFiK,YAAa,GAeJC,EAAOH,GAAG,CAAC,IAChB,GAAM,CAAEnK,MAAAA,CAAK,CAAEuK,MAAAA,CAAK,CAAEC,MAAAA,CAAK,CAAE,CAAG7H,EAC1B,CAAE8H,QAAAA,CAAO,CAAEC,OAAAA,CAAM,CAAEC,SAAAA,CAAQ,CAAEC,MAAAA,CAAK,CAAE,CAAGJ,EAAMK,OAAO,CAE1D,MAAO,CACL/K,GAAI,cAAoBkC,MAAA,CAANhC,GAClBL,KAAM4K,EACNvK,MAAOC,KAAKC,SAAS,CACnB,CACEgB,KAAM,QACN2J,QAAS,CACPJ,QAASA,EACTC,OAAQA,EACRC,SAAUA,EACVC,MAAOA,CACT,CACF,EACA,KACA,GAEF7K,YAAa,WACf,CACF,GAEF+K,WAAY,CACV,CACE,GAAM,uBACN,KAAQ,eACR,YAAe,sBACf,MAAS7K,KAAKC,SAAS,CAAC,CACtBgB,KAAM,QACN2J,QAAS,CACPJ,QAAS,6CACTC,OAAQ,MACRC,SAAU,GACVC,MAAO,gCACT,CACF,EACF,EACA,CACE,GAAM,yBACN,KAAQ,iBACR,YAAe,4CACf,MAAS3K,KAAKC,SAAS,CAAC,CACtB,KAAQ,SACR,QAAW,CACT,QAAW,6CACX,QAAW,OACb,CACF,EACF,EACA,CACE,GAAM,0BACN,KAAQ,aACR,YAAe,oBACf,MAASD,KAAKC,SAAS,CAAC,CACtB,KAAQ,UACR,QAAW,CACT,QAAW,6CACX,QAAW,MACb,CACF,EACF,EACA,CACE,GAAM,gCACN,KAAQ,qBACR,YAAe,uBACf,MAASD,KAAKC,SAAS,CAAC,CACtBgB,KAAM,QACN2J,QAAS,CACPJ,QAAS,6CACTC,OAAQ,OACRC,SAAU,GACVC,MAAO,kDACT,CACF,EACF,EACA,CACE,GAAM,wCACN,KAAQ,6BACR,YAAe,mCACf,MAAS3K,KAAKC,SAAS,CAAC,CACtB,KAAQ,SACR,QAAW,CACT,QAAW,6CACX,QACE,+EACJ,CACF,EACF,EACA,CACE,GAAM,kCACN,KAAQ,kBACR,YAAe,0BACf,MAASD,KAAKC,SAAS,CAAC,CACtB,KAAQ,UACR,QAAW,CACT,QAAW,6CACX,QAAW,MACb,CACF,EACF,EACD,CACD6K,QAAS,CACP,CACE,GAAM,aACN,KAAQ,aACR,YAAe,uBACf,MAAS,oEACX,EACD,CACDC,WAAY,CACV,CACE,GAAM,aACN,KAAQ,eACR,YAAe,aACf,MAAS,MACX,EACD,CACDC,aAAc,CACZ,CACE,GAAM,WACN,KAAQ,WACR,YAAe,eACf,MAAS,MACX,EACD,CACDC,kBAAmB,CACjB,CACE,GAAM,WACN,KAAQ,WACR,YAAe,eACf,MAASjL,KAAKC,SAAS,CAAC,CACtB,QAAW,OACX,UAAa,2BACf,EACF,EACD,CACDiL,cAAe,CACb,CACE,GAAM,gBACN,KAAQ,gBACR,YAAe,gBACf,MAASlL,KAAKC,SAAS,CAAC,CACtB,CACEgB,KAAM,SACNvB,KAAM,UACNK,MAAO,YACT,EACA,CACEkB,KAAM,SACNvB,KAAM,WACNK,MAAO,MACT,EACD,CACH,EACD,CACD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","sources":["webpack://_N_E/./components/chains/ethereum/dapps.config.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/normal.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/nestedArray.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/bigdata.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/permit.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/permitSingle.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/permitBatch.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/permitTransferFrom.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/permitBatchTransferFrom.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/permitWitnessTransferFrom.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/order.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/orderComponents.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/orderComponentsBuy.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/orderUniswap.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/orderCosSwap.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/orderUniswap2.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/orderBlur.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/order1Inch.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/safeTxMultiSig.ts","webpack://_N_E/./components/chains/ethereum/case/signTypedDataV4/index.ts","webpack://_N_E/./components/chains/ethereum/params.ts","webpack://_N_E/./components/chains/ethereum/utils.ts","webpack://_N_E/./components/chains/ethereum/case/contract/SampleContracts.ts","webpack://_N_E/./components/chains/ethereum/case/transfer/malicious.ts","webpack://_N_E/./components/chains/ethereum/case/transfer/malformed.ts","webpack://_N_E/./components/chains/ethereum/case/transfer/uniswapV2.ts","webpack://_N_E/./components/chains/ethereum/case/transfer/uniswapUniversal.ts","webpack://_N_E/./components/chains/ethereum/case/transfer/sushiswap.ts","webpack://_N_E/./components/chains/ethereum/case/transfer/morpho.ts","webpack://_N_E/./components/chains/ethereum/case/transfer/inchV5.ts","webpack://_N_E/./components/chains/ethereum/case/transfer/inchV6.ts","webpack://_N_E/./components/chains/ethereum/case/transfer/okx.ts","webpack://_N_E/./components/chains/ethereum/components/ERC20.tsx","webpack://_N_E/./components/ui/tabs.tsx","webpack://_N_E/./components/TabCard.tsx","webpack://_N_E/./components/chains/ethereum/components/ERC721.tsx","webpack://_N_E/./components/chains/ethereum/components/ERC1155.tsx","webpack://_N_E/./components/chains/ethereum/example.tsx","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/brorand|crypto","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/elliptic/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/readable-stream/lib/internal/streams|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/readable-stream/lib|util","webpack://_N_E/<anon>"],"sourcesContent":["export const dapps = [\n  {\n    name: 'OpenSea',\n    url: 'https://opensea.io/',\n  },\n  {\n    name: 'Uniswap',\n    url: 'https://app.uniswap.org/',\n  },\n  {\n    name: '1inch Network',\n    url: 'https://app.1inch.io/',\n  },\n  {\n    name: 'Blur',\n    url: 'https://blur.io/collections',\n  },\n  {\n    name: 'Sushi',\n    url: 'https://www.sushi.com/swap',\n  },\n  {\n    name: 'X2Y2',\n    url: 'https://x2y2.io/',\n  },\n];\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-normal',\n  name: '默认类型: signTypedDataV4',\n  description: 'SignTypedDataV4 Normal',\n  value: JSON.stringify({\n    domain: {\n      chainId: params.chainId.toString(),\n      name: 'Ether Mail',\n      verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n      version: '1',\n    },\n    message: {\n      contents: 'Hello, Bob!',\n      from: {\n        name: 'Cow',\n        wallets: [\n          '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n          '0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF',\n        ],\n      },\n      to: [\n        {\n          name: 'Bob',\n          wallets: [\n            '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n            '0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57',\n            '0xB0B0b0b0b0b0B000000000000000000000000000',\n          ],\n        },\n      ],\n      attachment: '0x',\n    },\n    primaryType: 'Mail',\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n      Group: [\n        { name: 'name', type: 'string' },\n        { name: 'members', type: 'Person[]' },\n      ],\n      Mail: [\n        { name: 'from', type: 'Person' },\n        { name: 'to', type: 'Person[]' },\n        { name: 'contents', type: 'string' },\n        { name: 'attachment', type: 'bytes' },\n      ],\n      Person: [\n        { name: 'name', type: 'string' },\n        { name: 'wallets', type: 'address[]' },\n      ],\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-Nested-array',\n  name: '默认类型: 嵌套数组',\n  description: 'SignTypedDataV4 Nested Array',\n  value: JSON.stringify({\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n      ],\n      NestedArray: [\n        { name: 'items', type: 'SingleItem[][]' },\n      ],\n      SingleItem: [\n        { name: 'id', type: 'uint256' },\n        { name: 'value', type: 'string' },\n      ],\n    },\n    primaryType: 'NestedArray',\n    domain: {\n      chainId: params.chainId.toString(),\n      name: 'NestedArray',\n      verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n      version: '1',\n    },\n    message: {\n      items: [\n        [\n          { id: 1, value: 'Item1-1' },\n          { id: 2, value: 'Item1-2' },\n        ],\n        [\n          { id: 3, value: 'Item2-1' },\n          { id: 4, value: 'Item2-2' },\n        ],\n        [\n          { id: 5, value: 'Item3-1' },\n          { id: 6, value: 'Item3-2' },\n        ],\n        [\n          { id: 7, value: 'Item4-1' },\n          { id: 8, value: 'Item4-2' },\n        ],\n      ],\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-bigdata',\n  name: '默认类型: 大数据模式',\n  description: 'SignTypedDataV4 BigData',\n  value: JSON.stringify({\n    domain: {\n      name: 'Franklin',\n      version: '0.0.1',\n      chainId: params.chainId.toString(),\n      verifyingContract: '0x0000000000000000000000000000000000000000',\n    },\n    primaryType: 'ForwardRequest',\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n      ForwardRequest: [\n        { name: 'from', type: 'address' },\n        { name: 'to', type: 'address' },\n        { name: 'value', type: 'uint256' },\n        { name: 'gas', type: 'uint256' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'data', type: 'bytes' },\n      ],\n      VerifyWallet: [\n        { name: 'contents', type: 'string' },\n      ],\n    },\n    message: {\n      from: '0x0000000000000000000000000000000000000000',\n      to: '0x0000000000000000000000000000000000000000',\n      value: 0,\n      gas: 275755,\n      nonce: 3,\n      data: `0x${'01'.repeat(3150)}`,\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-permit',\n  name: 'permit: Permit 方法',\n  description: 'SignTypedDataV4 Permit 方法',\n  value: JSON.stringify({\n    types: {\n      EIP712Domain: [\n        {\n          name: 'name',\n          type: 'string',\n        },\n        {\n          name: 'version',\n          type: 'string',\n        },\n        {\n          name: 'chainId',\n          type: 'uint256',\n        },\n        {\n          name: 'verifyingContract',\n          type: 'address',\n        },\n      ],\n      Permit: [\n        {\n          name: 'owner',\n          type: 'address',\n        },\n        {\n          name: 'spender',\n          type: 'address',\n        },\n        {\n          name: 'value',\n          type: 'uint256',\n        },\n        {\n          name: 'nonce',\n          type: 'uint256',\n        },\n        {\n          name: 'deadline',\n          type: 'uint256',\n        },\n      ],\n    },\n    primaryType: 'Permit',\n    domain: {\n      name: 'MyToken',\n      version: '1',\n      verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n      chainId: params.chainId.toString(),\n    },\n    message: {\n      owner: '0xd6e8058cd3a5e5b90eacdc350e1246de4a39d411',\n      spender: '0x5B38Da6a701c568545dCfcB03FcB875f56beddC4',\n      value: 3000,\n      nonce: 0,\n      deadline: 50000000000,\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-permitSingle',\n  name: 'permit2: PermitSingle 方法 Swap USDC => Matic',\n  description: '模仿 UniSwap Swap，数据来自 Polygon USDC => Matic',\n  value: JSON.stringify({\n    types: {\n      PermitSingle: [\n        { name: 'details', type: 'PermitDetails' },\n        { name: 'spender', type: 'address' },\n        { name: 'sigDeadline', type: 'uint256' },\n      ],\n      PermitDetails: [\n        { name: 'token', type: 'address' },\n        { name: 'amount', type: 'uint160' },\n        { name: 'expiration', type: 'uint48' },\n        { name: 'nonce', type: 'uint48' },\n      ],\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n    },\n    domain: {\n      name: 'Permit2',\n      chainId: params.chainId.toString(),\n      verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n    },\n    primaryType: 'PermitSingle',\n    message: {\n      details: {\n        token: '0x3c499c542cef5e3811e1192ce70d8cc03d5c3359',\n        amount: '1461501637330902918203684832716283019655932542975',\n        expiration: '1722675330',\n        nonce: '0',\n      },\n      spender: '0xec7be89e9d109e7e3fec59c222cf297125fefda2',\n      sigDeadline: '1720085130',\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-permitBatch',\n  name: 'permit2: PermitBatch 代币批量授权',\n  description: 'permit2: PermitBatch 代币批量授权，一次授权两个代币信息',\n  value: JSON.stringify({\n    types: {\n      PermitBatch: [\n        {\n          name: 'details',\n          type: 'PermitDetails[]',\n        },\n        {\n          name: 'spender',\n          type: 'address',\n        },\n        {\n          name: 'sigDeadline',\n          type: 'uint256',\n        },\n      ],\n      PermitDetails: [\n        {\n          name: 'token',\n          type: 'address',\n        },\n        {\n          name: 'amount',\n          type: 'uint160',\n        },\n        {\n          name: 'expiration',\n          type: 'uint48',\n        },\n        {\n          name: 'nonce',\n          type: 'uint48',\n        },\n      ],\n      EIP712Domain: [\n        {\n          name: 'name',\n          type: 'string',\n        },\n        {\n          name: 'chainId',\n          type: 'uint256',\n        },\n        {\n          name: 'verifyingContract',\n          type: 'address',\n        },\n      ],\n    },\n    domain: {\n      name: 'Permit2',\n      verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n      chainId: params.chainId.toString(),\n    },\n    primaryType: 'PermitBatch',\n    message: {\n      details: [\n        {\n          token: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          amount: '1461501637330902918203684832716283019655932542975',\n          expiration: '1722887542',\n          nonce: '5',\n        },\n        {\n          token: '0xb0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n          amount: '1461501637330902918203684832716283019655932542975',\n          expiration: '1722887642',\n          nonce: '6',\n        },\n      ],\n      spender: '0x3fc91a3afd70395cd496c647d5a6cc9d4b2b7fad',\n      sigDeadline: '1720297342',\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-permitTransferFrom',\n  name: 'permit2: PermitTransferFrom 方法',\n  description: 'SignTypedDataV4 PermitTransferFrom 方法',\n  value: JSON.stringify({\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n      PermitTransferFrom: [\n        { name: 'permitted', type: 'TokenPermissions' },\n        { name: 'spender', type: 'address' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'deadline', type: 'uint256' },\n      ],\n      TokenPermissions: [\n        { name: 'token', type: 'address' },\n        { name: 'amount', type: 'uint256' },\n      ],\n    },\n    primaryType: 'PermitTransferFrom',\n    domain: {\n      name: 'PermitTransfer',\n      version: '1',\n      chainId: params.chainId.toString(),\n      verifyingContract: '0x000000000022D473030F116dDEE9F6B43aC78BA3', // Example contract address\n    },\n    message: {\n      permitted: {\n        token: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Example USDC token address\n        amount: '1000000', // 1 USDC (6 decimals)\n      },\n      spender: '0x5B38Da6a701c568545dCfcB03FcB875f56beddC4',\n      nonce: 0,\n      deadline: 1672531200, // Example deadline (2023-01-01 00:00:00 UTC)\n    },\n  }),\n});","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-permitBatchTransferFrom',\n  name: 'permit2: PermitBatchTransferFrom 方法',\n  description: 'SignTypedDataV4 PermitBatchTransferFrom 方法',\n  value: JSON.stringify({\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n      PermitBatchTransferFrom: [\n        { name: 'permitted', type: 'TokenPermissions[]' },\n        { name: 'spender', type: 'address' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'deadline', type: 'uint256' },\n      ],\n      TokenPermissions: [\n        { name: 'token', type: 'address' },\n        { name: 'amount', type: 'uint256' },\n      ],\n    },\n    primaryType: 'PermitBatchTransferFrom',\n    domain: {\n      name: 'PermitTransfer',\n      version: '1',\n      chainId: params.chainId.toString(),\n      verifyingContract: '0x000000000022D473030F116dDEE9F6B43aC78BA3', // Example contract address\n    },\n    message: {\n      permitted: [\n        {\n          token: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Example USDC token address\n          amount: '1000000', // 1 USDC (6 decimals)\n        },\n        {\n          token: '0xdAC17F958D2ee523a2206206994597C13D831ec7', // Example USDT token address\n          amount: '1000000', // 1 USDT (6 decimals)\n        },\n      ],\n      spender: '0x5B38Da6a701c568545dCfcB03FcB875f56beddC4',\n      nonce: 0,\n      deadline: 1672531200, // Example deadline (2023-01-01 00:00:00 UTC)\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV5-permitWitnessTransferFrom',\n  name: '默认类型: PermitWitnessTransferFrom 方法',\n  description: '模仿 UniSwap 现价单，数据来自 ETH 主网 USDC => ETH',\n  value: JSON.stringify({\n    types: {\n      PermitWitnessTransferFrom: [\n        { name: 'permitted', type: 'TokenPermissions' },\n        { name: 'spender', type: 'address' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'deadline', type: 'uint256' },\n        { name: 'witness', type: 'ExclusiveDutchOrder' }\n      ],\n      TokenPermissions: [\n        { name: 'token', type: 'address' },\n        { name: 'amount', type: 'uint256' }\n      ],\n      ExclusiveDutchOrder: [\n        { name: 'info', type: 'OrderInfo' },\n        { name: 'decayStartTime', type: 'uint256' },\n        { name: 'decayEndTime', type: 'uint256' },\n        { name: 'exclusiveFiller', type: 'address' },\n        { name: 'exclusivityOverrideBps', type: 'uint256' },\n        { name: 'inputToken', type: 'address' },\n        { name: 'inputStartAmount', type: 'uint256' },\n        { name: 'inputEndAmount', type: 'uint256' },\n        { name: 'outputs', type: 'DutchOutput[]' }\n      ],\n      OrderInfo: [\n        { name: 'reactor', type: 'address' },\n        { name: 'swapper', type: 'address' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'deadline', type: 'uint256' },\n        { name: 'additionalValidationContract', type: 'address' },\n        { name: 'additionalValidationData', type: 'bytes' }\n      ],\n      DutchOutput: [\n        { name: 'token', type: 'address' },\n        { name: 'startAmount', type: 'uint256' },\n        { name: 'endAmount', type: 'uint256' },\n        { name: 'recipient', type: 'address' }\n      ],\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' }\n      ]\n    },\n    domain: {\n      name: 'Permit2',\n      chainId: params.chainId.toString(),\n      verifyingContract: '0x000000000022d473030f116ddee9f6b43ac78ba3'\n    },\n    primaryType: 'PermitWitnessTransferFrom',\n    message: {\n      permitted: {\n        token: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        amount: '100000'\n      },\n      spender: '0x6000da47483062a0d734ba3dc7576ce6a0b645c4',\n      nonce: '1993348893786760112071654418902816288670429612439619040341918096409194690305',\n      deadline: '1720694762',\n      witness: {\n        info: {\n          reactor: '0x6000da47483062a0d734ba3dc7576ce6a0b645c4',\n          swapper: '0x5618207d27d78f09f61a5d92190d58c453feb4b7',\n          nonce: '1993348893786760112071654418902816288670429612439619040341918096409194690305',\n          deadline: '1720694762',\n          additionalValidationContract: '0x0000000000000000000000000000000000000000',\n          additionalValidationData: '0x'\n        },\n        decayStartTime: '1720089962',\n        decayEndTime: '1720089962',\n        exclusiveFiller: '0x0000000000000000000000000000000000000000',\n        exclusivityOverrideBps: '0',\n        inputToken: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        inputStartAmount: '100000',\n        inputEndAmount: '100000',\n        outputs: [\n          {\n            token: '0x0000000000000000000000000000000000000000',\n            startAmount: '33465858131534',\n            endAmount: '33465858131534',\n            recipient: '0x5618207d27d78f09f61a5d92190d58c453feb4b7'\n          }\n        ]\n      }\n    }\n  })\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-order',\n  name: 'order: Order 方法',\n  description: 'SignTypedDataV4 Order 方法',\n  value: JSON.stringify({\n    types: {\n      Order: [\n        { type: 'uint8', name: 'direction' },\n        { type: 'address', name: 'maker' },\n        { type: 'address', name: 'taker' },\n        { type: 'uint256', name: 'expiry' },\n        { type: 'uint256', name: 'nonce' },\n        { type: 'address', name: 'erc20Token' },\n        { type: 'uint256', name: 'erc20TokenAmount' },\n        { type: 'Fee[]', name: 'fees' },\n        { type: 'address', name: 'erc721Token' },\n        { type: 'uint256', name: 'erc721TokenId' },\n        { type: 'Property[]', name: 'erc721TokenProperties' },\n      ],\n      Fee: [\n        { type: 'address', name: 'recipient' },\n        { type: 'uint256', name: 'amount' },\n        { type: 'bytes', name: 'feeData' },\n      ],\n      Property: [\n        { type: 'address', name: 'propertyValidator' },\n        { type: 'bytes', name: 'propertyData' },\n      ],\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n    },\n    domain: {\n      name: 'ZeroEx',\n      version: '1.0.0',\n      chainId: params.chainId.toString(),\n      verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n    },\n    primaryType: 'Order',\n    message: {\n      direction: '0',\n      maker: '0x0dcd5d886577d5081b0c52e242ef29e70be3e7bc',\n      taker: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n      expiry: '2524604400',\n      nonce: '100131415900000000000000000000000000000083840314483690155566137712510085002484',\n      erc20Token: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n      erc20TokenAmount: '42000000000000',\n      fees: [],\n      erc721Token: '0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e',\n      erc721TokenId: '2516',\n      erc721TokenProperties: [],\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-opensea-shell-nft-orderComponents',\n  name: 'order: Opensea Shell NFT OrderComponents 方法',\n  description: 'SignTypedDataV4 Opensea Shell NFT OrderComponents 方法',\n  value: JSON.stringify({\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n      OrderComponents: [\n        { name: 'offerer', type: 'address' },\n        { name: 'zone', type: 'address' },\n        { name: 'offer', type: 'OfferItem[]' },\n        { name: 'consideration', type: 'ConsiderationItem[]' },\n        { name: 'orderType', type: 'uint8' },\n        { name: 'startTime', type: 'uint256' },\n        { name: 'endTime', type: 'uint256' },\n        { name: 'zoneHash', type: 'bytes32' },\n        { name: 'salt', type: 'uint256' },\n        { name: 'conduitKey', type: 'bytes32' },\n        { name: 'counter', type: 'uint256' },\n      ],\n      OfferItem: [\n        { name: 'itemType', type: 'uint8' },\n        { name: 'token', type: 'address' },\n        { name: 'identifierOrCriteria', type: 'uint256' },\n        { name: 'startAmount', type: 'uint256' },\n        { name: 'endAmount', type: 'uint256' },\n      ],\n      ConsiderationItem: [\n        { name: 'itemType', type: 'uint8' },\n        { name: 'token', type: 'address' },\n        { name: 'identifierOrCriteria', type: 'uint256' },\n        { name: 'startAmount', type: 'uint256' },\n        { name: 'endAmount', type: 'uint256' },\n        { name: 'recipient', type: 'address' },\n      ],\n    },\n    primaryType: 'OrderComponents',\n    domain: {\n      name: 'Seaport',\n      version: '1.1',\n      chainId: params.chainId.toString(),\n      verifyingContract: '0x00000000006c3852cbEf3e08E8dF289169EdE581', // Seaport 1.1 contract address\n    },\n    message: {\n      offerer: '0x0000000000000000000000000000000000000000',\n      zone: '0x0000000000000000000000000000000000000000',\n      offer: [\n        {\n          itemType: 2, // ERC721\n          token: '0x0000000000000000000000000000000000000000',\n          identifierOrCriteria: '1',\n          startAmount: '1',\n          endAmount: '1',\n        },\n      ],\n      consideration: [\n        {\n          itemType: 0, // ETH\n          token: '0x0000000000000000000000000000000000000000',\n          identifierOrCriteria: '0',\n          startAmount: '1000000000000000000',\n          endAmount: '1000000000000000000',\n          recipient: '0x0000000000000000000000000000000000000000',\n        },\n      ],\n      orderType: 0, // FULL_OPEN\n      startTime: '1640995200', // 2022-01-01 00:00:00 UTC\n      endTime: '1672531200', // 2023-01-01 00:00:00 UTC\n      zoneHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n      salt: '0',\n      conduitKey: '0x0000000000000000000000000000000000000000000000000000000000000000',\n      counter: '0',\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-opensea-shell-nft-orderComponents',\n  name: 'order: Opensea Shell NFT OrderComponents 方法',\n  description: 'SignTypedDataV4 Opensea Shell NFT OrderComponents 方法',\n  value: JSON.stringify({\n    domain: {\n      name: 'Seaport',\n      version: '1.6',\n      chainId: '1',\n      verifyingContract: '0x0000000000000068F116a894984e2DB1123eB395',\n    },\n    primaryType: 'OrderComponents',\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n      OrderComponents: [\n        { name: 'offerer', type: 'address' },\n        { name: 'zone', type: 'address' },\n        { name: 'offer', type: 'OfferItem[]' },\n        { name: 'consideration', type: 'ConsiderationItem[]' },\n        { name: 'orderType', type: 'uint8' },\n        { name: 'startTime', type: 'uint256' },\n        { name: 'endTime', type: 'uint256' },\n        { name: 'zoneHash', type: 'bytes32' },\n        { name: 'salt', type: 'uint256' },\n        { name: 'conduitKey', type: 'bytes32' },\n        { name: 'counter', type: 'uint256' },\n      ],\n      OfferItem: [\n        { name: 'itemType', type: 'uint8' },\n        { name: 'token', type: 'address' },\n        { name: 'identifierOrCriteria', type: 'uint256' },\n        { name: 'startAmount', type: 'uint256' },\n        { name: 'endAmount', type: 'uint256' },\n      ],\n      ConsiderationItem: [\n        { name: 'itemType', type: 'uint8' },\n        { name: 'token', type: 'address' },\n        { name: 'identifierOrCriteria', type: 'uint256' },\n        { name: 'startAmount', type: 'uint256' },\n        { name: 'endAmount', type: 'uint256' },\n        { name: 'recipient', type: 'address' },\n      ],\n    },\n    message: {\n      offerer: '0x25F258841532F4bD43A7be72f4a5d6DBDc0225de',\n      offer: [\n        {\n          itemType: '1',\n          token: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n          identifierOrCriteria: '0',\n          startAmount: '195000000000000000',\n          endAmount: '195000000000000000',\n        },\n      ],\n      consideration: [\n        {\n          itemType: '2',\n          token: '0xd00dE8ce9eA7A0E5573CC6bc6F97cb0c293CB16e',\n          identifierOrCriteria: '84',\n          startAmount: '1',\n          endAmount: '1',\n          recipient: '0x25F258841532F4bD43A7be72f4a5d6DBDc0225de',\n        },\n        {\n          itemType: '1',\n          token: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n          identifierOrCriteria: '0',\n          startAmount: '4875000000000000',\n          endAmount: '4875000000000000',\n          recipient: '0x0000a26b00c1F0DF003000390027140000fAa719',\n        },\n      ],\n      startTime: '1732518621',\n      endTime: '1732777809',\n      orderType: '2',\n      zone: '0x000056F7000000EcE9003ca63978907a00FFD100',\n      zoneHash: '0x0000000000000000000000000000000000000000000000000000000000000000',\n      salt: '24446860302761739304752683030156737591518664810215442929812175597397955425206',\n      conduitKey: '0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000',\n      totalOriginalConsiderationItems: '2',\n      counter: '0',\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-uniswap-order',\n  name: 'order: Uniswap Order 方法',\n  description: 'SignTypedDataV4 Uniswap Order 方法',\n  value: JSON.stringify({\n    domain: {\n      name: 'Permit2',\n      chainId: '1',\n      verifyingContract: '0x000000000022d473030f116ddee9f6b43ac78ba3',\n    },\n    primaryType: 'PermitWitnessTransferFrom',\n    types: {\n      PermitWitnessTransferFrom: [\n        { name: 'permitted', type: 'TokenPermissions' },\n        { name: 'spender', type: 'address' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'deadline', type: 'uint256' },\n        { name: 'witness', type: 'ExclusiveDutchOrder' },\n      ],\n      TokenPermissions: [\n        { name: 'token', type: 'address' },\n        { name: 'amount', type: 'uint256' },\n      ],\n      ExclusiveDutchOrder: [\n        { name: 'info', type: 'OrderInfo' },\n        { name: 'decayStartTime', type: 'uint256' },\n        { name: 'decayEndTime', type: 'uint256' },\n        { name: 'exclusiveFiller', type: 'address' },\n        { name: 'exclusivityOverrideBps', type: 'uint256' },\n        { name: 'inputToken', type: 'address' },\n        { name: 'inputStartAmount', type: 'uint256' },\n        { name: 'inputEndAmount', type: 'uint256' },\n        { name: 'outputs', type: 'DutchOutput[]' },\n      ],\n      OrderInfo: [\n        { name: 'reactor', type: 'address' },\n        { name: 'swapper', type: 'address' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'deadline', type: 'uint256' },\n        { name: 'additionalValidationContract', type: 'address' },\n        { name: 'additionalValidationData', type: 'bytes' },\n      ],\n      DutchOutput: [\n        { name: 'token', type: 'address' },\n        { name: 'startAmount', type: 'uint256' },\n        { name: 'endAmount', type: 'uint256' },\n        { name: 'recipient', type: 'address' },\n      ],\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n    },\n    message: {\n      permitted: {\n        token: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        amount: '1000000',\n      },\n      spender: '0x6000da47483062a0d734ba3dc7576ce6a0b645c4',\n      nonce: '1993352166583899161923764192112649470755470073419234265795709026266341327361',\n      deadline: 1731399262,\n      witness: {\n        info: {\n          reactor: '0x6000da47483062a0d734ba3dc7576ce6a0b645c4',\n          swapper: '0x76f3f64cb3cd19debee51436df630a342b736c24',\n          nonce: '1993352166583899161923764192112649470755470073419234265795709026266341327361',\n          deadline: 1731399262,\n          additionalValidationContract: '0x0000000000000000000000000000000000000000',\n          additionalValidationData: '0x',\n        },\n        decayStartTime: 1731399262,\n        decayEndTime: 1731399262,\n        exclusiveFiller: '0x0000000000000000000000000000000000000000',\n        exclusivityOverrideBps: '0',\n        inputToken: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        inputStartAmount: '1000000',\n        inputEndAmount: '1000000',\n        outputs: [\n          {\n            token: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n            startAmount: '1000000',\n            endAmount: '1000000',\n            recipient: '0x76f3f64cb3cd19debee51436df630a342b736c24',\n          },\n        ],\n      },\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-cos-swap-order',\n  name: 'order: CosSwap Order 方法',\n  description: 'SignTypedDataV4 CosSwap Order 方法',\n  value: JSON.stringify({\n    domain: {\n      name: 'Gnosis Protocol',\n      version: 'v2',\n      chainId: '1',\n      verifyingContract: '0x9008d19f58aabd9ed0d60971565aa8510560ab41',\n    },\n    primaryType: 'Order',\n    types: {\n      Order: [\n        { name: 'sellToken', type: 'address' },\n        { name: 'buyToken', type: 'address' },\n        { name: 'receiver', type: 'address' },\n        { name: 'sellAmount', type: 'uint256' },\n        { name: 'buyAmount', type: 'uint256' },\n        { name: 'validTo', type: 'uint32' },\n        { name: 'appData', type: 'bytes32' },\n        { name: 'feeAmount', type: 'uint256' },\n        { name: 'kind', type: 'string' },\n        { name: 'partiallyFillable', type: 'bool' },\n        { name: 'sellTokenBalance', type: 'string' },\n        { name: 'buyTokenBalance', type: 'string' },\n      ],\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n    },\n    message: {\n      sellToken: '0x73a15fed60bf67631dc6cd7bc5b6e8da8190acf5',\n      buyToken: '0x35d8949372d46b7a3d5a56006ae77b215fc69bc0',\n      receiver: '0x868d38d6bcb9a2efe2e23f4211d497908e99d66b',\n      sellAmount: '402065000000000000000000',\n      buyAmount: '401804427342567222745733',\n      validTo: '1732851237',\n      appData: '0xfd1a10bb40371b2385c680bb9ea570b3106efd027e92b8814a8e34b397cff9a9',\n      feeAmount: '0',\n      kind: 'sell',\n      partiallyFillable: false,\n      sellTokenBalance: 'erc20',\n      buyTokenBalance: 'erc20',\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-uniswap-order2',\n  name: 'order: Uniswap Order2 方法',\n  description: 'SignTypedDataV4 Uniswap Order2 方法',\n  value: JSON.stringify({\n    domain: {\n      name: 'Permit2',\n      chainId: 1,\n      verifyingContract: '0x000000000022d473030f116ddee9f6b43ac78ba3',\n    },\n    primaryType: 'PermitWitnessTransferFrom',\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n      TokenPermissions: [\n        { name: 'token', type: 'address' },\n        { name: 'amount', type: 'uint256' },\n      ],\n      PermitWitnessTransferFrom: [\n        { name: 'permitted', type: 'TokenPermissions' },\n        { name: 'spender', type: 'address' },\n        { name: 'nonce', type: 'uint256' },\n        { name: 'deadline', type: 'uint256' },\n        { name: 'slippageAndActions', type: 'SlippageAndActions' },\n      ],\n      SlippageAndActions: [\n        { name: 'recipient', type: 'address' },\n        { name: 'buyToken', type: 'address' },\n        { name: 'minAmountOut', type: 'uint256' },\n        { name: 'actions', type: 'bytes[]' },\n      ],\n    },\n    message: {\n      permitted: {\n        token: '0xf951e335afb289353dc249e82926178eac7ded78',\n        amount: '62299402597136176',\n      },\n      spender: '0x12d737470fb3ec6c3deec9b518100bec9d520144',\n      nonce: '2241959297937691820908574931991577',\n      deadline: '1732852904',\n      slippageAndActions: {\n        recipient: '0x271c912cb7dc4762de07a94f12441222f1b6dcb3',\n        buyToken: '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',\n        minAmountOut: '65218807820420760',\n        actions: [\n          '0x9ebf8e8d00000000000000000000000012d737470fb3ec6c3deec9b518100bec9d52014400000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000f951e335afb289353dc249e82926178eac7ded7800000000000000000000000000000000000000000000000000dd54fa018577300000000000000000000000000000000000006e898131631616b1779bad70bc190000000000000000000000000000000000000000000000000000000067493ca80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002cf951e335afb289353dc249e82926178eac7ded78000001f4c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000',\n          '0x38c9c147000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000002710000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000242e1a7d4d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n          '0x38c9c147000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000000000000000cf00000000000000000000000038f5e5b4da37531a6e85161e337e0238bb27aa90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000',\n        ],\n      },\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-blur-order',\n  name: 'order: Blur Order 方法',\n  description: 'SignTypedDataV4 Blur Order 方法',\n  value: JSON.stringify({\n    domain: {\n      name: 'Blur Exchange',\n      version: '1.0',\n      chainId: '0x1',\n      verifyingContract: '0xb2ecfe4e4d61f8790bbb9de2d1259b9e2410cea5',\n    },\n    primaryType: 'Order',\n    types: {\n      Order: [\n        { name: 'trader', type: 'address' },\n        { name: 'collection', type: 'address' },\n        { name: 'listingsRoot', type: 'bytes32' },\n        { name: 'numberOfListings', type: 'uint256' },\n        { name: 'expirationTime', type: 'uint256' },\n        { name: 'assetType', type: 'uint8' },\n        { name: 'makerFee', type: 'FeeRate' },\n        { name: 'salt', type: 'uint256' },\n        { name: 'orderType', type: 'uint8' },\n        { name: 'nonce', type: 'uint256' },\n      ],\n      FeeRate: [\n        { name: 'recipient', type: 'address' },\n        { name: 'rate', type: 'uint16' },\n      ],\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n    },\n    message: {\n      trader: '0x76f3f64cb3cd19debee51436df630a342b736c24',\n      collection: '0x0baeccd651cf4692a8790bcc4f606e79bf7a3b1c',\n      listingsRoot: '0x1a666ef1af5abc6cd5da0cb0ffb71a0a1d16e04c978335fc67d53d7119909ccd',\n      numberOfListings: '1',\n      expirationTime: 1731399262,\n      assetType: '0',\n      makerFee: {\n        recipient: '0x322ce12a36d48709cab5b4743f31d85db7b15b82',\n        rate: '1000',\n      },\n      salt: '26547960623202541912088385383696263658',\n      orderType: '0',\n      nonce: '0',\n    },\n  }),\n});\n","import type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-1inch-order',\n  name: 'order: 1inch Order 方法',\n  description: 'SignTypedDataV4 1inch Order 方法',\n  value: JSON.stringify({\n    domain: {\n      name: '1inch Aggregation Router',\n      version: '6',\n      chainId: 1,\n      verifyingContract: '0x111111125421ca6dc452d289314280a0f8842a65',\n    },\n    primaryType: 'Order',\n    types: {\n      EIP712Domain: [\n        { name: 'name', type: 'string' },\n        { name: 'version', type: 'string' },\n        { name: 'chainId', type: 'uint256' },\n        { name: 'verifyingContract', type: 'address' },\n      ],\n      Order: [\n        { name: 'salt', type: 'uint256' },\n        { name: 'maker', type: 'address' },\n        { name: 'receiver', type: 'address' },\n        { name: 'makerAsset', type: 'address' },\n        { name: 'takerAsset', type: 'address' },\n        { name: 'makingAmount', type: 'uint256' },\n        { name: 'takingAmount', type: 'uint256' },\n        { name: 'makerTraits', type: 'uint256' },\n      ],\n    },\n    message: {\n      salt: '96530915085070088577238629764408922879729660059095033908741121777941465699830',\n      maker: '0x76f3f64cb3cd19debee51436df630a342b736c24',\n      receiver: '0x0000000000000000000000000000000000000000',\n      makerAsset: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n      takerAsset: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n      makingAmount: '1000000',\n      takingAmount: '1000000',\n      makerTraits: '0x440000000000000000000000000000000000672725ae00000000000000000000',\n      extension: '0x',\n    },\n  }),\n});\n","import { merge } from 'lodash';\nimport { IEIP712Params } from '../../types';\n\nconst baseSafeTxMultiSig = {\n  domain: {\n    chainId: '0x1',\n    verifyingContract: '0xe0526bff2aeacbe5dd2a0c98b0276144d14f932a',\n  },\n  primaryType: 'SafeTx',\n  types: {\n    SafeTx: [\n      { name: 'to', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'data', type: 'bytes' },\n      { name: 'operation', type: 'uint8' },\n      { name: 'safeTxGas', type: 'uint256' },\n      { name: 'baseGas', type: 'uint256' },\n      { name: 'gasPrice', type: 'uint256' },\n      { name: 'gasToken', type: 'address' },\n      { name: 'refundReceiver', type: 'address' },\n      { name: 'nonce', type: 'uint256' },\n    ],\n    EIP712Domain: [\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ],\n  },\n  message: {\n    to: '0x40a2accbd92bca938b02010e17a5b8929b49130d',\n    value: '0',\n    data: '0x8d80ff0a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004c80092d6c1e31e14520e676a687f0a93788b716beff500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000d3d3a295be556cf8cef2a7ff4cda23d22c4627e8000000000000000000000000000000000000000000003f870857a3e0e380000000c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000d3d3a295be556cf8cef2a7ff4cda23d22c4627e800000000000000000000000000000000000000000001a784379d99db420000000068bbed6a47194eff1cf514b50ea91895597fc91e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000d3d3a295be556cf8cef2a7ff4cda23d22c4627e8000000000000000000000000000000000000000006765c793fa10079d0000000003845badade8e6dff049820680d1f14bd3903a5d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000d3d3a295be556cf8cef2a7ff4cda23d22c4627e800000000000000000000000000000000000000000000943b1377290cbd80000000761d38e5ddf6ccf6cf7c55759d5210750b5d60f300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000d3d3a295be556cf8cef2a7ff4cda23d22c4627e800000000000000000000000000000000000000193e5939a08ce9dbd48000000000514910771af9ca656af840dff83e8264ecf986ca00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000d3d3a295be556cf8cef2a7ff4cda23d22c4627e800000000000000000000000000000000000000000000043c33c1937564800000007fc66500c84a76ad7e9c93437bfc5ac33e2ddae900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000d3d3a295be556cf8cef2a7ff4cda23d22c4627e800000000000000000000000000000000000000000000003635c9adc5dea0000000feac2eae96899709a43e252b6b92971d32f9c0f900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000d3d3a295be556cf8cef2a7ff4cda23d22c4627e800000000000000000000000000000000000000000000152d02c7e14af6800000000000000000000000000000000000000000000000000000',\n    operation: '1',\n    safeTxGas: '0',\n    baseGas: '0',\n    gasPrice: '0',\n    gasToken: '0x0000000000000000000000000000000000000000',\n    refundReceiver: '0x0000000000000000000000000000000000000000',\n    nonce: '122',\n  },\n};\n\nexport enum SafeTxMultiSigOperation {\n  CALL = '0',\n  DELEGATECALL = '1',\n}\n\nexport const safeTxMultiSigCall = (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-safeTxMultiSig-call',\n  name: 'safeTxMultiSig: Call',\n  description: 'SafeTxMultiSig 多签交易 Call',\n  value: JSON.stringify(\n    merge({}, baseSafeTxMultiSig, {\n      message: {\n        operation: SafeTxMultiSigOperation.CALL,\n      },\n    }),\n  ),\n});\n\nexport const safeTxMultiSigCallChainId = (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-safeTxMultiSig-call-number-chainId',\n  name: 'safeTxMultiSig: Call Number ChainId',\n  description: 'SafeTxMultiSig 多签交易 Call Number ChainId',\n  value: JSON.stringify(\n    merge({}, baseSafeTxMultiSig, {\n      domain: {\n        chainId: params.chainId,\n      },\n      message: {\n        operation: SafeTxMultiSigOperation.CALL,\n      },\n    }),\n  ),\n});\n\nexport const safeTxMultiSigDelegateCall = (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-safeTxMultiSig-delegateCall',\n  name: 'safeTxMultiSig: DelegateCall',\n  description: 'SafeTxMultiSig 多签交易 DelegateCall',\n  value: JSON.stringify(\n    merge({}, baseSafeTxMultiSig, {\n      message: {\n        operation: SafeTxMultiSigOperation.DELEGATECALL,\n      },\n    }),\n  ),\n});\n\nexport const safeTxMultiSigEmpty = (params: IEIP712Params) => ({\n  id: 'signTypedDataV4-safeTxMultiSig-empty',\n  name: 'safeTxMultiSig: Empty Data',\n  description: 'SafeTxMultiSig 多签交易 Empty Data',\n  value: JSON.stringify(\n    merge({}, baseSafeTxMultiSig, {\n      message: {\n        data: '',\n        operation: SafeTxMultiSigOperation.CALL,\n      },\n    }),\n  ),\n});\n","import normal from './normal';\nimport nestedArray from './nestedArray';\nimport bigdata from './bigdata';\n\nimport permit from './permit';\nimport permitSingle from './permitSingle';\nimport permitBatch from './permitBatch';\nimport permitTransferFrom from './permitTransferFrom';\nimport permitBatchTransferFrom from './permitBatchTransferFrom';\nimport permitWitnessTransferFrom from './permitWitnessTransferFrom';\n\nimport order from './order';\nimport orderComponents from './orderComponents';\n\nimport orderComponentsBuy from './orderComponentsBuy';\nimport orderUniswap from './orderUniswap';\nimport orderCosSwap from './orderCosSwap';\nimport orderUniswap2 from './orderUniswap2';\nimport orderBlur from './orderBlur';\nimport order1Inch from './order1Inch';\nimport {\n  safeTxMultiSigCall,\n  safeTxMultiSigCallChainId,\n  safeTxMultiSigDelegateCall,\n  safeTxMultiSigEmpty,\n} from './safeTxMultiSig';\n\nimport type { IEIP712Params } from '../../types';\n\nexport default (params: IEIP712Params) => [\n  normal(params),\n  permitWitnessTransferFrom(params),\n  nestedArray(params),\n  bigdata(params),\n  permit(params),\n  permitSingle(params),\n  permitBatch(params),\n  permitTransferFrom(params),\n  permitBatchTransferFrom(params),\n  order(params),\n  orderComponents(params),\n  orderComponentsBuy(params),\n  orderUniswap(params),\n  orderUniswap2(params),\n  orderCosSwap(params),\n  orderBlur(params),\n  order1Inch(params),\n  safeTxMultiSigCall(params),\n  safeTxMultiSigCallChainId(params),\n  safeTxMultiSigDelegateCall(params),\n  safeTxMultiSigEmpty(params),\n];\n","import signTypedDataV4Cases from './case/signTypedDataV4';\n\nconst chainIdInt = 100;\n\nexport default {\n  'signMessage': {\n    'message': 'Hello World',\n    'signature': '0x1',\n  },\n  'requestMothed': [\n    {\n      'id': 'request',\n      'name': 'request',\n      'description': 'request eth mothed',\n      'value': JSON.stringify({\n        'method': 'eth_requestAccounts',\n        'params': [],\n      }),\n    },\n  ],\n  'requestPermissions': [\n    {\n      'id': 'eth_accounts',\n      'name': 'eth_accounts',\n      'description': '请求权限',\n      'value': JSON.stringify({\n        'eth_accounts': {},\n      }),\n    },\n    {\n      'id': 'eth_accounts and eth_chainId',\n      'name': 'eth_accounts eth_chainId',\n      'description': '请求权限',\n      'value': JSON.stringify({\n        'eth_accounts': {},\n        'eth_chainId': {},\n      }),\n    },\n  ],\n  revokePermissions: [\n    {\n      'id': 'revokePermissions',\n      'name': 'revokePermissions',\n      'description': '断开 App 的授权连接',\n      'value': JSON.stringify({\n        'eth_accounts': {},\n      }),\n    },\n  ],\n  addEthereumChain: [\n    {\n      'id': 'addEthereumChain_Sepolia',\n      'name': 'Add Sepolia Test Chain',\n      'description': '添加 Sepolia Chain',\n      'value': JSON.stringify({\n        'chainId': '0xaa36a7',\n        'chainName': 'Sepolia TestNet',\n        'rpcUrls': ['https://rpc.sepolia.org', 'https://1rpc.io/sepolia'],\n        'iconUrls': ['https://chainlist.org/unknown-logo.png'],\n        'nativeCurrency': {\n          'name': 'TETH',\n          'symbol': 'TETH',\n          'decimals': 18,\n        },\n        'blockExplorerUrls': ['https://sepolia.etherscan.io/'],\n      }),\n    },\n    {\n      'id': 'addEthereumChain_Gnosis',\n      'name': 'Add Gnosis Chain',\n      'description': '添加 Gnosis Chain',\n      'value': JSON.stringify({\n        'chainId': '0x64',\n        'chainName': 'Gnosis',\n        'rpcUrls': ['https://rpc.gnosischain.com'],\n        'iconUrls': [\n          'https://xdaichain.com/fake/example/url/xdai.svg',\n          'https://xdaichain.com/fake/example/url/xdai.png',\n        ],\n        'nativeCurrency': {\n          'name': 'XDAI',\n          'symbol': 'XDAI',\n          'decimals': 18,\n        },\n        'blockExplorerUrls': ['https://blockscout.com/poa/xdai/'],\n      }),\n    },\n  ],\n  switchEthereumChain: [\n    {\n      name: 'Sepolia Test',\n      chainId: '0xaa36a7',\n    },\n    {\n      name: 'Gnosis',\n      chainId: '0x64',\n    },\n    {\n      name: 'filecoin Evm',\n      chainId: '0x13a',\n    },\n    {\n      name: 'Ethereum',\n      chainId: '0x1',\n    },\n    {\n      name: 'Optimism',\n      chainId: '0xa',\n    },\n    // {\n    //   name: 'EthereumPoW',\n    //   chainId: '0x64',\n    // },\n    {\n      name: 'Conflux eSpace',\n      chainId: '0x406',\n    },\n    {\n      name: 'Huobi ECO',\n      chainId: '0x80',\n    },\n    {\n      name: 'Aurora',\n      chainId: '0x4e454152',\n    },\n    {\n      name: 'Polygon',\n      chainId: '0x89',\n    },\n    {\n      name: 'Polygon akEVM',\n      chainId: '0x44d',\n    },\n    {\n      name: 'Cronos',\n      chainId: '0x19',\n    },\n    {\n      name: 'Fantom',\n      chainId: '0xfa',\n    },\n    {\n      name: 'Boba',\n      chainId: '0x120',\n    },\n    {\n      name: 'zkSync',\n      chainId: '0x144',\n    },\n    {\n      name: 'Arbitrum',\n      chainId: '0xa4b1',\n    },\n    {\n      name: 'Celo',\n      chainId: '0xa4ec',\n    },\n    {\n      name: 'Avalanche',\n      chainId: '0xa86a',\n    },\n    // {\n    //   name: 'DIS',\n    //   chainId: '0x64',\n    // },\n    {\n      name: 'BNB Smart Chain',\n      chainId: '0x38',\n    },\n    {\n      name: 'Ethereum Classic',\n      chainId: '0x3d',\n    },\n    // {\n    //   name: 'OKX Chain',\n    //   chainId: '0x64',\n    // },\n    {\n      name: 'Mixin Virtual Machine',\n      chainId: '0x120c7',\n    },\n    {\n      name: 'Linea',\n      chainId: '0xe708',\n    },\n    {\n      name: 'Base',\n      chainId: '0x2105',\n    },\n    {\n      name: 'Mantle',\n      chainId: '0x1388',\n    },\n    {\n      name: 'IoTeX',\n      chainId: '0x1251',\n    },\n    // {\n    //   name: 'Mantra',\n    //   chainId: '0x64',\n    // },\n    {\n      name: 'Blast',\n      chainId: '0xee',\n    },\n    {\n      name: 'OctaSpace',\n      chainId: '0xc3501',\n    },\n  ].map((item) => {\n    return {\n      'id': `switchEthereumChain_${item.name}`,\n      'name': `${item.name}`,\n      'description': `切换 ${item.name} Chain`,\n      'value': JSON.stringify({\n        'chainId': item.chainId,\n      }),\n    };\n  }),\n  watchAssets: (\n    tokens: {\n      value: string;\n      label: string;\n      extra: {\n        type: string;\n        options: {\n          address: string;\n          symbol: string;\n          decimals: number;\n          image: string;\n        };\n      };\n    }[],\n  ) => {\n    return tokens.map((token) => {\n      const { value, label, extra } = token;\n      const { address, symbol, decimals, image } = extra.options;\n\n      return {\n        id: `watchAsset-${value}`,\n        name: label,\n        value: JSON.stringify(\n          {\n            type: 'ERC20',\n            options: {\n              address: address,\n              symbol: symbol,\n              decimals: decimals,\n              image: image,\n            },\n          },\n          null,\n          2,\n        ),\n        description: '代币配置（可编辑）',\n      };\n    });\n  },\n  watchAsset: [\n    {\n      'id': 'watchAsset erc20 foo',\n      'name': '主网 FOO ERC20',\n      'description': '测试添加主网 FOO ERC20 资产',\n      'value': JSON.stringify({\n        type: 'ERC20',\n        options: {\n          address: '0xa9b4d559a98ff47c83b74522b7986146538cd4df',\n          symbol: 'FOO',\n          decimals: 18,\n          image: 'https://foo.io/token-image.svg',\n        },\n      }),\n    },\n    {\n      'id': 'watchAsset ERC721 Lido',\n      'name': '主网 Lido ERC721',\n      'description': '测试主网 Lido: stETH Withdrawal NFT ERC721 资产',\n      'value': JSON.stringify({\n        'type': 'ERC721',\n        'options': {\n          'address': '0x889edc2edab5f40e902b864ad4d7ade8e412f9b1',\n          'tokenId': '50632',\n        },\n      }),\n    },\n    {\n      'id': 'watchAsset ERC1155 Lido',\n      'name': '主网 ERC1155',\n      'description': '测试添加主网 ERC1155 资产',\n      'value': JSON.stringify({\n        'type': 'ERC1155',\n        'options': {\n          'address': '0xabcdef0123456789abcdef0123456789abcdef01',\n          'tokenId': '1337',\n        },\n      }),\n    },\n    {\n      'id': 'watchAsset erc20 Polygon WETH',\n      'name': 'Polygon WETH ERC20',\n      'description': '测试添加 Polygon WETH 资产',\n      'value': JSON.stringify({\n        type: 'ERC20',\n        options: {\n          address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n          symbol: 'WETH',\n          decimals: 18,\n          image: 'https://polygonscan.com/token/images/wETH_32.png',\n        },\n      }),\n    },\n    {\n      'id': 'watchAsset ERC721 Polygon unstoppable',\n      'name': 'Polygon Unstoppable ERC721',\n      'description': '测试 Polygon Unstoppable ERC721 资产',\n      'value': JSON.stringify({\n        'type': 'ERC721',\n        'options': {\n          'address': '0xa9a6a3626993d487d2dbda3173cf58ca1a9d9e9f',\n          'tokenId':\n            '17893201811739899534133387548294644234750447072813328765681112569786468116764',\n        },\n      }),\n    },\n    {\n      'id': 'watchAsset ERC1155 Polygon Lido',\n      'name': 'Polygon ERC1155',\n      'description': '测试添加 Polygon ERC1155 资产',\n      'value': JSON.stringify({\n        'type': 'ERC1155',\n        'options': {\n          'address': '0xabcdef0123456789abcdef0123456789abcdef01',\n          'tokenId': '1337',\n        },\n      }),\n    },\n  ],\n  ethSign: [\n    {\n      'id': 'eth_sign_1',\n      'name': 'eth_sign 1',\n      'description': 'eth_sign 有安全风险，硬件不支持',\n      'value': '0x879a053d4800c6354e76c7985a865d2922c82fb5b3f4577b2fe08b998954f2e0',\n    },\n  ],\n  ethDecrypt: [\n    {\n      'id': 'ethDecrypt',\n      'name': 'ethDecrypt 1',\n      'description': 'ethDecrypt',\n      'value': '0x01',\n    },\n  ],\n  personalSign: [\n    {\n      'id': 'eth_sign',\n      'name': 'eth_sign',\n      'description': 'personalSign',\n      'value': '0x01',\n    },\n  ],\n  personalEcRecover: [\n    {\n      'id': 'eth_sign',\n      'name': 'eth_sign',\n      'description': 'personalSign',\n      'value': JSON.stringify({\n        'message': '0x01',\n        'signature': '把 personal_sign 的执行结果放在这里',\n      }),\n    },\n  ],\n  signTypedData: [\n    {\n      'id': 'signTypedData',\n      'name': 'signTypedData',\n      'description': 'signTypedData',\n      'value': JSON.stringify([\n        {\n          type: 'string',\n          name: 'Message',\n          value: 'Hi, Alice!',\n        },\n        {\n          type: 'uint32',\n          name: 'A number',\n          value: '1337',\n        },\n      ]),\n    },\n  ],\n  signTypedDataV3: (chainId: number) => [\n    {\n      'id': 'signTypedDataV3',\n      'name': 'signTypedDataV3',\n      'description': 'signTypedDataV3',\n      'value': JSON.stringify({\n        types: {\n          EIP712Domain: [\n            { name: 'name', type: 'string' },\n            { name: 'version', type: 'string' },\n            { name: 'chainId', type: 'uint256' },\n            { name: 'verifyingContract', type: 'address' },\n          ],\n          Person: [\n            { name: 'name', type: 'string' },\n            { name: 'wallet', type: 'address' },\n          ],\n          Mail: [\n            { name: 'from', type: 'Person' },\n            { name: 'to', type: 'Person' },\n            { name: 'contents', type: 'string' },\n          ],\n        },\n        primaryType: 'Mail',\n        domain: {\n          name: 'Ether Mail',\n          version: '1',\n          chainId: chainId,\n          verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n        },\n        message: {\n          from: {\n            name: 'Cow',\n            wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n          },\n          to: {\n            name: 'Bob',\n            wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n          },\n          contents: 'Hello, Bob!',\n        },\n      }),\n    },\n  ],\n  signTypedDataV4: (chainId: number) => signTypedDataV4Cases({ chainId }),\n  sendTransaction: (from: string, to: string) => {\n    return [\n      {\n        'id': 'sendTransaction',\n        'name': 'SendTransaction',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          from: from,\n          to: to,\n          value: '0x0',\n          gasLimit: '0x5028',\n          gasPrice: '0xbebc200',\n        }),\n      },\n      {\n        'id': 'sendTransaction-nogas',\n        'name': 'SendTransaction No Gas',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          from: from,\n          to: to,\n          value: '0x0',\n        }),\n      },\n      {\n        'id': 'sendTransaction-eip1559',\n        'name': 'SendTransaction EIP1559',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          from: from,\n          to: to,\n          value: '0x0',\n          gasLimit: '0x5028',\n          maxFeePerGas: '0x2540be400',\n          maxPriorityFeePerGas: '0x3b9aca00',\n        }),\n      },\n      {\n        'id': 'sendTransaction-eip1559-nogas',\n        'name': 'SendTransaction EIP1559 No Gas',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          from: from,\n          to: to,\n          value: '0x0',\n          maxFeePerGas: '0x2540be400',\n          maxPriorityFeePerGas: '0x3b9aca00',\n        }),\n      },\n      {\n        'id': 'sendTransaction-eip1559-bigdata',\n        'name': 'SendTransaction EIP1559 BigData',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          from: from,\n          to: to,\n          value: '0x0',\n          'data': `0x${'01'.repeat(3150)}`,\n          gasLimit: '0x5028',\n          maxFeePerGas: '0x2540be400',\n          maxPriorityFeePerGas: '0x3b9aca00',\n        }),\n      },\n      {\n        'id': 'unlimited-approved-eth-mainnet-usdc-uniswap',\n        'name': '无限授权 Uniswap Ploygon USDC（模仿 Uni 格式）',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          from: from,\n          to: '0x3c499c542cef5e3811e1192ce70d8cc03d5c3359',\n          data: '0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n          gas: '0xdb2b',\n        }),\n      },\n      {\n        'id': 'unlimited-approved-eth-mainnet-usdc',\n        'name': '无限授权 Uniswap Ploygon USDC',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          from: from,\n          value: '0x0',\n          to: '0x3c499c542cef5e3811e1192ce70d8cc03d5c3359',\n          data: '0x095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n          gas: '0xdb2b',\n          maxFeePerGas: '0x2540be400',\n          maxPriorityFeePerGas: '0x3b9aca00',\n        }),\n      },\n      {\n        'id': 'mack-uniswap-send-polygon-usdc',\n        'name': 'UniSwap 发送 Polygon USDC（模仿 Uni 格式）',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          'chainId': '0x89',\n          'gas': '0x1195e',\n          'maxFeePerGas': '0x74a35dd4c',\n          'maxPriorityFeePerGas': '0x749b15c42',\n          'from': from,\n          'to': '0x3c499c542cef5e3811e1192ce70d8cc03d5c3359',\n          'data':\n            '0xa9059cbb000000000000000000000000a9b4d559a98ff47c83b74522b7986146538cd4df0000000000000000000000000000000000000000000000000000000000002710',\n        }),\n      },\n      {\n        'id': 'mack-safe-tx-multi-sig-call-eth-transfer',\n        'name': '(ETH Mainnet) SafeTxMultiSig Call ETH Transfer',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          'gas': '0x1195e',\n          'maxFeePerGas': '0x74a35dd4c',\n          'maxPriorityFeePerGas': '0x749b15c42',\n          'from': from,\n          'to': '0x3c499c542cef5e3811e1192ce70d8cc03d5c3359',\n          'data':\n            '0x6a761202000000000000000000000000a03400e098f4421b34a3a44a1b4e57141951768700000000000000000000000000000000000000000000000c77e4256863dc354a883d615927d15a4fdedf1f4783c16475c301196bd0f5b37ec67b8a6e77b0b3f45385ff9570f1fa47e175d216c73361b9b10e4397ef26eed5b5e74baefb1e51b000000000000000000000000b865d3112b3cf67f09027d209c0b866bc6312a0300000000000000000000000000000000000000000000000000000000000000000118c47f23469a7c04225d080a61751d890f8ee86cc5ce9e9d949ac2c19241483d4466cd93b57219ec5512fbca2ab20d7506fe063eb69e89bad3ceadfba09267921b0000000000000000000000000000000000000000000000000000000000',\n        }),\n      },\n      {\n        'id': 'mack-safe-tx-multi-sig-call-erc20-transfer',\n        'name': '(ETH Mainnet) SafeTxMultiSig Call ERC20 Transfer',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          'gas': '0x1195e',\n          'maxFeePerGas': '0x74a35dd4c',\n          'maxPriorityFeePerGas': '0x749b15c42',\n          'from': from,\n          'to': '0x3c499c542cef5e3811e1192ce70d8cc03d5c3359',\n          'data':\n            '0x6a7612020000000000000000000000007d8146cf21e8d7cbe46054e01588207bc00000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000a03400e098f4421b34a3a44a1b4e57141951768700000000000000000000000000000000000000001ade58da61d63473dbe000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c35509e65f619543eea813074ef19e371574026659ad873935a29a5ae654bbe5605f681efb1e005449ada3c3ca44e724eccd3b348fa2350dc504cc771cf0871f491b560f1edee60648a925eea11cb15c0d5ac4d97ec520afd813411b05b98784f4c975bbd5afb80e322f89fea21ca56b3677542b33e769e67f5feb8d7977ba36a0e21b5f31c87d5a95f1a18a201ee40bcbc413cc4bf68b8626a36ac54e7251c9b7d08a22510bb8b1941549e0e3a2c7fd2d2dbcc05ccf7fd720c6234fdd368f0cce53621c0000000000000000000000000000000000000000000000000000000000',\n        }),\n      },\n      {\n        'id': 'mack-safe-tx-multi-sig-approve',\n        'name': '(ETH Mainnet) SafeTxMultiSig Call ERC20 Approve',\n        'description': 'sendTransaction',\n        'value': JSON.stringify({\n          'gas': '0x1195e',\n          'maxFeePerGas': '0x74a35dd4c',\n          'maxPriorityFeePerGas': '0x749b15c42',\n          'from': from,\n          'to': '0x3c499c542cef5e3811e1192ce70d8cc03d5c3359',\n          'data':\n            '0xd4d9bdcd7f60722d75e432c43705f4bfa2bf3d8bd792706a6a4120a722d18b32f3b036b3',\n        }),\n      },\n    ];\n  },\n};\n","export function parseChainId(chainId: string | undefined): number {\n  return parseInt(chainId?.startsWith('0x') ? chainId ?? '0' : `0x${chainId}`, 16);\n}\n\nexport function isEqChainId(chainId: string | undefined, chainIdToCompare: string): boolean {\n  const parsedChainId = parseChainId(chainId);\n  const parsedChainIdToCompare = parseChainId(chainIdToCompare);\n\n  return parsedChainId === parsedChainIdToCompare;\n}\n","// Contracts for Malicious Transactions in different chains\nexport const NETWORKS_BY_CHAIN_ID = {\n  137: 'polygon',\n  10: 'optimism',\n  56: 'bsc',\n  43114: 'avalanche',\n  42161: 'arbitrum',\n  11155111: 'sepolia',\n  8453: 'base',\n  204: 'opBnb',\n  1: 'mainnet',\n};\n\nexport const checkSupportNetwork = (chainId: number) => {\n  return NETWORKS_BY_CHAIN_ID[chainId as keyof typeof NETWORKS_BY_CHAIN_ID];\n};\n\nexport const getSupportNetworkNames = () => {\n  return Object.values(NETWORKS_BY_CHAIN_ID);\n};\n\nexport const ERC20_USDC_CONTRACTS = {\n  polygon: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\n  optimism: '0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85',\n  bsc: '0x8965349fb649A33a30cbFDa057D8eC2C48AbE2A2',\n  avalanche: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n  arbitrum: '0xaf88d065e77c8cC2239327C5EDb3A432268e5831',\n  sepolia: '0x27A56df30bC838BCA36141E517e7b5376dea68eE',\n  base: '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913',\n  opBnb: '0x9e5aac1ba1a2e6aed6b32689dfcf62a509ca96f3',\n  mainnet: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n};\n\nexport const ERC721_SAMPLE_CONTRACTS = {\n  polygon: '0x9e8ea82e76262e957d4cc24e04857a34b0d8f062',\n  optimism: '0xaf18644083151cf57f914cccc23c42a1892c218e',\n  bsc: '0xebfbfd7c41b123500fb16b71c43b400c12b08be0',\n  avalanche: '0x880f7e04D722e305126F7E1efd3434A7d5b1465c',\n  arbitrum: '0x8659a4876369b94515a86048fe7f99daba6b9a7d',\n  sepolia: '0xbba60aa8144579e07c6db64121b0f608ab6f0c89',\n  base: '0x90997fc967e75b7e69f899133aab31d197beb802',\n  opBnb: '0x61d7e121185b1d7902a3da7f3c8ac9faaee8863b',\n  mainnet: '0xbc4ca0eda7647a8ab7c2061c2e118a18a936f13d',\n};\n\nexport const WRAPPED_NATIVE_TOKEN = {\n  mainnet: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // WETH\n  optimism: '0x4200000000000000000000000000000000000006', // WETH\n  bsc: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c', // WBNB\n  polygon: '0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270', // WMATIC\n  base: '0x4200000000000000000000000000000000000006', // WETH\n  sepolia: '0x7b79995e5f793A07Bc00c21412e50Ecae098E7f9', // WETH\n  arbitrum: '0x82af49447d8a07e3bd95bd0d56f35241523fbab1', // WETH\n  avalanche: '0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7', // WAVAX\n  opBnb: '0x4200000000000000000000000000000000000006', // WBNB\n};\n\nexport const MALICIOUS_CONTRACT_ADDRESSES = {\n  mainnet: '0x000062Accd1a9d62eF428eC86cA3dD4f45120000',\n  default: '0x00008F1149168C1D2fa1eBa1Ad3e9cD644510000',\n};\n\nexport const MALICIOUS_ADDRESS = '0x5FbDB2315678afecb367f032d93F642f64180aa3';\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { parseChainId } from '../../utils';\nimport {\n  ERC20_USDC_CONTRACTS,\n  ERC721_SAMPLE_CONTRACTS,\n  MALICIOUS_ADDRESS,\n  MALICIOUS_CONTRACT_ADDRESSES,\n  NETWORKS_BY_CHAIN_ID,\n} from '../contract/SampleContracts';\n\nexport default {\n  sendTransaction: (from: string, to: string) => {\n    return [\n      {\n        'id': 'sendTransaction-malicious-raw-eth-transfer',\n        'name': '恶意行为：风险 Native Token 转账',\n        'description': '转账给 Blockaid 标记的高风险地址',\n        'value': JSON.stringify({\n          from,\n          to: MALICIOUS_ADDRESS,\n          value: '0x9184e72a000',\n        }),\n      },\n      {\n        'id': 'sendTransaction-malicious-raw-eth-transfer-odd-hex-data',\n        'name': '绕过安全检测：风险 Native Token 转账（odd hex data 绕过）',\n        'description':\n          '使用 odd hex data 绕过安全检测，因为 to 地址是 EOA 而不是合约地址，他有存在一个异常的 data 字段，让这笔交易看起来既不是转账也不是合约调用。从而绕过安全检测',\n        'value': JSON.stringify({\n          from,\n          to: MALICIOUS_ADDRESS,\n          value: '0x9184e72a000',\n          data: '0x1',\n        }),\n      },\n      {\n        'id': 'sendTransaction-malicious-raw-eth-transfer-without-0x-prefix',\n        'name': '绕过安全检测：风险 Native Token 转账（删除 Hex 0x 前缀绕过）',\n        'description':\n          '使用删除 Hex 的 0x 前缀绕过安全的检测，标准的以太坊十六进制值应该包含 0x 前缀，这里删除 0x 前缀，导致链上能正常执行，从而绕过安全检测',\n        'value': JSON.stringify({\n          from,\n          to: MALICIOUS_ADDRESS,\n          value: 'ffffffffffffff',\n        }),\n      },\n    ];\n  },\n  sendTransactionERC20: (from: string, chainId: string) => {\n    // @ts-expect-error\n    const networkName = NETWORKS_BY_CHAIN_ID[\n      parseChainId(chainId)\n    ] as keyof typeof ERC20_USDC_CONTRACTS;\n\n    const erc20Contract = ERC20_USDC_CONTRACTS[networkName];\n\n    const contractAddress =\n      // @ts-expect-error\n      MALICIOUS_CONTRACT_ADDRESSES[networkName] || MALICIOUS_CONTRACT_ADDRESSES.default;\n\n    const erc721Contract = ERC721_SAMPLE_CONTRACTS[networkName];\n\n    return [\n      {\n        'id': 'sendTransaction-malicious-erc20-transfer',\n        'name': '恶意行为：风险 ERC20 转账',\n        'description': '转 ERC20 Token 给 Blockaid 标记的高风险地址',\n        'value': JSON.stringify({\n          from: from,\n          to: erc20Contract,\n          data: '0xa9059cbb0000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa30000000000000000000000000000000000000000000000000000000000000064',\n        }),\n      },\n      {\n        'id': 'sendTransaction-malicious-erc20-approve',\n        'name': '恶意行为：风险 ERC20 授权',\n        'description': '将 ERC20 Token 授权给 Blockaid 标记的高风险地址',\n        'value': JSON.stringify({\n          from: from,\n          to: erc20Contract,\n          data: '0x095ea7b3000000000000000000000000e50a2dbc466d01a34c3e8b7e8e45fce4f7da39e6000000000000000000000000000000000000000000000000ffffffffffffffff',\n        }),\n      },\n      {\n        'id': 'sendTransaction-malicious-contract-call',\n        'name': '恶意行为：风险合约调用',\n        'description': '调用 Blockaid 标记的恶意合约',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0xef5cfb8c0000000000000000000000000b3e87a076ac4b0d1975f0f232444af6deb96c59',\n          value: '0x0',\n        }),\n      },\n      {\n        'id': 'sendTransaction-malicious-erc721-approve',\n        'name': '恶意行为：风险 ERC721 授权',\n        'description': '将 ERC721 Token 授权给 Blockaid 标记的高风险地址',\n        'value': JSON.stringify({\n          from,\n          to: erc721Contract,\n          data: '0xa22cb465000000000000000000000000b85492afc686d5ca405e3cd4f50b05d358c75ede0000000000000000000000000000000000000000000000000000000000000001',\n        }),\n      },\n      {\n        'id': 'sendTransaction-malicious-erc20-approve-odd-hex-data',\n        'name': '绕过安全检测：风险 ERC20 授权（odd hex data 绕过）',\n        'description':\n          '使用 odd hex data 绕过安全的检测，正常的 ERC20 approve 函数签名正常是 0x095ea7b3... ，这里去掉开头的 0，使用 0x95ea7b3，导致链上能正常执行，从而绕过安全检测',\n        'value': JSON.stringify({\n          from,\n          to: erc20Contract,\n          value: '0x0',\n          // odd approve hex data - expected 0x095ea7b3...\n          data: '0x95ea7b3000000000000000000000000e50a2dbc466d01a34c3e8b7e8e45fce4f7da39e6000000000000000000000000000000000000000000000000ffffffffffffffff',\n        }),\n      },\n    ];\n  },\n  signTypedData: (from: string, chainId: number) => {\n    const chainIdPadded = `0x${chainId.toString(16).padStart(77, '0')}`;\n    return [\n      {\n        'id': 'signTypedData-malicious-permit',\n        'name': '恶意行为：风险 Permit signTypedDataV4 签名',\n        'description': 'Permit 授权给 Blockaid 标记的高风险地址；此类交易需要检查 spender 是否是可信地址',\n        'value': `{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Permit\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}]},\"primaryType\":\"Permit\",\"domain\":{\"name\":\"USD Coin\",\"verifyingContract\":\"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\"chainId\":${chainId},\"version\":\"2\"},\"message\":{\"owner\":\"${from}\",\"spender\":\"0x1661F1B207629e4F385DA89cFF535C8E5Eb23Ee3\",\"value\":\"1033366316628\",\"nonce\":1,\"deadline\":1678709555}}`,\n      },\n      {\n        'id': 'signTypedData-malicious-trade-order',\n        'name': '恶意行为：风险 Trade Order 签名',\n        'description': 'Trade Order 挂单，taker 为 Blockaid 标记的高风险地址； 此类交易对 taker 交易对手方进行风险评估, 检查 direction 方向 - 0 表示出售NFT，maker 是 NFT 持有者，',\n        'value': `{\"types\":{\"ERC721Order\":[{\"type\":\"uint8\",\"name\":\"direction\"},{\"type\":\"address\",\"name\":\"maker\"},{\"type\":\"address\",\"name\":\"taker\"},{\"type\":\"uint256\",\"name\":\"expiry\"},{\"type\":\"uint256\",\"name\":\"nonce\"},{\"type\":\"address\",\"name\":\"erc20Token\"},{\"type\":\"uint256\",\"name\":\"erc20TokenAmount\"},{\"type\":\"Fee[]\",\"name\":\"fees\"},{\"type\":\"address\",\"name\":\"erc721Token\"},{\"type\":\"uint256\",\"name\":\"erc721TokenId\"},{\"type\":\"Property[]\",\"name\":\"erc721TokenProperties\"}],\"Fee\":[{\"type\":\"address\",\"name\":\"recipient\"},{\"type\":\"uint256\",\"name\":\"amount\"},{\"type\":\"bytes\",\"name\":\"feeData\"}],\"Property\":[{\"type\":\"address\",\"name\":\"propertyValidator\"},{\"type\":\"bytes\",\"name\":\"propertyData\"}],\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}]},\"domain\":{\"name\":\"ZeroEx\",\"version\":\"1.0.0\",\"chainId\":${chainId},\"verifyingContract\":\"0xdef1c0ded9bec7f1a1670819833240f027b25eff\"},\"primaryType\":\"ERC721Order\",\"message\":{\"direction\":\"0\",\"maker\":\"${from}\",\"taker\":\"${MALICIOUS_ADDRESS}\",\"expiry\":\"2524604400\",\"nonce\":\"100131415900000000000000000000000000000083840314483690155566137712510085002484\",\"erc20Token\":\"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\"erc20TokenAmount\":\"42000000000000\",\"fees\":[],\"erc721Token\":\"0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e\",\"erc721TokenId\":\"2516\",\"erc721TokenProperties\":[]}}`,\n      },\n      {\n        'id': 'signTypedData-malicious-seaport-order',\n        'name': '恶意行为：风险 OpenSea Seaport 交易',\n        'description':\n          '模拟正常的 OpenSea Seaport 交易，实际上这个签名会授权将用户的多个 NFT 转移给攻击者地址，（Blockaid）; 此类交易需要检查 consideration 是否包含合理的对价,r ecipient是否是可信地址',\n        'value': `{\"types\":{\"OrderComponents\":[{\"name\":\"offerer\",\"type\":\"address\"},{\"name\":\"zone\",\"type\":\"address\"},{\"name\":\"offer\",\"type\":\"OfferItem[]\"},{\"name\":\"consideration\",\"type\":\"ConsiderationItem[]\"},{\"name\":\"orderType\",\"type\":\"uint8\"},{\"name\":\"startTime\",\"type\":\"uint256\"},{\"name\":\"endTime\",\"type\":\"uint256\"},{\"name\":\"zoneHash\",\"type\":\"bytes32\"},{\"name\":\"salt\",\"type\":\"uint256\"},{\"name\":\"conduitKey\",\"type\":\"bytes32\"},{\"name\":\"counter\",\"type\":\"uint256\"}],\"OfferItem\":[{\"name\":\"itemType\",\"type\":\"uint8\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"name\":\"startAmount\",\"type\":\"uint256\"},{\"name\":\"endAmount\",\"type\":\"uint256\"}],\"ConsiderationItem\":[{\"name\":\"itemType\",\"type\":\"uint8\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"identifierOrCriteria\",\"type\":\"uint256\"},{\"name\":\"startAmount\",\"type\":\"uint256\"},{\"name\":\"endAmount\",\"type\":\"uint256\"},{\"name\":\"recipient\",\"type\":\"address\"}],\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}]},\"domain\":{\"name\":\"Seaport\",\"version\":\"1.1\",\"chainId\":${chainId},\"verifyingContract\":\"0x00000000006c3852cbef3e08e8df289169ede581\"},\"primaryType\":\"OrderComponents\",\"message\":{\"offerer\":\"0x5a6f5477bdeb7801ba137a9f0dc39c0599bac994\",\"zone\":\"0x004c00500000ad104d7dbd00e3ae0a5c00560c00\",\"offer\":[{\"itemType\":\"2\",\"token\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"identifierOrCriteria\":\"26464\",\"startAmount\":\"1\",\"endAmount\":\"1\"},{\"itemType\":\"2\",\"token\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"identifierOrCriteria\":\"7779\",\"startAmount\":\"1\",\"endAmount\":\"1\"},{\"itemType\":\"2\",\"token\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"identifierOrCriteria\":\"4770\",\"startAmount\":\"1\",\"endAmount\":\"1\"},{\"itemType\":\"2\",\"token\":\"0xba30e5f9bb24caa003e9f2f0497ad287fdf95623\",\"identifierOrCriteria\":\"9594\",\"startAmount\":\"1\",\"endAmount\":\"1\"},{\"itemType\":\"2\",\"token\":\"0xba30e5f9bb24caa003e9f2f0497ad287fdf95623\",\"identifierOrCriteria\":\"2118\",\"startAmount\":\"1\",\"endAmount\":\"1\"},{\"itemType\":\"2\",\"token\":\"0xba30e5f9bb24caa003e9f2f0497ad287fdf95623\",\"identifierOrCriteria\":\"1753\",\"startAmount\":\"1\",\"endAmount\":\"1\"}],\"consideration\":[{\"itemType\":\"2\",\"token\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"identifierOrCriteria\":\"26464\",\"startAmount\":\"1\",\"endAmount\":\"1\",\"recipient\":\"0xdfdc0b1cf8e9950d6a860af6501c4fecf7825cc1\"},{\"itemType\":\"2\",\"token\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"identifierOrCriteria\":\"7779\",\"startAmount\":\"1\",\"endAmount\":\"1\",\"recipient\":\"0xdfdc0b1cf8e9950d6a860af6501c4fecf7825cc1\"},{\"itemType\":\"2\",\"token\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"identifierOrCriteria\":\"4770\",\"startAmount\":\"1\",\"endAmount\":\"1\",\"recipient\":\"0xdfdc0b1cf8e9950d6a860af6501c4fecf7825cc1\"},{\"itemType\":\"2\",\"token\":\"0xba30e5f9bb24caa003e9f2f0497ad287fdf95623\",\"identifierOrCriteria\":\"9594\",\"startAmount\":\"1\",\"endAmount\":\"1\",\"recipient\":\"0xdfdc0b1cf8e9950d6a860af6501c4fecf7825cc1\"},{\"itemType\":\"2\",\"token\":\"0xba30e5f9bb24caa003e9f2f0497ad287fdf95623\",\"identifierOrCriteria\":\"2118\",\"startAmount\":\"1\",\"endAmount\":\"1\",\"recipient\":\"0xdfdc0b1cf8e9950d6a860af6501c4fecf7825cc1\"},{\"itemType\":\"2\",\"token\":\"0xba30e5f9bb24caa003e9f2f0497ad287fdf95623\",\"identifierOrCriteria\":\"1753\",\"startAmount\":\"1\",\"endAmount\":\"1\",\"recipient\":\"0xdfdc0b1cf8e9950d6a860af6501c4fecf7825cc1\"}],\"orderType\":\"2\",\"startTime\":\"1681810415\",\"endTime\":\"1681983215\",\"zoneHash\":\"0x0000000000000000000000000000000000000000000000000000000000000000\",\"salt\":\"1550213294656772168494388599483486699884316127427085531712538817979596\",\"conduitKey\":\"0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000\",\"counter\":\"0\"}}`,\n      },\n      {\n        'id': 'signTypedData-malicious-permit-padding-chainId',\n        'name': '绕过安全检测：风险 Permit 签名（chainId 前面加很多 0 绕过检测）',\n        'description':\n          '在 chainId 前面加很多 0 绕过安全的检测，标准的 chainId 应该是简单的数值，这里在 chainId 前面加很多 0，导致链上能正常执行，从而绕过安全检测',\n        'value': `{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Permit\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}]},\"primaryType\":\"Permit\",\"domain\":{\"name\":\"USD Coin\",\"verifyingContract\":\"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\"chainId\":\"${chainIdPadded}\",\"version\":\"2\"},\"message\":{\"owner\":\"${from}\",\"spender\":\"0x1661F1B207629e4F385DA89cFF535C8E5Eb23Ee3\",\"value\":\"1033366316628\",\"nonce\":1,\"deadline\":1678709555}}`,\n      },\n      {\n        'id': 'signTypedData-malicious-permit-int-address',\n        'name': '绕过安全检测：风险 Permit 签名（int address）',\n        'description':\n          '使用 int address 绕过安全的检测，通常以太坊地址是十六进制字符串表示，这里使用十进制类型来表示地址，导致链上能正常执行，从而绕过安全检测',\n        'value': `{\"types\":{\"EIP712Domain\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"chainId\",\"type\":\"uint256\"},{\"name\":\"verifyingContract\",\"type\":\"address\"}],\"Permit\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"deadline\",\"type\":\"uint256\"}]},\"primaryType\":\"Permit\",\"domain\":{\"name\":\"USD Coin\",\"verifyingContract\":\"917551056842671309452305380979543736893630245704\",\"chainId\":${chainId},\"version\":\"2\"},\"message\":{\"owner\":\"${from}\",\"spender\":\"0x1661F1B207629e4F385DA89cFF535C8E5Eb23Ee3\",\"value\":\"1033366316628\",\"nonce\":1,\"deadline\":1678709555}}`,\n      },\n    ];\n  },\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nconst EIP712Domain = [\n  { name: 'name', type: 'string' },\n  { name: 'version', type: 'string' },\n  { name: 'chainId', type: 'uint256' },\n  { name: 'verifyingContract', type: 'address' },\n];\n\nexport default {\n  sendTransaction: (from: string, to: string) => {\n    return [\n      {\n        'id': 'sendTransaction-malformed-invalid-value',\n        'name': '普通转账测试：错误的 value 类型',\n        'description': '测试普通转账 错误的 value 类型',\n        'value': JSON.stringify({\n          from,\n          to,\n          value: 'invalid', // invalid value - expected int/hex value\n        }),\n      },\n      {\n        'id': 'sendTransaction-malformed-invalid-transaction-type',\n        'name': '普通转账测试：错误的 transactionType 类型',\n        'description': '测试普通转账 错误的 transactionType 类型',\n        'value': JSON.stringify({\n          from,\n          to,\n          value: '0x0',\n          type: '0x5', // invalid tx type - expected 0x1 or 0x2\n        }),\n      },\n      {\n        'id': 'sendTransaction-malformed-invalid-recipient',\n        'name': '普通转账测试：错误的 recipient 类型',\n        'description': '测试普通转账 错误的 recipient 类型',\n        'value': JSON.stringify({\n          from,\n          to: 'invalid', // invalid recipient - expected int/hex address\n          value: '0x0',\n        }),\n      },\n      {\n        'id': 'sendTransaction-malformed-invalid-gasLimit',\n        'name': '1559 转账测试：错误的 gasLimit 类型',\n        'description': '测试 1559 转账 错误的 gasLimit 类型',\n        'value': JSON.stringify({\n          from,\n          to,\n          value: '0x0',\n          gasLimit: 'invalid', // invalid gasLimit - expected int/hex value\n          maxFeePerGas: '0x2540be400',\n          maxPriorityFeePerGas: '0x3b9aca00',\n        }),\n      },{\n        'id': 'sendTransaction-malformed-invalid-maxFeePerGas',\n        'name': '1559 转账测试：错误的 maxFeePerGas 类型',\n        'description': '测试 1559 转账 错误的 maxFeePerGas 类型',\n        'value': JSON.stringify({\n          from,\n          to,\n          value: '0x0',\n          gasLimit: '0x5028',\n            maxFeePerGas: 'invalid', // invalid maxFeePerGas - expected int/hex value\n          maxPriorityFeePerGas: '0x3b9aca00',\n        }),\n      },\n    ];\n  },\n  signTypedData: (from: string, chainId: number) => {\n    return [\n      {\n        'id': 'signTypedData-malformed-invalid-domain',\n        'name': 'Eip712 签名 错误的参数类型',\n        'description': '测试 signTypedDataV4 签名 错误的参数类型',\n        'value': JSON.stringify({\n          primaryType: 'OrderComponents',\n          domain: {\n            chainId: chainId,\n            name: 'Seaport',\n            version: '1.5',\n            verifyingContract: '0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC',\n          },\n          types: {\n            EIP712Domain: [\n              { name: 'name', type: 'string' },\n              { name: 'version', type: 'string' },\n              { name: 'chainId', type: 'uint256' },\n              { name: 'verifyingContract', type: 'address' },\n            ],\n            OrderComponents: [{ name: 'consideration', type: 'ConsiderationItem[+' }],\n          },\n          message: {\n            consideration: [\n              {\n                itemType: '0',\n                token: '0x0000000000000000000000000000000000000000',\n                identifierOrCriteria: '0',\n                startAmount: '1950000000000000',\n                endAmount: '1950000000000000',\n                recipient: '0x0000000000000000000000000000000000000000',\n              },\n            ],\n          },\n        }),\n      },\n      {\n        'id': 'signTypedData-malformed-empty-domain',\n        'name': 'Eip712 签名 空 domain',\n        'description': '测试 signTypedDataV4 签名 空 domain',\n        'value': JSON.stringify({\n          domain: {},\n          message: {\n            contents: 'Hello, Bob!',\n            from: {\n              name: 'Cow',\n              wallets: [\n                '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n                '0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF',\n              ],\n            },\n            to: [\n              {\n                name: 'Bob',\n                wallets: [\n                  '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n                  '0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57',\n                  '0xB0B0b0b0b0b0B000000000000000000000000000',\n                ],\n              },\n            ],\n            attachment: '0x',\n          },\n          primaryType: 'Mail',\n          types: {\n            EIP712Domain,\n            Group: [\n              { name: 'name', type: 'string' },\n              { name: 'members', type: 'Person[]' },\n            ],\n            Mail: [\n              { name: 'from', type: 'Person' },\n              { name: 'to', type: 'Person[]' },\n              { name: 'contents', type: 'string' },\n              { name: 'attachment', type: 'bytes' },\n            ],\n            Person: [\n              { name: 'name', type: 'string' },\n              { name: 'wallets', type: 'address[]' },\n            ],\n          },\n        }),\n      },\n      {\n        'id': 'signTypedData-malformed-extra-data-not-typed',\n        'name': 'Eip712 签名 没有额外数据',\n        'description': '测试 signTypedDataV4 签名 没有额外数据',\n        'value': JSON.stringify({\n          domain: {\n            chainId: chainId,\n            name: 'Seaport',\n            version: '1.5',\n            verifyingContract: '0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC',\n          },\n          message: {\n            name: 'Hello, Bob!',\n            extraData: 'This data is not typed!',\n          },\n          primaryType: 'Wallet',\n          types: {\n            EIP712Domain,\n            Wallet: [{ name: 'name', type: 'string' }],\n          },\n        }),\n      },\n      {\n        'id': 'signTypedData-malformed-invalid-primary-type',\n        'name': 'Eip712 签名 无效的 primaryType',\n        'description': '测试 signTypedDataV4 签名 无效的 primaryType',\n        'value': JSON.stringify({\n          domain: {\n            chainId: chainId,\n            name: 'Seaport',\n            version: '1.5',\n            verifyingContract: '0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC',\n          },\n          message: {\n            name: 'Hello, Bob!',\n          },\n          primaryType: 'Non-Existent',\n          types: {\n            EIP712Domain,\n            Wallet: [{ name: 'name', type: 'string' }],\n          },\n        }),\n      },\n      {\n        'id': 'signTypedData-malformed-no-primary-type-defined',\n        'name': 'Eip712 签名 没有 primaryType 定义',\n        'description': '测试 signTypedDataV4 签名 没有 primaryType 定义',\n        'value': JSON.stringify({\n          domain: {\n            chainId: chainId,\n            name: 'Seaport',\n            version: '1.5',\n            verifyingContract: '0x00000000000000ADc04C56Bf30aC9d3c0aAF14dC',\n          },\n          message: {\n            contents: 'Hello, Bob!',\n            from: {\n              name: 'Cow',\n              wallets: [\n                '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n                '0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF',\n              ],\n            },\n            to: [\n              {\n                name: 'Bob',\n                wallets: [\n                  '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n                  '0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57',\n                  '0xB0B0b0b0b0b0B000000000000000000000000000',\n                ],\n              },\n            ],\n          },\n          types: {\n            EIP712Domain,\n            Group: [\n              { name: 'name', type: 'string' },\n              { name: 'members', type: 'Person[]' },\n            ],\n            Mail: [\n              { name: 'from', type: 'Person' },\n              { name: 'to', type: 'Person[]' },\n              { name: 'contents', type: 'string' },\n            ],\n            Person: [\n              { name: 'name', type: 'string' },\n              { name: 'wallets', type: 'address[]' },\n            ],\n          },\n        }),\n      },\n      {\n        'id': 'signTypedData-malformed-invalid-verifyingContract-type',\n        'name': 'Eip712 签名 无效的 verifyingContract 类型',\n        'description': '测试 signTypedDataV4 签名 无效的 verifyingContract 类型',\n        'value': JSON.stringify({\n          domain: {\n            chainId: chainId,\n            name: 'Seaport',\n            version: '1.5',\n            verifyingContract: 1,\n          },\n          message: {\n            name: 'Hello, Bob!',\n          },\n          primaryType: 'Wallet',\n          types: {\n            EIP712Domain,\n            Wallet: [{ name: 'name', type: 'string' }],\n          },\n        }),\n      },\n    ];\n  },\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport { parseChainId } from '../../utils';\nimport { NETWORKS_BY_CHAIN_ID } from '../contract/SampleContracts';\n\nconst UNISWAP_V2_ROUTER_2 = {\n  'mainnet': '0x7a250d5630b4cf539739df2c5dacb4c659f2488d',\n  'optimism': '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',\n  'bsc': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  'polygon': '0xedf6066a2b290c185783862c7f4776a2c8077ad1',\n  'base': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  'arbitrum': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  'avalanche': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n};\n\nconst supportNetworkNames = Object.keys(UNISWAP_V2_ROUTER_2);\n\nexport default {\n  sendTransaction: (from: string, to: string, chainId: string | undefined) => {\n    const network =\n      NETWORKS_BY_CHAIN_ID[parseChainId(chainId) as keyof typeof NETWORKS_BY_CHAIN_ID];\n    if (!UNISWAP_V2_ROUTER_2[network as keyof typeof UNISWAP_V2_ROUTER_2]) {\n      return [\n        {\n          'id': 'sendTransaction-uniswapV2-not-support',\n          'name': 'Uniswap V2 不支持',\n          'description': 'Uniswap V2 不支持',\n          'value': `当前网络不支持，支持的网络为：${supportNetworkNames.join(',')}`,\n        },\n      ];\n    }\n\n    const contractAddress = UNISWAP_V2_ROUTER_2[network as keyof typeof UNISWAP_V2_ROUTER_2];\n\n    return [\n      {\n        'id': 'uniswapV2-swapExactETHForTokens',\n        'name': '0.0001 ETH -> USDC',\n        'description': '测试 0.0001 ETH -> USDC',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x3593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000067a9d0a400000000000000000000000000000000000000000000000000000000000000040b080604000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002800000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000005af3107a40000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000005af3107a4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000000000060000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4800000000000000000000000027213e28d7fda5c57fe9e5dd923818dbccf71c4700000000000000000000000000000000000000000000000000000000000000190000000000000000000000000000000000000000000000000000000000000060000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000005618207d27d78f09f61a5d92190d58c453feb4b7000000000000000000000000000000000000000000000000000000000003cf120c',\n          value: '0x5af3107a4000', // invalid value - expected int/hex value\n        }),\n      },\n      {\n        'id': 'uniswapV2-swapTokensForExactETH',\n        'name': 'WALLY -> ETH',\n        'description': '测试 WALLY -> ETH',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          value: '0x0',\n          data: '0x4a25d94a00000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000000bb833125b17c900000000000000000000000000000000000000000000000000000000000000a000000000000000000000000076f3f64cb3cD19debEE51436dF630a342B736C2400000000000000000000000000000000000000000000000000000000673f028e00000000000000000000000000000000000000000000000000000000000000020000000000000000000000004f7d2d728ce137dd01ec63ef7b225805c7b54575000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        }),\n      },\n      {\n        'id': 'uniswapV2-swapTokensForTokens',\n        'name': 'USDT -> TEE',\n        'description': '测试 USDT -> TEE',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          value: '0x0',\n          data: '0x8803dbee0000000000000000000000000000000000000000000000000000066724df1d800000000000000000000000000000000000000000000000000000000003c1bb1300000000000000000000000000000000000000000000000000000000000000a000000000000000000000000076f3f64cb3cD19debEE51436dF630a342B736C2400000000000000000000000000000000000000000000000000000000673f118f0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec7000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000009d09bcf1784ec43f025d3ee071e5b632679a01ba',\n        }),\n      },\n      {\n        'id': 'uniswapV2-swapExactETHForTokensSupportingFeeOnTransferTokens_0xb6f9de95',\n        'name': 'ETH -> MAGA FeeOnTransferTokens',\n        'description': '测试 ETH -> MAGA, 让 MAGA 承担手续费',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          value: '0x5af3107a4000',\n          data: '0xb6f9de950000000000000000000000000000000000000000000000000000f0f455510a61000000000000000000000000000000000000000000000000000000000000008000000000000000000000000076f3f64cb3cd19debee51436df630a342b736c240000000000000000000000000000000000000000000000000000019348c034940000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000d29da236dd4aac627346e1bba06a619e8c22d7c5',\n        }),\n      },\n      {\n        'id': 'uniswapV2-swapExactTokensForTokensSupportingFeeOnTransferTokens_0x5c11d795',\n        'name': 'WETH -> MOODENG FeeOnTransferTokens',\n        'description': '测试 WETH -> MOODENG, 让 MOODENG 承担手续费',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          value: '0x5af3107a4000',\n          data: '0x5c11d7950000000000000000000000000000000000000000000000000b1aefbfedabdc0000000000000000000000000000000000000000000000000000190fbc1daa2e9b00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000076f3f64cb3cd19debee51436df630a342b736c2400000000000000000000000000000000000000000000000000000000673da3620000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000028561b8a2360f463011c16b6cc0b0cbef8dbbcad',\n        }),\n      },\n    ];\n  },\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport { parseChainId } from '../../utils';\nimport { NETWORKS_BY_CHAIN_ID } from '../contract/SampleContracts';\n\nconst UNISWAP_UNIVERSAL_ROUTER = {\n  'mainnet': '0x7a250d5630b4cf539739df2c5dacb4c659f2488d',\n  'optimism': '0x4a7b5da61326a6379179b40d00f57e5bbdc962c2',\n  'bsc': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  'polygon': '0xedf6066a2b290c185783862c7f4776a2c8077ad1',\n  'base': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  'arbitrum': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n  'avalanche': '0x4752ba5dbc23f44d87826276bf6fd6b1c372ad24',\n};\n\nconst supportNetworkNames = Object.keys(UNISWAP_UNIVERSAL_ROUTER);\n\nexport default {\n  sendTransaction: (from: string, to: string, chainId: string | undefined) => {\n    const network =\n      NETWORKS_BY_CHAIN_ID[parseChainId(chainId) as keyof typeof NETWORKS_BY_CHAIN_ID];\n    if (!UNISWAP_UNIVERSAL_ROUTER[network as keyof typeof UNISWAP_UNIVERSAL_ROUTER]) {\n      return [\n        {\n          'id': 'sendTransaction-uniswapV2-not-support',\n          'name': 'Uniswap Universal 不支持',\n          'description': 'Uniswap Universal 不支持',\n          'value': `当前网络不支持，支持的网络为：${supportNetworkNames.join(',')}`,\n        },\n      ];\n    }\n\n    const contractAddress =\n      UNISWAP_UNIVERSAL_ROUTER[network as keyof typeof UNISWAP_UNIVERSAL_ROUTER];\n\n    return [\n      {\n        'id': 'uniswapV3-revokeApproval',\n        'name': 'Uniswap Permit2 revoke approval',\n        'description': '测试 Uniswap Permit2 revoke approval',\n        'value': JSON.stringify({\n          from,\n          to: '0x000000000022d473030f116ddee9f6b43ac78ba3',\n          data: '0xcc53287f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000001df7b652d428557044cc15e22b7a6508e21cada4',\n        }),\n      },\n      {\n        'id': 'uniswapV3-revokeApprovalBatch',\n        'name': 'Uniswap Permit2 revoke approval batch',\n        'description': '测试 Uniswap Permit2 revoke approval batch',\n        'value': JSON.stringify({\n          from,\n          to: '0x000000000022d473030f116ddee9f6b43ac78ba3',\n          data: '0xcc53287f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000300e0d87f8c95d90cfe4b809baa3a6c90e83b8500000000000000000000000003fc91a3afd70395cd496c647d5a6cc9d4b2b7fad00000000000000000000000036ff4dae0e88113d68b1209e245b0e3af92e9d58000000000000000000000000ef1c6e67703c7bd7107eed8303fbe6ec2554bf6b000000000000000000000000e2cfd7a01ec63875cd9da6c7c1b7025166c2fa2f0000000000000000000000003fc91a3afd70395cd496c647d5a6cc9d4b2b7fad',\n        }),\n      },\n      {\n        'id': 'uniswapV3-swapTokensForExactETH1',\n        'name': 'Swap',\n        'description': '测试 swap',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x3593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000006774c78d00000000000000000000000000000000000000000000000000000000000000040b000604000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000011f23a067400e2a00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000011f23a067400e2a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002bc02aaa39b223fe8d0a0e5c4f27ead9083c756cc200271026e550ac11b26f78a04489d5f20f24e3559f7dd9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000026e550ac11b26f78a04489d5f20f24e3559f7dd9000000000000000000000000000000fee13a103a10d593b9ae06b3e05f2e7e1c0000000000000000000000000000000000000000000000000000000000000019000000000000000000000000000000000000000000000000000000000000006000000000000000000000000026e550ac11b26f78a04489d5f20f24e3559f7dd90000000000000000000000009802ce11089f323aa42f67c5b52d1fd076db33d50000000000000000000000000000000000000000000000000000015ccf9038800b',\n        }),\n      },\n    ];\n  },\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport { parseChainId } from '../../utils';\nimport { NETWORKS_BY_CHAIN_ID } from '../contract/SampleContracts';\n\nexport const SUSHI_ROUTER_PROCESSOR_5 = {\n  'mainnet': '0xf2614a233c7c3e7f08b1f887ba133a13f1eb2c55',\n  'optimism': '0xf2614a233c7c3e7f08b1f887ba133a13f1eb2c55',\n  'bsc': '0xf2614a233c7c3e7f08b1f887ba133a13f1eb2c55',\n  'polygon': '0xf2614a233c7c3e7f08b1f887ba133a13f1eb2c55',\n  'base': '0xf2614a233c7c3e7f08b1f887ba133a13f1eb2c55',\n  'arbitrum': '0xf2614a233c7c3e7f08b1f887ba133a13f1eb2c55',\n  'avalanche': '0xf2614a233c7c3e7f08b1f887ba133a13f1eb2c55',\n};\n\nconst supportNetworkNames = Object.keys(SUSHI_ROUTER_PROCESSOR_5);\n\nexport default {\n  sendTransaction: (from: string, to: string, chainId: string | undefined) => {\n    const network =\n      NETWORKS_BY_CHAIN_ID[parseChainId(chainId) as keyof typeof NETWORKS_BY_CHAIN_ID];\n    if (!SUSHI_ROUTER_PROCESSOR_5[network as keyof typeof SUSHI_ROUTER_PROCESSOR_5]) {\n      return [\n        {\n          'id': 'sendTransaction-sushi-swap-not-support',\n          'name': 'Sushi Swap 不支持',\n          'description': 'Sushi Swap 不支持',\n          'value': `当前网络不支持，支持的网络为：${supportNetworkNames.join(',')}`,\n        },\n      ];\n    }\n\n    const contractAddress =\n      SUSHI_ROUTER_PROCESSOR_5[network as keyof typeof SUSHI_ROUTER_PROCESSOR_5];\n\n    return [\n      {\n        'id': 'sushi-swap-revokeApproval',\n        'name': 'Sushi Swap revoke approval',\n        'description': '测试 Sushi Swap revoke approval',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x2646478b0000000000000000000000007f39c581f595b53c5cb19bd0b3f8da6c935e2ca0000000000000000000000000000000000000000000000000002a725ebec9b25c000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000000000000000000000000000000321dc0220fbe3000000000000000000000000007ceb43e5ab46e56e9d04f1dbf66fd4bd829834b00000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000070027f39c581f595b53c5cb19bd0b3f8da6c935e2ca001ffff01109830a1aaad605bbf02a9dfa7b0b92ec2fb7daa01f2614a233c7c3e7f08b1f887ba133a13f1eb2c5501c02aaa39b223fe8d0a0e5c4f27ead9083c756cc201ffff020007ceb43e5ab46e56e9d04f1dbf66fd4bd829834b00000000000000000000000000000000',\n        }),\n      },\n    ];\n  },\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport { parseChainId } from '../../utils';\nimport { NETWORKS_BY_CHAIN_ID } from '../contract/SampleContracts';\n\nconst MORPHO_ROUTER = {\n  'mainnet': '0x51056b3F809f4cFE17E1A8715B82f5dbbCA5a5A1',\n};\n\nconst supportNetworkNames = Object.keys(MORPHO_ROUTER);\n\nexport default {\n  sendTransaction: (from: string, to: string, chainId: string | undefined) => {\n    const network =\n      NETWORKS_BY_CHAIN_ID[parseChainId(chainId) as keyof typeof NETWORKS_BY_CHAIN_ID];\n    if (!MORPHO_ROUTER[network as keyof typeof MORPHO_ROUTER]) {\n      return [\n        {\n          'id': 'sendTransaction-morpho-not-support',\n          'name': 'Morpho 不支持',\n          'description': 'Morpho 不支持',\n          'value': `当前网络不支持，支持的网络为：${supportNetworkNames.join(',')}`,\n        },\n      ];\n    }\n\n    const contractAddress = MORPHO_ROUTER[network as keyof typeof MORPHO_ROUTER];\n\n    return [\n      {\n        'id': 'morpho-withdraw_0xb460af94',\n        'name': 'Morpho withdraw',\n        'description': '测试 Morpho withdraw',\n        'value': JSON.stringify({\n          from,\n          to: '0x51056b3F809f4cFE17E1A8715B82f5dbbCA5a5A1',\n          data: '0xb460af9400000000000000000000000000000000000000000000000000000000000f42400000000000000000000000004ef880525383ab4e3d94b7689e3146bf899a296e0000000000000000000000004ef880525383ab4e3d94b7689e3146bf899a296e',\n        }),\n      },\n      {\n        'id': 'morpho-redeem_0xba087652',\n        'name': 'Morpho redeem',\n        'description': '测试 Morpho redeem',\n        'value': JSON.stringify({\n          from,\n          to: '0xd63070114470f685b75B74D60EEc7c1113d33a3D',\n          data: '0xba08765200000000000000000000000000000000000000000000000197b46c4ad10b345300000000000000000000000075347799e8824d9ad096fa6bb5bb1ab56d15e89e00000000000000000000000075347799e8824d9ad096fa6bb5bb1ab56d15e89e',\n        }),\n      },\n      {\n        'id': 'morpho-claim_0xfabed412',\n        'name': 'Morpho claim',\n        'description': '测试 Morpho claim',\n        'value': JSON.stringify({\n          from,\n          to: \"0x330eefa8a787552DC5cAd3C3cA644844B1E61Ddb\",\n          data: '0xfabed41200000000000000000000000003831fe10bb34879ce46c22045d81dc75a26f15200000000000000000000000058d97b57bb95320f9a05dc918aef65434969c2b20000000000000000000000000000000000000000000000035f73745d12abec5d0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000f9c1d2fe22321883ecc6ce34a86e729f8c8ded1c6b04a5ddb9a6a04e6f2d6092af44aeb6b0e03d87fc76d40404824887687ed8407c988ac02aaae8f09a403ea72843e3c6c668dc63548094415e83b039522aaea67fb7c951f60262e4c1a6038fc87f3244c300b42f11055abdaf58fe348a6291e5fec9c76f32cf115690b048422d1255196cb34e08a558a2fbc4e7e760e6b457194a538e77d6dfe28de695eac5b14e791bfc1ac8d2553f81ec023d223aeb1b845859cf26906c5df9e6b44f0d7302a9fbcb700ee98b4959e19d91c20f518fdcd36d1638bc37b67630f3ba7eeb4c01f11687eb4e26bce914bbf490d13d56f59d21f90acc9804f0a09d284afde74fc6ccacca28f56c10e960657a8dd3a4f8134bd1c90f4bbe1bd623bccefa1e0ce686f510741603c0b9e0105a0e963216eea8fbfb0d98b40e96f722be41cf4bc4aff2ec18afb5e97ad7ca5efd4af90bd72f0d058da2785e1bfb0495d0938398f2408ac21f8eb7e06766a8a4a63715fdc7dbc692aa26d9d4a6383c5ff37ed59236ace4395d9a5da912ee5104990665a26f052139c7454ccb62161ac58078d61ded99d217a652b3dc7a00c31967644fdf22065621dc48811be505f6ec97229349691a4ffb26acbc500592a6c6e46cfc3917ab624d9fdea86699db692cccdbff0fbbba7',\n        }),\n      },\n    ];\n  },\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport { parseChainId } from '../../utils';\nimport { NETWORKS_BY_CHAIN_ID } from '../contract/SampleContracts';\n\nexport const INCH_AGGREGATION_ROUTER_V5 = {\n  'mainnet': '0x1111111254eeb25477b68fb85ed929f73a960582',\n  'optimism': '0x1111111254eeb25477b68fb85ed929f73a960582',\n  'bsc': '0x1111111254eeb25477b68fb85ed929f73a960582',\n  'polygon': '0x1111111254eeb25477b68fb85ed929f73a960582',\n  'base': '0x1111111254eeb25477b68fb85ed929f73a960582',\n  'arbitrum': '0x1111111254eeb25477b68fb85ed929f73a960582',\n  'avalanche': '0x1111111254eeb25477b68fb85ed929f73a960582',\n};\n\nconst supportNetworkNames = Object.keys(INCH_AGGREGATION_ROUTER_V5);\n\nexport default {\n  sendTransaction: (from: string, to: string, chainId: string | undefined) => {\n    const network =\n      NETWORKS_BY_CHAIN_ID[parseChainId(chainId) as keyof typeof NETWORKS_BY_CHAIN_ID];\n    if (!INCH_AGGREGATION_ROUTER_V5[network as keyof typeof INCH_AGGREGATION_ROUTER_V5]) {\n      return [\n        {\n          'id': 'sendTransaction-inchV5-not-support',\n          'name': 'InchV5 不支持',\n          'description': 'InchV5 不支持',\n          'value': `当前网络不支持，支持的网络为：${supportNetworkNames.join(',')}`,\n        },\n      ];\n    }\n\n    const contractAddress =\n      INCH_AGGREGATION_ROUTER_V5[network as keyof typeof INCH_AGGREGATION_ROUTER_V5];\n\n    return [\n      {\n        'id': 'inchV5-swap_0x12aa3caf',\n        'name': 'InchV5 swap',\n        'description': '测试 InchV5 swap',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x12aa3caf000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000ae7ab96520de3a18e5e111b5eaab095312d7fe84000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd0900000000000000000000000076f3f64cb3cd19debee51436df630a342b736c24000000000000000000000000000000000000000000000000000aa87bee538000000000000000000000000000000000000000000000000000000a92b2790f81fe000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001940000000000000000000000000000000001760001480000fe00005400004e802026678dcd0000000000000000000000000000000000000000352a3666b27bb09aca7b4a71ed624429b75495510000000000000000000000000000000000000000000000000000082f79cd900000206b4be0b900a007e5c0d200000000000000000000000000000000000000008600006c00003000001640607f39c581f595b53c5cb19bd0b3f8da6c935e2ca00020d6bdbf787f39c581f595b53c5cb19bd0b3f8da6c935e2ca041207f39c581f595b53c5cb19bd0b3f8da6c935e2ca00004de0e9a3e00000000000000000000000000000000000000000000000000000000000000000020d6bdbf78ae7ab96520de3a18e5e111b5eaab095312d7fe8400a0f2fa6b66ae7ab96520de3a18e5e111b5eaab095312d7fe84000000000000000000000000000000000000000000000000000aa04c7485effe0000000000000000000628c55e34359e80a06c4eca27ae7ab96520de3a18e5e111b5eaab095312d7fe841111111254eeb25477b68fb85ed929f73a96058200000000000000000000000004f36373',\n        }),\n      },\n      {\n        'id': 'inchV5-swap_0x07ed2379',\n        'name': 'InchV5 ETH --> DEXE',\n        'description': '测试 InchV5 redeem',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x07ed23790000000000000000000000003451b6b219478037a1ac572706627fc2bda1e812000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000de4ee8057785a7e8e800db58f9784845a5c2cbd60000000000000000000000003451b6b219478037a1ac572706627fc2bda1e81200000000000000000000000076f3f64cb3cd19debee51436df630a342b736c240000000000000000000000000000000000000000000000000422b56bcf110000000000000000000000000000000000000000000000000005b70d74e7780df81600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000009b00000000000000000000000000000000000000000000000000007d00001a4041c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2d0e30db002a0000000000000000000000000000000000000000000000005afb1696ceaae530fee63c1e581babe4490da9bcf0bbf062c40112aea2109d6ba7fc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2111111125421ca6dc452d289314280a0f8842a650000000000e26b9977',\n        }),\n      },\n      {\n        'id': 'inchV5-uniswapV3Swap_0xe449022e',\n        'name': 'InchV5 uniswapV3Swap',\n        'description': '测试 InchV5 uniswapV3Swap',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0xe449022e000000000000000000000000000000000000000000000000000000003ee3cead000000000000000000000000000000000000000000000000000000003e27bf1c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000010000000000000000000000003416cf6c708da44db2624d63ea0aaef7113527c69a635db5',\n        }),\n      },\n      {\n        'id': 'inchV5-uniswapV3SwapTo_0xbc80f1a8',\n        'name': 'InchV5 uniswapV3SwapTo',\n        'description': '测试 InchV5 uniswapV3SwapTo',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0xbc80f1a80000000000000000000000000b80c366d3d92fcd4de0d4a3d596ced82edcf65d0000000000000000000000000000000000000000000000000000015d2fb8915b0000000000000000000000000000000000000000000000003ac6bfb02ac1b5dc00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a04d13f092f68f603a193832222898b0d9f52c718deeafa9',\n        }),\n      },\n      {\n        'id': 'inchV5-uniswapV3SwapToWithPermit_0x2521b930',\n        'name': 'InchV5 uniswapV3SwapToWithPermit',\n        'description': '测试 InchV5 uniswapV3SwapToWithPermit',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x2521b930000000000000000000000000d763f057c2ad11de4e5bf41419c4f1573ca5c0200000000000000000000000009e6be44cc1236eef7e1f197418592d363bedcd5a0000000000000000000000000000000000000000000005d8087a3b25388000000000000000000000000000000000000000000000000000000792a0d6eb6a1c5200000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000012000000000000000000000008fe199d58ebbec1c9c8dc45c9961ce3ac33e939c00000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000d763f057c2ad11de4e5bf41419c4f1573ca5c0200000000000000000000000001111111254eeb25477b68fb85ed929f73a960582ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000676546cf000000000000000000000000000000000000000000000000000000000000001bf5e232c8abddd5e4a3af61fb4cf0f2a1cf6b5936afda0238925aeb2975fd5b66300e9144ef23b89cfef17ece3fc9743f0a2df54bf7a7a5d2a44609955c0f0b97e26b9977',\n        }),\n      },\n      {\n        'id': 'inchV5-unoswap_0x0502b1c5',\n        'name': 'InchV5 unoswap',\n        'description': '测试 InchV5 unoswap',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          value: '0x2c68af0bb140000', // 0.2 ETH\n          data: '0x0502b1c500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b72fd2103b2800000000000000000000000000000000000000000000000000000006732fc361ce60000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000180000000000000003b6d0340622270721fb38fde831ab23a8e177665557f6fa9fef84ee9',\n        }),\n      },\n      {\n        'id': 'inchV5-unoswapTo_0xf78dc253',\n        'name': 'InchV5 unoswapTo',\n        'description': '测试 InchV5 unoswapTo',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          value: '0x2c68af0bb140000', // 0.2 ETH\n          data: '0xf78dc253000000000000000000000000b7e80293da67bd419b4a63c16842526586b10de6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c68af0bb14000000000000000000000000000000000000000000000000000001d973e7026bcc7e00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000180000000000000003b6d03407eb6d3466600b4857eb60a19e0d2115e65aa815eb311c6c3',\n        }),\n      },\n    ];\n  },\n};\n\n","import { parseChainId } from '../../utils';\nimport { NETWORKS_BY_CHAIN_ID } from '../contract/SampleContracts';\n\nexport const INCH_AGGREGATION_ROUTER_V6 = {\n  'mainnet': '0x111111125421ca6dc452d289314280a0f8842a65',\n  'optimism': '0x111111125421ca6dc452d289314280a0f8842a65',\n  'bsc': '0x111111125421ca6dc452d289314280a0f8842a65',\n  'polygon': '0x111111125421ca6dc452d289314280a0f8842a65',\n  'base': '0x111111125421ca6dc452d289314280a0f8842a65',\n  'arbitrum': '0x111111125421ca6dc452d289314280a0f8842a65',\n  'avalanche': '0x111111125421ca6dc452d289314280a0f8842a65',\n};\n\nconst supportNetworkNames = Object.keys(INCH_AGGREGATION_ROUTER_V6);\n\nexport default {\n  sendTransaction: (from: string, to: string, chainId: string | undefined) => {\n    const network =\n      NETWORKS_BY_CHAIN_ID[parseChainId(chainId) as keyof typeof NETWORKS_BY_CHAIN_ID];\n\n    if (!INCH_AGGREGATION_ROUTER_V6[network as keyof typeof INCH_AGGREGATION_ROUTER_V6]) {\n      return [\n        {\n          'id': 'sendTransaction-inchV6-not-support',\n          'name': 'InchV6 不支持',\n          'description': 'InchV6 不支持',\n          'value': `当前网络不支持，支持的网络为：${supportNetworkNames.join(',')}`,\n        },\n      ];\n    }\n\n    const contractAddress =\n      INCH_AGGREGATION_ROUTER_V6[network as keyof typeof INCH_AGGREGATION_ROUTER_V6];\n\n    return [\n      {\n        'id': 'inchV6-swap_ETH --> WETH (wrap)',\n        'name': 'InchV6 swap ETH --> WETH (wrap)',\n        'description': '测试 InchV6 swap ETH --> WETH (wrap)',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x07ed23790000000000000000000000005141b82f5ffda4c6fe1e372978f1c5427640a190000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000005141b82f5ffda4c6fe1e372978f1c5427640a1900000000000000000000000005618207d27d78f09f61a5d92190d58c453feb4b700000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000005a7ea627b80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000008600000000000000000000000000000000000000000000000000006800001a4061c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2d0e30db080206c4eca27c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2111111125421ca6dc452d289314280a0f8842a6500000000000000000000000000000000000000000000000000005af3107a40000000000000000000000000000000000000000000000000000000e26b9977',\n          value: '0x5af3107a4000',\n        }),\n      },\n      {\n        'id': 'inchV6-ethUnoswap_0xa76dfc3b',\n        'name': 'InchV6 ethUnoswap',\n        'description': '测试 InchV6 ethUnoswap',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          value: '0x221b262dd8000',\n          data: '0xa76dfc3b00000000000000000000000000000000000000000000000000031369d2763c8700000000000000003b6d0340a6416942c108a6229b339d1a01b00dd2df1f6171e26b9977',\n        }),\n      },\n      {\n        'id': 'inchV6-ethUnoswap2_0x89af926a',\n        'name': 'InchV6 ethUnoswap2',\n        'description': '测试 InchV6 ethUnoswap2',\n        'value': JSON.stringify({\n          from,\n          value: '0xde0b6b3a7640000', // 1 ETH\n          data: '0x89af926a000000000000000000000000000000000000000000000000000000000037931f2000000000000000000000004585fe77225b41b697c938b018e2ac67ac5a20c020800000000000000000000087428a53e14d24ab19c6ca4939b4df93b8996ca920759c7c',\n        }),\n      },\n      {\n        'id': 'inchV6-ethUnoswap3_0x188ac35d',\n        'name': 'InchV6 ethUnoswap3',\n        'description': '测试 InchV6 ethUnoswap3',\n        'value': JSON.stringify({\n          from,\n          value: '0xde0b6b3a7640000', // 1 ETH\n          data: '0x188ac35d000000000000000000000000000000000000000000000000000000000037a782208000000000000000000000c7bbec68d12a0d1830360f8ec58fa599ba1b0e9b20000000000000000000000056534741cd8b152df6d48adf7ac51f75169a83b220800000000000000000000087428a53e14d24ab19c6ca4939b4df93b8996ca920759c7c',\n        }),\n      },\n      {\n        'id': 'inchV6-ethUnoswapTo_0x175accdc',\n        'name': 'InchV6 ethUnoswapTo',\n        'description': '测试 InchV6 ethUnoswapTo',\n        'value': JSON.stringify({\n          from,\n          value: '0xde0b6b3a7640000', // 1 ETH\n          data: '0x175accdc000000000000000000000000575fc4fd55293dba4dedf9580d01a17cf83aac22000000000000000000000000000000000000000000012fdf62601e3d9394f30d208000000000000000000000b9ebf49f3c12a3f9aa18f4ff0383c0ec29750070e26b9977',\n        }),\n      },\n      {\n        'id': 'inchV6-unoswap_0x83800a8e',\n        'name': 'InchV6 unoswap',\n        'description': '测试 InchV6 unoswap',\n        'value': JSON.stringify({\n          from,\n          value: '0xde0b6b3a7640000', // 1 ETH\n          data: '0x83800a8e0000000000000000000000006942032c871f5d46aa475f1d130c87603255ca40000000000000000000000000000000000000000000000000481eedfd39cf9f2000000000000000000000000000000000000000000000000001e7bbd623c6815b18800000000000003b6d03405549cf887b683877911e08ffb1f08d03820ac757e26b9977',\n        }),\n      },\n      {\n        'id': 'inchV6-unoswap2_0x8770ba91',\n        'name': 'InchV6 unoswap2',\n        'description': '测试 InchV6 unoswap2',\n        'value': JSON.stringify({\n          from,\n          data: '0x8770ba91000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec70000000000000000000000000000000000000000000000000000000011e1a30000000000000000000000000000000000000000000000000000000523a9b16efc08000000000000003b6d034006da0fd433c1a5d7a4faa01111c044910a18455300000000000000003b6d0340622270721fb38fde831ab23a8e177665557f6fa9e26b9977',\n        }),\n      },\n      {\n        'id': 'inchV6-unoswap3_0x19367472',\n        'name': 'InchV6 unoswap3',\n        'description': '测试 InchV6 unoswap3',\n        'value': JSON.stringify({\n          from,\n          data: '0x19367472000000000000000000000000ec9333e7dadeebf82d290d6cb12e66cc30ce46b0000000000000000000000000000000000000000000003d68ee76da263140000000000000000000000000000000000000000000000000002eefb7a3e7927a4ae42800000000000000000000006d421d1c905270ee48496cd7238d58e7d7b1879820800000000000000000000011b815efb8f581194ae79006d24e0d814b7697f6200000000000000000000000435664008f38b0650fbc1c9fc971d0a3bc2f1e47f012a792',\n        }),\n      },\n      {\n        'id': 'inchV6-unoswapTo2_0xea76dddf',\n        'name': 'InchV6 unoswapTo2',\n        'description': '测试 InchV6 unoswapTo2',\n        'value': JSON.stringify({\n          from,\n          data: '0xea76dddf000000000000000000000000283ec414d177b25aaffc15ba03f270b4323fc27d000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000000000000000000000000000000000000bebc200000000000000000000000000000000000000000000000014540f0e46932763a15280000000000000000000000c7bbec68d12a0d1830360f8ec58fa599ba1b0e9b2000000000000000000000001385fc1fe0418ea0b4fcf7adc61fc7535ab7f80de26b9977',\n        }),\n      },\n      {\n        'id': 'inchV6-fillContractOrder_0xcc713a04',\n        'name': 'InchV6 fillContractOrder',\n        'description': '测试 InchV6 fillContractOrder',\n        'value': JSON.stringify({\n          from,\n          data: '0xcc713a041528f62f5a4654435f15688ff832210dd521fc67c769ea7d0a45ae1a840c7caf000000000000000000000000807cf9a772d5a3f9cefbc1192e939d62f0d9bd380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000ae7ab96520de3a18e5e111b5eaab095312d7fe840000000000000000000000000000000000000000000000000015fd33eae2eb66000000000000000000000000000000000000000000000000001606ddfd9b8001000000000000000000000000000003731e00676fe155000000000000000000000000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000001606ddfd9b80016000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004173f76cf6fecf8a9998e045bac30ca34e8316a2fd5000379159265031de99a60e513a6794ead15026d9a19e38165fc418d926fbd328710cf519da2b2c30c9e0441c00000000000000000000000000000000000000000000000000000000000000e26b9977',\n        }),\n      },\n    ];\n  },\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n\nimport { parseChainId } from '../../utils';\nimport { NETWORKS_BY_CHAIN_ID } from '../contract/SampleContracts';\n\nexport const OKX_DEX_ROUTER = {\n  'mainnet': '0x7d0ccaa3fac1e5a943c5168b6ced828691b46b36',\n  'optimism': '0xf332761c673b59b21ff6dfa8ada44d78c12def09',\n  'bsc': '0x9333c74bdd1e118634fe5664aca7a9710b108bab',\n  'polygon': '0xa748d6573aca135af68f2635be60cb80278bd855',\n  'base': '0x6b2c0c7be2048daa9b5527982c29f48062b34d58',\n  'arbitrum': '0xf332761c673b59b21ff6dfa8ada44d78c12def09',\n  'avalanche': '0x1dac23e41fc8ce857e86fd8c1ae5b6121c67d96d',\n};\n\nconst supportNetworkNames = Object.keys(OKX_DEX_ROUTER);\n\nexport default {\n  sendTransaction: (from: string, to: string, chainId: string | undefined) => {\n    const network =\n      NETWORKS_BY_CHAIN_ID[parseChainId(chainId) as keyof typeof NETWORKS_BY_CHAIN_ID];\n    if (!OKX_DEX_ROUTER[network as keyof typeof OKX_DEX_ROUTER]) {\n      return [\n        {\n          'id': 'sendTransaction-okx-not-support',\n          'name': 'OKX DEX 不支持',\n          'description': 'OKX DEX 不支持',\n          'value': `当前网络不支持，支持的网络为：${supportNetworkNames.join(',')}`,\n        },\n      ];\n    }\n\n    const contractAddress = OKX_DEX_ROUTER[network as keyof typeof OKX_DEX_ROUTER];\n\n    return [\n      {\n        'id': 'okx-dex-uniswapV3SwapTo_0x0d5f0e3b',\n        'name': 'OKX DEX uniswapV3SwapTo',\n        'description': '测试 OKX DEX uniswapV3SwapTo',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x0d5f0e3b000000000000000000019b8c08b129dac0b9f2ee58bfdc50421285201724f7d80000000000000000000000000000000000000000000000000000000011d63150000000000000000000000000000000000000000000000c2186379f4425920a0c00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000002800000000000000000000000c7bbec68d12a0d1830360f8ec58fa599ba1b0e9b8000000000000000000000006c1bcf1b99d9f0819459dad661795802d232437e000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec73ca20afc2aaa000000000019352a3666b27bb09aca7b4a71ed624429b7549551',\n        }),\n      },\n      {\n        'id': 'okx-uniswapV3SwapTo_0x08298b5a',\n        'name': 'OKX uniswapV3SwapTo',\n        'description': '测试 OKX uniswapV3SwapTo',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x08298b5a000000000000000000019f1126e550ac11b26f78a04489d5f20f24e3559f7dd900000000000000000000000000000000000000000000000000001eb95b040f7c0000000000000000000000000000000000000000000000000b7d1dea6818d1cc000000000000000000000000b1b2d032aa2f52347fbcfd08e5c3cc55216e840400000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000130000000000000003b6d0340fff8d5fff6ee3226fa2f5d7d5d8c3ff785be9c74',\n        }),\n      },\n      {\n        'id': 'okx-unxswapByOrderId_0x9871efa4',\n        'name': 'OKX unxswapByOrderId',\n        'description': '测试 OKX unxswapByOrderId',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          value: '0x2c68af0bb140000', // 0.2 ETH\n          data: '0x9871efa4000000000000000000019f0500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ad112c09f199d80000000000000000000000000000000000000000000000d920f57c9d4a0ae7bfc00000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001b0000000000000003b6d0340d2f0f0a314c4075c421b88607655feb34d31b3dc',\n        }),\n      },\n      {\n        'id': 'okx-smartSwapByOrderId_0xb80c2f09',\n        'name': 'OKX smartSwapByOrderId',\n        'description': '测试 OKX smartSwapByOrderId',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          value: '0x2c68af0bb140000', // 0.2 ETH\n          data: '0xb80c2f0900000000000000000000000000000000000000000000000000000000000187cf000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000000000000026e550ac11b26f78a04489d5f20f24e3559f7dd900000000000000000000000000000000000000000000000059ef5c6a32eb40000000000000000000000000000000000000000000000000000000ee72ad0bc6ee000000000000000000000000000000000000000000000000000000006775f612000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000520000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000059ef5c6a32eb4000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001c0000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000000002000000000000000000000000031f1ad10547b8deb43a36e5491c06a93812023a00000000000000000000000003f911aedc25c770e701b8f563e8102cfacd62c00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000fff8d5fff6ee3226fa2f5d7d5d8c3ff785be9c7400000000000000000000000003f911aedc25c770e701b8f563e8102cfacd62c000000000000000000000000000000000000000000000000000000000000000028000000000000000000019c8fff8d5fff6ee3226fa2f5d7d5d8c3ff785be9c74800000000000000000000d48a2542303c9a01c011da9106128d9b0838e6c3e570000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000026e550ac11b26f78a04489d5f20f24e3559f7dd900000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee3ca20afc2aaa00000000001e96c195f6643a3d797cb90cb6ba0ae2776d51b5f3',\n        }),\n      },\n      {\n        'id': 'okx-smartSwapTo_0x03b87e5f',\n        'name': 'OKX smartSwapTo',\n        'description': '测试 OKX smartSwapTo',\n        'value': JSON.stringify({\n          from,\n          to: contractAddress,\n          data: '0x03b87e5f0000000000000000000000000000000000000000000000000000000000019f8f000000000000000000000000b1b2d032aa2f52347fbcfd08e5c3cc55216e8404000000000000000000000000944824290cc12f31ae18ef51216a223ba4063092000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000162e759934ca19b9800000000000000000000000000000000000000000000000000040e0ab3b85d3aff0000000000000000000000000000000000000000000000000000000067764acc0000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000004800000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000162e759934ca19b9800000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000944824290cc12f31ae18ef51216a223ba40630920000000000000000000000000000000000000000000000000000000000000001000000000000000000000000cbd78f8fb96bae40826a601f8b9ba17782d625270000000000000000000000000000000000000000000000000000000000000001000000000000000000000000cbd78f8fb96bae40826a601f8b9ba17782d625270000000000000000000000000000000000000000000000000000000000000001000000000000000000002710021e6270091a926d08d43681978d65f9a9b024ca0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000944824290cc12f31ae18ef51216a223ba4063092000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000009c40000000000000000000000000000000000000000000000000000000000000000',\n        }),\n      }\n    ];\n  },\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { ApiForm, ApiComboboxRef, ComboboxOption } from '../../../ApiForm';\nimport { IEthereumProvider } from '../types';\nimport { useWallet } from '../../../../components/connect/WalletContext';\nimport { useRef } from 'react';\n\nimport TokenList from '@uniswap/default-token-list';\nimport { parseChainId } from '../utils';\nimport BigNumber from 'bignumber.js';\nimport {\n  checkSupportNetwork,\n  getSupportNetworkNames,\n  NETWORKS_BY_CHAIN_ID,\n  WRAPPED_NATIVE_TOKEN,\n} from '../case/contract/SampleContracts';\n\ntype ITokenOption = {\n  type: string;\n  options: {\n    address: string;\n    symbol: string;\n    decimals: number;\n    image: string;\n  };\n};\n\nconst getTokens = (chainId: string) => {\n  const tokens = TokenList.tokens.filter((token) => parseChainId(chainId) === token.chainId);\n  const tokenOptions: ComboboxOption<ITokenOption>[] = tokens.map((token) => ({\n    value: token.address,\n    label: `${token.name} - ${token.address}`,\n    extra: {\n      type: 'ERC20',\n      options: {\n        address: token.address,\n        symbol: token.symbol,\n        decimals: token.decimals,\n        image: token.logoURI,\n      },\n    },\n  }));\n  // 排序 USDC、USDT、DAI、WETH 优先\n  tokenOptions.sort((a, b) => {\n    const aName = a.extra.options.symbol;\n    const bName = b.extra.options.symbol;\n    const aPriority = ['USDC', 'USDT', 'WETH'].includes(aName) ? 0 : 1;\n    const bPriority = ['USDC', 'USDT', 'WETH'].includes(bName) ? 0 : 1;\n    return aPriority - bPriority;\n  });\n  return tokenOptions;\n};\n\nexport const WalletWatchAsset = ({ chainId }: { chainId: string | undefined }) => {\n  const { provider, account } = useWallet<IEthereumProvider>();\n  const tokenSelectorRef = useRef<ApiComboboxRef<ITokenOption>>(null);\n\n  return (\n    <ApiForm title=\"ERC20\" description=\"ERC20 Token Send, Approve, Revoke 相关操作\">\n      <ApiForm.Combobox<ITokenOption>\n        id=\"tokenSelector\"\n        ref={tokenSelectorRef}\n        label=\"选择 ERC 20 Token 预设参数\"\n        placeholder=\"请选择 ERC20 Token\"\n        requestOptionsKey={chainId}\n        onRequestOptions={async () => {\n          return Promise.resolve(getTokens(chainId));\n        }}\n        onOptionChange={(option, formRef) => {\n          formRef?.setJsonValue('request', option?.extra);\n        }}\n      />\n\n      <ApiForm.Text id=\"watchButtonTitle\" value=\"测试添加资产到钱包\" size=\"lg\" />\n      <ApiForm.JsonEdit id=\"request\" label=\"请求(可以手动编辑)\" required />\n\n      <ApiForm.Button\n        id=\"watchButton\"\n        label=\"Wallet_WatchAsset 添加资产到钱包\"\n        onClick={async (formRef) => {\n          const res = await provider?.request({\n            'method': 'wallet_watchAsset',\n            'params': JSON.parse(formRef?.getValue('request') ?? ''),\n          });\n          formRef?.setValue('response', JSON.stringify(res, null, 2));\n        }}\n        validation={{\n          fields: ['request'],\n          validator: (values) => {\n            if (!values.request) {\n              return '请选择 ERC20 Token';\n            }\n          },\n        }}\n      />\n\n      <ApiForm.AutoHeightTextArea id=\"response\" label=\"执行结果\" />\n      <ApiForm.Separator />\n      <ApiForm.Text id=\"transferTitle\" value=\"测试转账 Transfer\" size=\"lg\" />\n      <ApiForm.Field id=\"transferAmount\" type=\"number\" label=\"转账数量\" defaultValue=\"0.001\" />\n      <ApiForm.Field id=\"transferTo\" type=\"text\" label=\"转账地址\" defaultValue={account?.address} />\n      <ApiForm.Button\n        id=\"transferButton\"\n        label=\"转账\"\n        availableDependencyFields={[\n          { fieldIds: ['tokenSelector', 'transferAmount', 'transferTo'] },\n        ]}\n        onClick={async (formRef) => {\n          const transferAmount = formRef?.getValue<number>('transferAmount') ?? 0;\n          const transferTo = formRef?.getValue<string>('transferTo') ?? '';\n\n          const tokenSelectorOption = tokenSelectorRef.current?.getCurrentOption();\n          const from = account?.address ?? '';\n          const tokenAddress = tokenSelectorOption?.extra?.options.address;\n\n          const decimals = tokenSelectorOption?.extra?.options.decimals;\n          const transferAmountBigInt = new BigNumber(transferAmount).shiftedBy(decimals);\n\n          const params = JSON.stringify({\n            from: from,\n            to: tokenAddress,\n            data: `0xa9059cbb${transferTo.substring(2).padStart(64, '0')}${transferAmountBigInt\n              .toString(16)\n              .padStart(64, '0')}`,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          });\n\n          const res = await provider?.request({\n            'method': 'eth_sendTransaction',\n            'params': [JSON.parse(params)],\n          });\n\n          formRef?.setJsonValue('transferResponse', res);\n        }}\n      />\n      <ApiForm.AutoHeightTextArea id=\"transferResponse\" label=\"执行结果\" />\n      <ApiForm.Separator />\n      <ApiForm.Text id=\"approveTitle\" value=\"测试授权 Approve、Revoke\" size=\"lg\" />\n      <ApiForm.Field\n        id=\"approveContractAddress\"\n        type=\"text\"\n        label=\"授权地址\"\n        defaultValue={account?.address}\n      />\n      <ApiForm.Field\n        id=\"approveAmount\"\n        type=\"number\"\n        label=\"授权数量（0 表示取消授权）\"\n        defaultValue=\"100\"\n      />\n      <ApiForm.Checkbox id=\"approveTokenUnlimited\" label=\"无限授权\" />\n      <ApiForm.Checkbox id=\"approveTokenMockUniSwap\" label=\"模拟 UniSwap（不传 Value)\" />\n      <ApiForm.Button\n        id=\"approveButton\"\n        label=\"授权 Approve、Revoke\"\n        availableDependencyFields={[{ fieldIds: ['tokenSelector', 'approveContractAddress'] }]}\n        onClick={async (formRef) => {\n          const approveAmount = formRef?.getValue<number>('approveAmount');\n          const approveContractAddress = formRef?.getValue<string>('approveContractAddress');\n          const approveTokenUnlimited = formRef?.getValue<boolean>('approveTokenUnlimited');\n          const approveTokenMockUniSwap = formRef?.getValue<boolean>('approveTokenMockUniSwap');\n\n          const tokenSelectorOption = tokenSelectorRef.current?.getCurrentOption();\n          const from = account?.address ?? '';\n          const tokenAddress = tokenSelectorOption?.extra?.options.address;\n\n          const revoke = approveAmount === 0;\n\n          let approveAmountArg;\n          // maxApprove\n          if (approveTokenUnlimited) {\n            // 使用最大值 2^256 - 1 表示无限额度\n            approveAmountArg = 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n          } else if (revoke) {\n            approveAmountArg = BigInt(0).toString(16).padStart(64, '0');\n          } else if (approveAmount) {\n            // approveAmount是 小数 如何用 BigInt\n            const decimals = tokenSelectorOption?.extra?.options.decimals;\n            approveAmountArg = new BigNumber(approveAmount)\n              .shiftedBy(decimals)\n              .toString(16)\n              .padStart(64, '0');\n          } else {\n            throw new Error('请输入授权数量');\n          }\n\n          const data = `0x095ea7b3${approveContractAddress\n            .substring(2)\n            .padStart(64, '0')}${approveAmountArg}`;\n\n          const approveParams = {\n            from: from,\n            to: tokenAddress,\n            data,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          };\n\n          if (approveTokenMockUniSwap) {\n            delete approveParams.value;\n          }\n\n          const approveParamsStr = JSON.stringify(approveParams);\n          const res = await provider?.request({\n            'method': 'eth_sendTransaction',\n            'params': [JSON.parse(approveParamsStr)],\n          });\n\n          formRef?.setJsonValue('approveResponse', res);\n        }}\n      />\n      <ApiForm.AutoHeightTextArea id=\"approveResponse\" label=\"执行结果\" />\n    </ApiForm>\n  );\n};\n\nexport const WrapAssets = ({ chainId }: { chainId: string | undefined }) => {\n  const { provider, account } = useWallet<IEthereumProvider>();\n\n  return (\n    <ApiForm title=\"Wrap Assets\" description=\"Wrap Assets 相关操作\">\n      <ApiForm.Text id=\"depositWrapAssetsTitle\" value=\"测试存入 Wrap Assets\" size=\"lg\" />\n      <ApiForm.Field\n        id=\"depositWrapAssetsAmount\"\n        type=\"number\"\n        label=\"存入数量(链上最小单位)\"\n        defaultValue=\"10000\"\n      />\n      <ApiForm.Button\n        id=\"depositWrapAssetsButton\"\n        label=\"存入 Wrap Assets\"\n        availableDependencyFields={[\n          {\n            fieldIds: ['depositWrapAssetsAmount'],\n            required: () => {\n              if (chainId && !checkSupportNetwork(parseChainId(chainId))) {\n                return {\n                  errorMessage: `请选择支持的网络,${getSupportNetworkNames().join(',')}`,\n                };\n              }\n            },\n          },\n        ]}\n        onClick={async (formRef) => {\n          const depositWrapAssetsAmount = formRef?.getValue<number>('depositWrapAssetsAmount');\n\n          const chainIdNumber = parseChainId(chainId);\n          const network = NETWORKS_BY_CHAIN_ID[chainIdNumber as keyof typeof NETWORKS_BY_CHAIN_ID];\n          const tokenContractAddress =\n            WRAPPED_NATIVE_TOKEN[network as keyof typeof WRAPPED_NATIVE_TOKEN];\n\n          const approveParams = {\n            from: account?.address,\n            to: tokenContractAddress,\n            data: '0xd0e30db0',\n            value: `0x${new BigNumber(depositWrapAssetsAmount).toString(16)}`,\n          };\n\n          const res = await provider?.request({\n            'method': 'eth_sendTransaction',\n            'params': [approveParams],\n          });\n\n          formRef?.setJsonValue('approveResponse', res);\n        }}\n      />\n      <ApiForm.AutoHeightTextArea id=\"approveResponse\" label=\"执行结果\" />\n\n      <ApiForm.Text id=\"withdrawWrapAssetsTitle\" value=\"测试提现 Wrap Assets\" size=\"lg\" />\n      <ApiForm.Field\n        id=\"withdrawWrapAssetsAmount\"\n        type=\"number\"\n        label=\"提现数量(链上最小单位)\"\n        defaultValue=\"10000\"\n      />\n      <ApiForm.Button\n        id=\"withdrawWrapAssetsButton\"\n        label=\"提现 Wrap Assets\"\n        availableDependencyFields={[{ fieldIds: ['withdrawWrapAssetsAmount'] }]}\n        onClick={async (formRef) => {\n          const withdrawWrapAssetsAmount = formRef?.getValue<number>(\n            'withdrawWrapAssetsAmount',\n          );\n\n          const chainIdNumber = parseChainId(chainId);\n          const network = NETWORKS_BY_CHAIN_ID[chainIdNumber as keyof typeof NETWORKS_BY_CHAIN_ID];\n          const tokenContractAddress =\n            WRAPPED_NATIVE_TOKEN[network as keyof typeof WRAPPED_NATIVE_TOKEN];\n\n          const data = `0x2e1a7d4d${new BigNumber(withdrawWrapAssetsAmount).toString(16).padStart(64, '0')}`;\n          const withdrawParams = {\n            from: account?.address,\n            to: tokenContractAddress,\n            data,\n          };\n\n          const res = await provider?.request({\n            'method': 'eth_sendTransaction',\n            'params': [withdrawParams],\n          });\n\n          formRef?.setJsonValue('withdrawResponse', res);\n        }}\n      />\n      <ApiForm.AutoHeightTextArea id=\"withdrawResponse\" label=\"执行结果\" />\n    </ApiForm>\n  );\n};\n","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","import { Tabs, TabsContent, TabsList, TabsTrigger } from \"./ui/tabs\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"./ui/card\";\n\nexport type TabCardProps = {\n    tabs: {\n        label: string;\n        value: string;\n        title: string;\n        description?: string;\n        content: React.ReactNode;\n    }[];\n    defaultValue?: string;\n}\n\nexport default function TabCard({ tabs, defaultValue }: TabCardProps) {\n    return (\n        <Tabs defaultValue={defaultValue || tabs[0]?.value}>\n            <TabsList className={`grid w-full grid-cols-${tabs.length}`}>\n                {tabs.map((tab) => (\n                    <TabsTrigger key={tab.value} value={tab.value}>\n                        {tab.label}\n                    </TabsTrigger>\n                ))}\n            </TabsList>\n            {tabs.map((tab) => (\n                <TabsContent key={tab.value} value={tab.value}>\n                    <Card>\n                        <CardHeader>\n                            <CardTitle>{tab.title}</CardTitle>\n                            {tab.description && (\n                                <CardDescription>{tab.description}</CardDescription>\n                            )}\n                        </CardHeader>\n                        <CardContent className=\"space-y-2\">\n                            {tab.content}\n                        </CardContent>\n                    </Card>\n                </TabsContent>\n            ))}\n        </Tabs>\n    );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { ethers } from 'ethers';\nimport { useWallet } from '../../../connect/WalletContext';\nimport { IEthereumProvider } from '../types';\nimport { ApiForm } from '../../../ApiForm';\nimport TabCard from '../../../TabCard';\n\nimport Contract721 from '../case/contract/contract721.json';\nimport { get } from 'lodash';\nconst { nftsAbi, nftsBytecode } = Contract721;\n\nexport const WalletWatchAssetERC721 = ({ chainId }: { chainId: string | undefined }) => {\n  const { provider, account } = useWallet<IEthereumProvider>();\n\n  let nftsContract: ethers.Contract;\n  let nftsFactory: ethers.ContractFactory;\n\n  return (\n    <ApiForm title=\"wallet_watchAsset ERC721\" description=\"添加 ERC721 资产\">\n      <TabCard\n        tabs={[\n          {\n            label: '部署合约',\n            value: 'deploy',\n            title: '部署 ERC721 合约',\n            description:\n              '部署 ERC721 合约，用于测试 wallet_watchAsset ERC721，尽量使用手续费低的链',\n            content: (\n              <>\n                <ApiForm.Button\n                  id=\"deployButton\"\n                  label=\"部署 ERC721 合约\"\n                  onClick={async (apiFrom) => {\n                    try {\n                      const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n\n                      nftsFactory = new ethers.ContractFactory(\n                        nftsAbi,\n                        nftsBytecode,\n                        ethersProvider.getSigner(),\n                      );\n\n                      nftsContract = await nftsFactory.deploy();\n                      await nftsContract.deployTransaction.wait();\n                    } catch (error) {\n                      const reason = get(error, 'reason', undefined);\n                      const message = get(error, 'message', undefined);\n                      apiFrom?.setJsonValue('deployResponse', reason || message);\n                      throw error;\n                    }\n\n                    if (nftsContract.address === undefined) {\n                      return;\n                    }\n\n                    console.log(\n                      `Contract mined! address: ${nftsContract.address} transactionHash: ${nftsContract.deployTransaction.hash}`,\n                    );\n\n                    apiFrom?.setValue('deployResponse', nftsContract.address);\n                  }}\n                />\n\n                <ApiForm.TextArea id=\"deployResponse\" label=\"部署结果\" />\n\n                <ApiForm.Separator />\n\n                <ApiForm.Field\n                  id=\"mintAmount\"\n                  label=\"铸造数量\"\n                  defaultValue=\"3\"\n                  type=\"number\"\n                  required\n                />\n\n                <ApiForm.Button\n                  id=\"mintButton\"\n                  label=\"铸造\"\n                  onClick={async (apiFrom) => {\n                    const mintAmount = apiFrom?.getValue('mintAmount');\n                    try {\n                      let result = await nftsContract.mintNFTs(mintAmount, {\n                        from: account?.address,\n                      });\n                      result = await result.wait();\n                    } catch (error) {\n                      apiFrom?.setJsonValue('mintResponse', error);\n                      throw error;\n                    }\n\n                    if (nftsContract.address === undefined) {\n                      return;\n                    }\n\n                    apiFrom?.setValue('mintResponse', nftsContract.address);\n                  }}\n                  availableDependencyFields={[{ fieldIds: ['mintAmount'] }]}\n                  validation={{\n                    fields: ['mintAmount'],\n                    validator: (values) => {\n                      if (!values.mintAmount.value) {\n                        return '请输入铸造数量';\n                      }\n                      if (!account) {\n                        return '请连接钱包';\n                      }\n                      if (!nftsContract) {\n                        return '请部署 ERC721 合约';\n                      }\n                    },\n                  }}\n                />\n\n                <ApiForm.TextArea id=\"mintResponse\" label=\"铸造结果\" />\n              </>\n            ),\n          },\n          {\n            label: '使用 ERC721 合约',\n            value: 'use',\n            title: '使用 ERC721 合约',\n            description:\n              '使用当前帐户已经部署的 ERC721 合约，测试 wallet_watchAsset ERC721，在区块浏览器中查找 Owner 为当前帐户的 ERC721 资产，填写 Contract Address 和 TokenId 进行观察',\n            content: <ApiForm.Field id=\"watchContractAddress\" label=\"已经部署的 ERC721 合约地址\" />,\n          },\n        ]}\n      />\n\n      <ApiForm.Text id=\"watchButtonTitle\" value=\"测试添加资产到钱包\" size=\"lg\" />\n      <ApiForm.Field\n        id=\"watchTokenId\"\n        label=\"观察 TokenId\"\n        defaultValue=\"1\"\n        type=\"number\"\n        required\n      />\n\n      <ApiForm.Button\n        id=\"watchButton\"\n        label=\"观察 Asset\"\n        onClick={async (apiFrom) => {\n          const watchTokenId = apiFrom?.getValue('watchTokenId');\n          const watchContractAddress = apiFrom?.getValue('watchContractAddress');\n          const nftsContractAddress = nftsContract?.address ?? watchContractAddress;\n\n          let watchNftsResult;\n          try {\n            watchNftsResult = await provider?.request({\n              method: 'wallet_watchAsset',\n              params: {\n                type: 'ERC721',\n                options: {\n                  address: nftsContractAddress,\n                  tokenId: watchTokenId,\n                },\n              },\n            });\n          } catch (error) {\n            console.error(error);\n          }\n\n          apiFrom?.setValue('watchResponse', JSON.stringify(watchNftsResult, null, 2));\n        }}\n        availableDependencyFields={[\n          {\n            fieldIds: ['watchTokenId'],\n            required: () => {\n              if (!account) {\n                return {\n                  errorMessage: '请连接钱包',\n                };\n              }\n              if (!nftsContract) {\n                return {\n                  errorMessage: '请部署 ERC721 合约',\n                };\n              }\n            },\n          },\n          {\n            fieldIds: ['watchTokenId', 'watchContractAddress'],\n            required: () => {\n              if (!account) {\n                return {\n                  errorMessage: '请连接钱包',\n                };\n              }\n            },\n          },\n        ]}\n      />\n\n      <ApiForm.TextArea id=\"watchResponse\" label=\"观察结果\" />\n      <ApiForm.Separator />\n      {/* 转账功能 */}\n      <ApiForm.Text id=\"transferTitle\" value=\"测试转账 Transfer\" size=\"lg\" />\n      <ApiForm.Field id=\"transferTokenId\" type=\"number\" label=\"转账 Token ID\" defaultValue=\"1\" />\n      <ApiForm.Field id=\"transferTo\" type=\"text\" label=\"转账地址\" defaultValue={account?.address} />\n      <ApiForm.Checkbox id=\"safeTransfer\" label=\"是否安全转账\"/>\n      <ApiForm.Button\n        id=\"transferButton\"\n        label=\"转账\"\n        validation={{\n          fields: ['transferTo', 'transferTokenId'],\n        }}\n        onClick={async (apiFrom) => {\n          const safeTransfer = apiFrom?.getValue<boolean>('safeTransfer');\n\n          const toAddress = apiFrom?.getValue<string>('transferTo');\n          const tokenId = apiFrom?.getValue<number>('transferTokenId');\n          const watchContractAddress = apiFrom?.getValue<string>('watchContractAddress');\n          const contractAddress = nftsContract?.address ?? watchContractAddress;\n\n          if (!contractAddress) {\n            apiFrom?.setJsonValue('transferResponse', '请先部署 ERC721 合约');\n            return;\n          }\n\n          const data = [\n            safeTransfer ? '0x42842e0e' : '0x23b872dd', // safeTransferFrom 方法签名\n            account?.address?.substring(2).padStart(64, '0'),\n            toAddress.substring(2).padStart(64, '0'),\n            BigInt(tokenId).toString(16).padStart(64, '0'),\n          ].join('');\n\n          const params = JSON.stringify({\n            from: account?.address,\n            to: contractAddress,\n            data,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          });\n\n          const res = await provider?.request({\n            method: 'eth_sendTransaction',\n            params: [JSON.parse(params)],\n          });\n          apiFrom?.setJsonValue('transferResponse', res);\n        }}\n      />\n      <ApiForm.AutoHeightTextArea id=\"transferResponse\" label=\"转账结果\" />\n\n      <ApiForm.Separator />\n      <ApiForm.Text id=\"approveTitle\" value=\"测试授权 Approve、Revoke\" size=\"lg\" />\n      <ApiForm.Field id=\"approveTokenId\" type=\"number\" label=\"要授权的 Token ID\" defaultValue=\"1\" />\n      <ApiForm.Field id=\"approveTo\" type=\"text\" label=\"授权地址\" defaultValue={account?.address} />\n      <ApiForm.Button\n        id=\"approveButton\"\n        label=\"授权\"\n        onClick={async (formRef) => {\n          const approveAddress = formRef?.getValue<string>('approveTo');\n          const tokenId = formRef?.getValue<number>('approveTokenId');\n          const watchContractAddress = formRef?.getValue<string>('watchContractAddress');\n          const contractAddress = nftsContract?.address ?? watchContractAddress;\n\n          if (!contractAddress) {\n            formRef?.setJsonValue('approveResponse', '请先部署 ERC721 合约');\n            return;\n          }\n\n          const data = [\n            '0x095ea7b3', // approve 方法签名\n            approveAddress.substring(2).padStart(64, '0'),\n            BigInt(tokenId).toString(16).padStart(64, '0'),\n          ].join('');\n\n          const params = JSON.stringify({\n            from: account?.address,\n            to: contractAddress,\n            data,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          });\n\n          const res = await provider?.request({\n            method: 'eth_sendTransaction',\n            params: [JSON.parse(params)],\n          });\n          formRef?.setJsonValue('approveResponse', res);\n        }}\n      />\n      <ApiForm.AutoHeightTextArea id=\"approveResponse\" label=\"授权结果\" />\n\n      <ApiForm.Separator />\n      <ApiForm.Text id=\"revokeTitle\" value=\"测试撤销 Revoke\" size=\"lg\" />\n      <ApiForm.Field id=\"revokeTokenId\" type=\"number\" label=\"撤销 TokenId\" defaultValue=\"1\" />\n      <ApiForm.Button\n        id=\"revokeButton\"\n        label=\"撤销\"\n        onClick={async (formRef) => {\n          const tokenId = formRef?.getValue<number>('revokeTokenId');\n          const watchContractAddress = formRef?.getValue<string>('watchContractAddress');\n          const contractAddress = nftsContract?.address ?? watchContractAddress;\n\n          if (!contractAddress) {\n            formRef?.setJsonValue('revokeResponse', '请先部署 ERC721 合约');\n            return;\n          }\n\n          const data = [\n            '0x095ea7b3', // approve 方法签名\n            '0'.padStart(64, '0'),\n            BigInt(tokenId).toString(16).padStart(64, '0'),\n          ].join('');\n\n          const params = JSON.stringify({\n            from: account?.address,\n            to: contractAddress,\n            data,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          });\n\n          const res = await provider?.request({\n            method: 'eth_sendTransaction',\n            params: [JSON.parse(params)],\n          });\n          formRef?.setJsonValue('revokeResponse', res);\n        }}\n      />\n      <ApiForm.AutoHeightTextArea id=\"revokeResponse\" label=\"撤销结果\" />\n\n      <ApiForm.Separator />\n      <ApiForm.Text id=\"approveAllTitle\" value=\"测试授权 All\" size=\"lg\" />\n      <ApiForm.Field id=\"approveAllTo\" label=\"授权地址\" defaultValue={account?.address} required />\n      <ApiForm.Button\n        id=\"approveAllButton\"\n        label=\"授权 All\"\n        onClick={async (formRef) => {\n          const approveAllTo = formRef?.getValue<string>('approveAllTo');\n          const watchContractAddress = formRef?.getValue<string>('watchContractAddress');\n          const contractAddress = nftsContract?.address ?? watchContractAddress;\n\n          if (!contractAddress) {\n            formRef?.setJsonValue('approveAllResponse', '请先部署 ERC721 合约');\n            return;\n          }\n\n          const data = [\n            '0xa22cb465', // approve 方法签名\n            approveAllTo?.padStart(64, '0'),\n            BigInt(1).toString(16).padStart(64, '0'),\n          ].join('');\n\n          const params = JSON.stringify({\n            from: account?.address,\n            to: contractAddress,\n            data,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          });\n\n          const res = await provider?.request({\n            method: 'eth_sendTransaction',\n            params: [JSON.parse(params)],\n          });\n          formRef?.setJsonValue('approveAllResponse', res);\n        }}\n      />\n      <ApiForm.AutoHeightTextArea id=\"approveAllResponse\" label=\"授权 All 结果\" />\n\n      <ApiForm.Separator />\n      <ApiForm.Text id=\"revokeAllTitle\" value=\"测试撤销 All 授权\" size=\"lg\" />\n      <ApiForm.Field id=\"revokeAllTo\" label=\"撤销地址\" defaultValue={account?.address} required />\n      <ApiForm.Button\n        id=\"revokeAllButton\"\n        label=\"撤销 All\"\n        onClick={async (formRef) => {\n          const revokeAllTo = formRef?.getValue<string>('revokeAllTo');\n          const watchContractAddress = formRef?.getValue<string>('watchContractAddress');\n          const contractAddress = nftsContract?.address ?? watchContractAddress;\n\n          if (!contractAddress) {\n            formRef?.setJsonValue('revokeAllResponse', '请先部署 ERC721 合约');\n            return;\n          }\n\n          const data = [\n            '0xa22cb465', // approve 方法签名\n            revokeAllTo?.padStart(64, '0'),\n            BigInt(0).toString(16).padStart(64, '0'),\n          ].join('');\n\n          const params = JSON.stringify({\n            from: account?.address,\n            to: contractAddress,\n            data,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          });\n\n          const res = await provider?.request({\n            method: 'eth_sendTransaction',\n            params: [JSON.parse(params)],\n          });\n          formRef?.setJsonValue('revokeAllResponse', res);\n        }}\n      />\n      <ApiForm.AutoHeightTextArea id=\"revokeAllResponse\" label=\"撤销 All 授权结果\" />\n    </ApiForm>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nconst { erc1155Abi, erc1155Bytecode } = Contract1155;\nimport { useRef } from 'react';\nimport Contract1155 from '../case/contract/contract1155.json';\nimport { IEthereumProvider } from '../types';\nimport { useWallet } from '../../../connect/WalletContext';\nimport { ethers } from 'ethers';\nimport { ApiForm, ApiFormRef } from '../../../ApiForm';\nimport TabCard from '../../../TabCard';\nimport { get } from 'lodash';\n\nexport const WalletWatchAssetERC1155 = ({ chainId }: { chainId: string | undefined }) => {\n  const apiFromRef = useRef<ApiFormRef>(null);\n\n  const { provider, account } = useWallet<IEthereumProvider>();\n\n  let erc1155Contract: ethers.Contract;\n  let erc1155Factory: ethers.ContractFactory;\n\n  return (\n    <ApiForm\n      title=\"wallet_watchAsset ERC1155\"\n      description=\"添加 ERC1155 资产 尽量使用手续费低的链\"\n      ref={apiFromRef}\n    >\n      <TabCard\n        tabs={[\n          {\n            label: '部署合约',\n            value: 'deploy',\n            title: '部署 ERC1155 合约',\n            description:\n              '部署 ERC1155 合约，用于测试 wallet_watchAsset ERC1155，尽量使用手续费低的链',\n            content: (\n              <>\n                <ApiForm.Button\n                  id=\"deployButton\"\n                  label=\"部署 ERC1155 合约\"\n                  onClick={async () => {\n                    try {\n                      const ethersProvider = new ethers.providers.Web3Provider(provider, 'any');\n\n                      erc1155Factory = new ethers.ContractFactory(\n                        erc1155Abi,\n                        erc1155Bytecode,\n                        ethersProvider.getSigner(),\n                      );\n\n                      erc1155Contract = await erc1155Factory.deploy();\n                      await erc1155Contract.deployTransaction.wait();\n                    } catch (error) {\n                      const reason = get(error, 'reason', undefined);\n                      const message = get(error, 'message', undefined);\n                      apiFromRef.current?.setJsonValue('deployResponse', reason || message);\n                      throw error;\n                    }\n\n                    if (erc1155Contract.address === undefined) {\n                      return;\n                    }\n\n                    console.log(\n                      `Contract mined! address: ${erc1155Contract.address} transactionHash: ${erc1155Contract.deployTransaction.hash}`,\n                    );\n\n                    apiFromRef.current?.setValue('deployResponse', erc1155Contract.address);\n                  }}\n                />\n\n                <ApiForm.TextArea id=\"deployResponse\" label=\"部署结果\" />\n\n                <ApiForm.Separator />\n\n                <ApiForm.Field\n                  id=\"mintTokenId\"\n                  label=\"铸造的 Token IDs\"\n                  defaultValue=\"1, 2, 3\"\n                  required\n                />\n\n                <ApiForm.Field\n                  id=\"mintAmount\"\n                  label=\"Token IDs 对应铸造数量\"\n                  defaultValue=\"1, 10, 100\"\n                  required\n                />\n\n                <ApiForm.Button\n                  id=\"mintButton\"\n                  label=\"铸造\"\n                  onClick={async () => {\n                    const mintTokenIds = apiFromRef.current?.getValue('mintTokenId');\n                    const mintAmounts = apiFromRef.current?.getValue('mintAmount');\n                    try {\n                      const params = [\n                        account?.address,\n                        mintTokenIds.split(',').map(Number),\n                        mintAmounts.split(',').map(Number),\n                        '0x',\n                      ];\n                      let result = await erc1155Contract.mintBatch(...params);\n                      result = await result.wait();\n\n                      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                      console.log('mint success', result);\n                    } catch (error) {\n                      const reason = get(error, 'reason', undefined);\n                      const message = get(error, 'message', undefined);\n                      apiFromRef.current?.setJsonValue('mintResponse', reason || message);\n                      throw error;\n                    }\n\n                    if (erc1155Contract.address === undefined) {\n                      return;\n                    }\n\n                    apiFromRef.current?.setValue('mintResponse', erc1155Contract.address);\n                  }}\n                  availableDependencyFields={[{ fieldIds: ['mintTokenId', 'mintAmount'] }]}\n                  validation={{\n                    fields: ['mintTokenId', 'mintAmount'],\n                    validator: (values) => {\n                      if (!values.mintTokenId.value) {\n                        return '请输入铸造的 Token IDs';\n                      }\n                      if (!values.mintAmount.value) {\n                        return '请输入铸造数量';\n                      }\n\n                      if (\n                        values.mintTokenId.value.split(',').length !==\n                        values.mintAmount.value.split(',').length\n                      ) {\n                        return '铸造的 Token IDs 和铸造数量数量不一致';\n                      }\n\n                      if (!account) {\n                        return '请连接钱包';\n                      }\n                      if (!erc1155Contract) {\n                        return '请部署 ERC1155 合约';\n                      }\n                    },\n                  }}\n                />\n\n                <ApiForm.TextArea id=\"mintResponse\" label=\"铸造结果\" />\n              </>\n            ),\n          },\n          {\n            label: '使用 ERC1155 合约',\n            value: 'use',\n            title: '使用 ERC1155 合约',\n            description:\n              '使用当前帐户已经部署的 ERC1155 合约，测试 wallet_watchAsset ERC1155，在区块浏览器中查找 Owner 为当前帐户的 ERC1155 资产，填写 Contract Address 和 TokenId 进行观察',\n            content: (\n              <ApiForm.Field id=\"watchContractAddress\" label=\"已经部署的 ERC1155 合约地址\" />\n            ),\n          },\n        ]}\n      />\n\n      <ApiForm.Separator />\n      <ApiForm.Text id=\"watchTokenIdTitle\" value=\"测试观察 TokenId\" size=\"lg\" />\n      <ApiForm.Field\n        id=\"watchTokenId\"\n        label=\"观察 TokenId\"\n        defaultValue=\"1\"\n        type=\"number\"\n        required\n      />\n\n      <ApiForm.Button\n        id=\"watchButton\"\n        label=\"观察 Asset\"\n        onClick={async () => {\n          const watchContractAddress = apiFromRef.current?.getValue('watchContractAddress');\n          const nftsContractAddress = erc1155Contract?.address ?? watchContractAddress;\n\n          const watchTokenId = apiFromRef.current?.getValue('watchTokenId');\n          let watchNftsResult;\n          try {\n            watchNftsResult = await provider?.request({\n              method: 'wallet_watchAsset',\n              params: {\n                type: 'ERC1155',\n                options: {\n                  address: nftsContractAddress,\n                  tokenId: watchTokenId,\n                },\n              },\n            });\n          } catch (error) {\n            console.error(error);\n          }\n\n          apiFromRef.current?.setValue('watchResponse', JSON.stringify(watchNftsResult, null, 2));\n        }}\n        availableDependencyFields={[{ fieldIds: ['watchTokenId'] }]}\n        validation={{\n          fields: ['watchTokenId', 'watchContractAddress'],\n          validator: (values) => {\n            if (!values.watchTokenId.value) {\n              return '请输入观察 TokenId';\n            }\n            if (!account) {\n              return '请连接钱包';\n            }\n            if (!erc1155Contract && !values.watchContractAddress?.value) {\n              return '请部署 ERC1155 合约 或 填写已经部署的 ERC1155 合约地址';\n            }\n          },\n        }}\n      />\n\n      <ApiForm.TextArea id=\"watchResponse\" label=\"观察结果\" />\n\n      <ApiForm.Separator />\n      {/* ERC1155 转账示例 */}\n      <ApiForm.Text id=\"transferTokenIdTitle\" value=\"测试转账 TokenId\" size=\"lg\" />\n      <ApiForm.Field\n        id=\"transferTo\"\n        label=\"转账接收地址\"\n        defaultValue={account?.address}\n        required\n      />\n      <ApiForm.Field\n        id=\"transferTokenId\"\n        label=\"转账 TokenId\"\n        defaultValue=\"1\"\n        type=\"number\"\n        required\n      />\n      <ApiForm.Field id=\"transferAmount\" label=\"转账数量\" defaultValue=\"1\" type=\"number\" required />\n\n      <ApiForm.Button\n        id=\"transferButton\"\n        label=\"转账\"\n        onClick={async () => {\n          const transferTo = apiFromRef.current?.getValue<string>('transferTo');\n          const transferTokenId = apiFromRef.current?.getValue<number>('transferTokenId');\n          const transferAmount = apiFromRef.current?.getValue<number>('transferAmount');\n\n          const watchContractAddress = apiFromRef.current?.getValue<string>('watchContractAddress');\n          const nftsContractAddress = erc1155Contract?.address ?? watchContractAddress;\n\n          if (!transferTo) {\n            apiFromRef.current?.setJsonValue('transferResponse', '请输入转账接收地址');\n            return;\n          }\n\n          /*\n            拼接 ERC1155 safeTransferFrom 调用数据：\n            函数定义：safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes data)\n            函数选择器：0xf242432a\n            参数编码：\n              - address 参数：去掉 0x 后，左侧填充 0 至 64 位\n              - uint256 参数使用十六进制表示，左侧填充 0 至 64 位\n              - bytes 参数采用动态类型编码，若为空 bytes 则：\n                静态部分存放 offset (固定为 0x80，即 128，填充至 64 位)；\n                动态部分先写入 bytes 长度 (此处为 0)，再跟后面空数据。\n            最终数据 = selector + from + to + tokenId + amount + offset + 动态部分 (长度为 0)\n          */\n          const functionSelector = '0xf242432a';\n          const fromPadded = account?.address?.substring(2).toLowerCase().padStart(64, '0');\n          const toPadded = transferTo?.substring(2).toLowerCase().padStart(64, '0');\n          const tokenIdHex = BigInt(transferTokenId).toString(16).padStart(64, '0');\n          const amountHex = BigInt(transferAmount).toString(16).padStart(64, '0');\n          // 动态参数 offset 固定为 0x80（128 的十六进制，填充到 32 字节）\n          const offset = '0000000000000000000000000000000000000000000000000000000000000080';\n          // 动态部分：bytes 参数的长度（0）填充 32 字节\n          const emptyBytesLength =\n            '0000000000000000000000000000000000000000000000000000000000000000';\n          const callData =\n            functionSelector +\n            fromPadded +\n            toPadded +\n            tokenIdHex +\n            amountHex +\n            offset +\n            emptyBytesLength;\n\n          const txParams = {\n            from: account?.address,\n            to: nftsContractAddress,\n            data: callData,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          };\n\n          const tx = await provider?.request({\n            method: 'eth_sendTransaction',\n            params: [txParams],\n          });\n\n          apiFromRef.current?.setValue('transferResponse', tx);\n        }}\n      />\n\n      <ApiForm.TextArea id=\"transferResponse\" label=\"转账结果\" />\n\n      <ApiForm.Separator />\n      <ApiForm.Text id=\"approveTokenIdTitle\" value=\"测试授权 Token 给其他地址\" size=\"lg\" />\n      <ApiForm.Field id=\"approveTo\" label=\"授权接收地址\" defaultValue={account?.address} required />\n\n      <ApiForm.Button\n        id=\"approveButton\"\n        label=\"授权\"\n        availableDependencyFields={[\n          {\n            fieldIds: ['approveTo', 'watchContractAddress'],\n            required: () => {\n              if (account) {\n                return {\n                  errorMessage: '请连接钱包',\n                };\n              }\n              return {\n                errorMessage: '请填写已经部署的 ERC1155 合约地址',\n              };\n            },\n          },\n          {\n            fieldIds: ['approveTo'],\n            required: () => {\n              if (account) {\n                return {\n                  errorMessage: '请连接钱包',\n                };\n              }\n              if (!erc1155Contract) {\n                return {\n                  errorMessage: '请部署 ERC1155 合约',\n                };\n              }\n              return {\n                errorMessage: '请输入授权接收地址',\n              };\n            },\n          },\n        ]}\n        onClick={async (apiForm) => {\n          const approveTo = apiForm?.getValue<string>('approveTo');\n          const contractAddress =\n            erc1155Contract?.address || apiForm?.getValue<string>('watchContractAddress');\n          if (!contractAddress) {\n            apiForm?.setJsonValue('approvalResponse', '请先部署 ERC1155 合约或填写合约地址');\n            return;\n          }\n\n          // 拼接 setApprovalForAll(address operator, bool approved)\n          const data = [\n            '0xa22cb465', // approve 方法签名\n            approveTo.substring(2).padStart(64, '0'),\n            BigInt(1).toString(16).padStart(64, '0'),\n          ].join('');\n\n          const txParams = {\n            from: account?.address,\n            to: contractAddress,\n            data: data,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          };\n\n          const tx = await provider?.request({\n            method: 'eth_sendTransaction',\n            params: [txParams],\n          });\n\n          apiForm?.setValue('approvalResponse', tx);\n        }}\n      />\n\n      <ApiForm.TextArea id=\"approvalResponse\" label=\"授权结果\" />\n\n      <ApiForm.Separator />\n      <ApiForm.Text id=\"balanceTokenIdTitle\" value=\"测试取消授权 Token\" size=\"lg\" />\n      <ApiForm.Field\n        id=\"unapproveAddress\"\n        label=\"取消授权地址\"\n        defaultValue={account?.address}\n        required\n      />\n\n      <ApiForm.Button\n        id=\"unapproveButton\"\n        label=\"取消授权\"\n        onClick={async (apiForm) => {\n          const unapproveAddress = apiForm?.getValue<string>('unapproveAddress');\n          const contractAddress =\n            erc1155Contract?.address || apiForm?.getValue<string>('watchContractAddress');\n          if (!contractAddress) {\n            apiForm?.setJsonValue('unapprovalResponse', '请先部署 ERC1155 合约或填写合约地址');\n            return;\n          }\n\n          // 拼接 setApprovalForAll(address operator, bool approved)\n          const data = [\n            '0xa22cb465', // approve 方法签名\n            unapproveAddress?.substring(2).padStart(64, '0'),\n            BigInt(0).toString(16).padStart(64, '0'),\n          ].join('');\n          const txParams = {\n            from: account?.address,\n            to: contractAddress,\n            data: data,\n            value: '0x0',\n            gasLimit: '0x186a0',\n            gasPrice: '0xbebc200',\n          };\n\n          const tx = await provider?.request({\n            method: 'eth_sendTransaction',\n            params: [txParams],\n          });\n\n          apiForm?.setValue('unapprovalResponse', tx);\n        }}\n      />\n\n      <ApiForm.TextArea id=\"unapprovalResponse\" label=\"取消授权结果\" />\n    </ApiForm>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-inferrable-types */\n/* eslint-disable @typescript-eslint/no-unsafe-call, @typescript-eslint/restrict-template-expressions */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return */\nimport { dapps } from './dapps.config';\nimport ConnectButton from '../../../components/connect/ConnectButton';\nimport { useEffect, useRef } from 'react';\nimport { get } from 'lodash';\nimport { IEIP6963AnnounceProviderEvent, IEIP6963ProviderDetail, IEthereumProvider } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../../components/connect/WalletContext';\nimport type { IKnownWallet } from '../../../components/connect/types';\nimport DappList from '../../../components/DAppList';\nimport params from './params';\nimport { ecrecover, pubToAddress, toBuffer, bufferToHex } from 'ethereumjs-util';\nimport {\n  SignTypedDataVersion,\n  recoverPersonalSignature,\n  recoverTypedSignature,\n} from '@metamask/eth-sig-util';\nimport { toast } from '../../ui/use-toast';\nimport { parseChainId } from './utils';\nimport maliciousCases from './case/transfer/malicious';\nimport malformedCases from './case/transfer/malformed';\nimport uniswapV2Cases from './case/transfer/uniswapV2';\nimport uniswapUniversalCases from './case/transfer/uniswapUniversal';\nimport sushiSwapCases from './case/transfer/sushiswap';\nimport morphoCases from './case/transfer/morpho';\nimport inchV5Cases from './case/transfer/inchV5';\nimport inchV6Cases from './case/transfer/inchV6';\nimport okxCases from './case/transfer/okx';\nimport {\n  checkSupportNetwork,\n  getSupportNetworkNames,\n  MALICIOUS_ADDRESS,\n} from './case/contract/SampleContracts';\nimport { WalletWatchAsset, WrapAssets } from './components/ERC20';\nimport { WalletWatchAssetERC721 } from './components/ERC721';\nimport { WalletWatchAssetERC1155 } from './components/ERC1155';\n\nexport default function Example() {\n  const walletsRef = useRef<IEIP6963ProviderDetail[]>([\n    {\n      info: {\n        uuid: 'injected',\n        name: 'Injected Wallet (EIP1193)',\n        inject: 'ethereum',\n      },\n    },\n    {\n      info: {\n        uuid: 'injected-onekey',\n        name: 'Injected OneKey (EIP1193)',\n        inject: '$onekey.ethereum',\n      },\n    },\n  ]);\n\n  const { provider, account, setAccount } = useWallet<IEthereumProvider>();\n\n  const onConnectWallet = async (selectedWallet: IKnownWallet) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const providerDetail = walletsRef.current?.find((w) => w.info.uuid === selectedWallet.id);\n    if (!providerDetail) {\n      return Promise.reject('Wallet not found');\n    }\n\n    const provider =\n      providerDetail.provider ??\n      (get(window, providerDetail.info.inject) as IEthereumProvider | undefined);\n\n    if (!provider) {\n      toast({\n        title: 'Wallet not found',\n        description: 'Please install the wallet extension',\n      });\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining\n    const [address] = (await provider?.request({\n      'method': 'eth_requestAccounts',\n      'params': [],\n    })) as string[];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const chainId = (await provider?.request({\n      'method': 'eth_chainId',\n      'params': [],\n    })) as string;\n\n    return {\n      provider,\n      address,\n      chainId,\n    };\n  };\n\n  useEffect(() => {\n    const listener = (event: IEIP6963AnnounceProviderEvent) => {\n      console.log('evm eip6963 [listener]', event);\n      const { info, provider } = event.detail;\n      const wallet = walletsRef.current.find((wallet) => wallet.info.uuid === info.uuid);\n      if (!wallet) {\n        walletsRef.current = [\n          ...walletsRef.current,\n          {\n            info,\n            provider,\n          },\n        ];\n      }\n    };\n\n    // @ts-expect-error\n    window.addEventListener('eip6963:announceProvider', listener);\n\n    window.dispatchEvent(new Event('eip6963:requestProvider'));\n\n    return () => {\n      // @ts-expect-error\n      window.removeEventListener('eip6963:announceProvider', listener);\n    };\n  }, []);\n\n  useEffect(() => {\n    const accountsChangedHandler = (accounts: string[]) => {\n      console.log('evm [accountsChanged]', accounts);\n\n      if (accounts.length) {\n        setAccount({\n          ...account,\n          address: accounts[0],\n        });\n      }\n    };\n\n    const chainChangedHandler = (chainId: string) => {\n      console.log('evm [chainChanged]', chainId);\n\n      if (chainId) {\n        setAccount({\n          ...account,\n          chainId: chainId,\n        });\n      }\n    };\n    const connectHandler = (connectInfo: any) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      console.log('evm [connect]', connectInfo);\n    };\n    const disconnectHandler = (error: any) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      console.log('evm [disconnect]', error);\n    };\n\n    provider?.on('accountsChanged', accountsChangedHandler);\n    provider?.on('chainChanged', chainChangedHandler);\n    provider?.on('connect', connectHandler);\n    provider?.on('disconnect', disconnectHandler);\n\n    return () => {\n      provider?.removeListener('accountsChanged', accountsChangedHandler);\n      provider?.removeListener('chainChanged', chainChangedHandler);\n      provider?.removeListener('connect', connectHandler);\n      provider?.removeListener('disconnect', disconnectHandler);\n    };\n  }, [account, provider, setAccount]);\n\n  const requestSendTransactionCommon = async (request: string) => {\n    return await provider?.request({\n      'method': 'eth_sendTransaction',\n      'params': [JSON.parse(request)],\n    });\n  };\n\n  return (\n    <>\n      <ConnectButton<IEthereumProvider>\n        fetchWallets={() => {\n          return Promise.resolve(\n            walletsRef.current.map((wallet) => {\n              return {\n                id: wallet.info.uuid,\n                name: wallet.info.inject ? wallet.info.name : `${wallet.info.name} (EIP6963)`,\n                logo: wallet.info.icon,\n              };\n            }),\n          );\n        }}\n        onConnect={onConnectWallet}\n      />\n\n      <ApiGroup title=\"Basics\">\n        <ApiPayload\n          title=\"wallet_requestPermissions\"\n          description=\"获取账户权限\"\n          presupposeParams={params.requestPermissions}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'wallet_requestPermissions',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"eth_requestAccounts\"\n          description=\"获取账户\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request({\n              'method': 'eth_requestAccounts',\n              'params': [],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_getPermissions\"\n          description=\"（暂不支持）获取权限\"\n          disableRequestContent\n          onExecute={async () => {\n            const res = await provider?.request({\n              'method': 'wallet_getPermissions',\n              'params': [],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_revokePermissions\"\n          description=\"删除权限\"\n          presupposeParams={params.revokePermissions}\n          onExecute={async (param) => {\n            const res = await provider?.request({\n              'method': 'wallet_revokePermissions',\n              'params': [JSON.parse(param)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"eth_coinbase\"\n          description=\"返回 coinbase 地址\"\n          disableRequestContent\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'eth_coinbase',\n              'params': [],\n            });\n            return res as string;\n          }}\n        />\n        <ApiPayload\n          title=\"eth_accounts\"\n          description=\"返回地址\"\n          disableRequestContent\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'eth_accounts',\n              'params': [],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"eth_chainId\"\n          description=\"返回 chainId\"\n          disableRequestContent\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'eth_chainId',\n              'params': [],\n            });\n            return res as string;\n          }}\n        />\n        <ApiPayload\n          title=\"net_version\"\n          description=\"返回 net version\"\n          disableRequestContent\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'net_version',\n              'params': [],\n            });\n            return res as string;\n          }}\n        />\n        <ApiPayload\n          title=\"isConnected\"\n          description=\"isConnected\"\n          disableRequestContent\n          allowCallWithoutProvider\n          onExecute={async (request: string) => {\n            // @ts-expect-error\n            const res = (await provider?.isConnected()) ?? false;\n            return res as string;\n          }}\n        />\n        <ApiPayload\n          title=\"request\"\n          description=\"request 调用 eth 各种 RPC 方法\"\n          presupposeParams={params.requestMothed}\n          onExecute={async (request: string) => {\n            const requestObj = JSON.parse(request);\n            const res = await provider?.request({\n              method: requestObj.method,\n              params: requestObj.params,\n            });\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Chain\">\n        <ApiPayload\n          title=\"wallet_addEthereumChain\"\n          description=\"(暂不支持) 添加 Chain\"\n          presupposeParams={params.addEthereumChain}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'wallet_addEthereumChain',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"wallet_switchEthereumChain\"\n          description=\"切换 Chain\"\n          presupposeParams={params.switchEthereumChain}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'wallet_switchEthereumChain',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n\n        <ApiPayload\n          title=\"添加自定义网络\"\n          description=\"添加并切换到自定义 EVM 网络，请替换rpc和chainId\"\n          presupposeParams={[\n            {\n              id: 'networkConfig',\n              name: '网络配置',\n              value: JSON.stringify(\n                {\n                  chainId: '0x32', // 80\n                  // chainName: \"XDC\",\n                  // nativeCurrency: {\n                  //   name: \"XDC\",\n                  //   symbol: \"XDC\",\n                  //   decimals: 18\n                  // },\n                  rpcUrls: ['https://rpc1.xinfin.network'],\n                  // blockExplorerUrls: [\"https://explorer.testnet.test\"]\n                },\n                null,\n                2,\n              ),\n              description: '自定义网络配置（可编辑）',\n            },\n          ]}\n          onExecute={async (request: string) => {\n            try {\n              // 先尝试添加网络\n              await provider?.request({\n                method: 'wallet_addEthereumChain',\n                params: [JSON.parse(request)],\n              });\n\n              // 添加成功后再切换网络\n              await provider?.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: JSON.parse(request).chainId }],\n              });\n\n              return '网络添加并切换成功';\n            } catch (error: any) {\n              console.error('添加/切换网络失败:', error);\n              throw error;\n            }\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Sign Message\">\n        <ApiPayload\n          title=\"eth_getEncryptionPublicKey\"\n          description=\"（已经弃用）获取公钥\"\n          onExecute={async () => {\n            const res = await provider?.request({\n              'method': 'eth_getEncryptionPublicKey',\n              'params': [account.address],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"eth_decrypt\"\n          description=\"（已经弃用）ethDecrypt\"\n          presupposeParams={params.ethDecrypt}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_decrypt',\n              'params': [request, account.address],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n\n        <ApiPayload\n          title=\"eth_sign\"\n          description=\"存在严重安全风险，已经废弃（硬件无法使用）\"\n          presupposeParams={params.ethSign}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_sign',\n              'params': [account.address, request],\n            });\n            return res as string;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const signatureBuffer = toBuffer(response);\n            const r = signatureBuffer.slice(0, 32);\n            const s = signatureBuffer.slice(32, 64);\n            const v = bufferToHex(signatureBuffer.slice(64, 65));\n\n            const publicKey = ecrecover(toBuffer(request), v, r, s);\n            const addrBuf = pubToAddress(publicKey);\n            const recoveredAddress = bufferToHex(addrBuf);\n\n            console.log('recoveredAddress', recoveredAddress, account?.address);\n\n            return Promise.resolve(\n              (recoveredAddress?.toLowerCase() === account?.address?.toLowerCase()).toString(),\n            );\n          }}\n        />\n\n        <ApiPayload\n          title=\"personal_sign\"\n          description=\"personal_sign\"\n          presupposeParams={params.personalSign}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'personal_sign',\n              'params': [request, account.address, 'Example password'],\n            });\n            return res as string;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const res = recoverPersonalSignature({ data: request, signature: response });\n            return Promise.resolve((res === account.address).toString());\n          }}\n        />\n\n        <ApiPayload\n          title=\"personal_ecRecover\"\n          description=\"通过 personal_sign 签名的数据恢复地址\"\n          presupposeParams={params.personalEcRecover}\n          onExecute={async (request) => {\n            const requestObj = JSON.parse(request);\n            const res = await provider?.request({\n              'method': 'personal_ecRecover',\n              'params': [requestObj.message, requestObj.signature],\n            });\n            return res as string;\n          }}\n          onValidate={async (request: string, response: string) => {\n            return Promise.resolve((response === account.address).toString());\n          }}\n        />\n\n        <ApiPayload\n          title=\"eth_signTypedData\"\n          description=\"SignTypedData v1\"\n          presupposeParams={params.signTypedData}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'eth_signTypedData',\n              'params': [JSON.parse(request), account.address],\n            });\n            return res as string;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const res = recoverTypedSignature({\n              data: JSON.parse(request),\n              signature: response,\n              version: SignTypedDataVersion.V1,\n            });\n            return Promise.resolve((res === account.address).toString());\n          }}\n        />\n\n        <ApiPayload\n          title=\"eth_signTypedData_v3\"\n          description=\"SignTypedData V3\"\n          // @ts-expect-error\n          presupposeParams={params.signTypedDataV3(Number(account?.chainId ?? '0x1', 'hex'))}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'eth_signTypedData_v3',\n              'params': [account.address, request],\n            });\n            return res as string;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const res = recoverTypedSignature({\n              data: JSON.parse(request),\n              signature: response,\n              version: SignTypedDataVersion.V3,\n            });\n            return Promise.resolve((res === account.address).toString());\n          }}\n        />\n\n        <ApiPayload\n          title=\"eth_signTypedData_v4\"\n          description=\"SignTypedData V4\"\n          // @ts-expect-error\n          presupposeParams={params.signTypedDataV4(Number(account?.chainId ?? '0x1', 'hex'))}\n          onExecute={async (request) => {\n            const res = await provider?.request({\n              'method': 'eth_signTypedData_v4',\n              'params': [account.address, request],\n            });\n            return res as string;\n          }}\n          onValidate={async (request: string, response: string) => {\n            const res = recoverTypedSignature({\n              data: JSON.parse(request),\n              signature: response,\n              version: SignTypedDataVersion.V4,\n            });\n            return Promise.resolve((res === account.address).toString());\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Transaction\">\n        <ApiPayload\n          title=\"eth_signTransaction\"\n          description=\"(不支持)签名交易\"\n          presupposeParams={params.sendTransaction(account?.address ?? '', account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_signTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"eth_sendTransaction\"\n          description=\"发送交易\"\n          presupposeParams={params.sendTransaction(account?.address ?? '', account?.address ?? '')}\n          onExecute={requestSendTransactionCommon}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"ERC20、ERC721、ERC1155 代币操作\">\n        <WalletWatchAsset chainId={account?.chainId} />\n        <WalletWatchAssetERC721 chainId={account?.chainId} />\n        <WalletWatchAssetERC1155 chainId={account?.chainId} />\n        <WrapAssets chainId={account?.chainId} />\n      </ApiGroup>\n\n      <ApiGroup title=\"主流 dApp 操作模拟,只能验证交易解析，大部分用例无法执行交易\">\n        <ApiPayload\n          title=\"UniSwap V2\"\n          description=\"测试 UniSwap V2 交易\"\n          presupposeParams={uniswapV2Cases.sendTransaction(\n            account?.address ?? '',\n            account?.address ?? '',\n            account?.chainId,\n          )}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_sendTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"UniSwap Universal\"\n          description=\"测试 UniSwap Universal 交易\"\n          presupposeParams={uniswapUniversalCases.sendTransaction(\n            account?.address ?? '',\n            account?.address ?? '',\n            account?.chainId,\n          )}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_sendTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"SushiSwap\"\n          description=\"测试 SushiSwap 交易\"\n          presupposeParams={sushiSwapCases.sendTransaction(\n            account?.address ?? '',\n            account?.address ?? '',\n            account?.chainId,\n          )}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_sendTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"Morpho\"\n          description=\"测试 Morpho 交易\"\n          presupposeParams={morphoCases.sendTransaction(\n            account?.address ?? '',\n            account?.address ?? '',\n            account?.chainId,\n          )}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_sendTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"InchV5\"\n          description=\"测试 InchV5 交易\"\n          presupposeParams={inchV5Cases.sendTransaction(\n            account?.address ?? '',\n            account?.address ?? '',\n            account?.chainId,\n          )}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_sendTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"InchV6\"\n          description=\"测试 InchV6 交易\"\n          presupposeParams={inchV6Cases.sendTransaction(\n            account?.address ?? '',\n            account?.address ?? '',\n            account?.chainId,\n          )}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_sendTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"OKX\"\n          description=\"测试 OKX 交易\"\n          presupposeParams={okxCases.sendTransaction(\n            account?.address ?? '',\n            account?.address ?? '',\n            account?.chainId,\n          )}\n          onExecute={async (request: string) => {\n            const res = await provider?.request({\n              'method': 'eth_sendTransaction',\n              'params': [JSON.parse(request)],\n            });\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"PPOM 恶意交易签名测试\">\n        <ApiPayload\n          title=\"eth_sendTransaction\"\n          description=\"测试风险 Native 交易\"\n          onExecute={requestSendTransactionCommon}\n          presupposeParams={maliciousCases.sendTransaction(\n            account?.address ?? '',\n            MALICIOUS_ADDRESS,\n          )}\n        />\n\n        <ApiPayload\n          title=\"eth_sendTransaction\"\n          description=\"测试风险合约调用\"\n          onExecute={(request: string) => {\n            if (!checkSupportNetwork(parseChainId(account?.chainId))) {\n              return Promise.resolve(`不支持的网络: 支持 ${getSupportNetworkNames().join(', ')}`);\n            }\n            return requestSendTransactionCommon(request);\n          }}\n          presupposeParams={maliciousCases.sendTransactionERC20(\n            account?.address ?? '',\n            account?.chainId ?? '',\n          )}\n        />\n\n        <ApiPayload\n          title=\"eth_signTypedData_v4\"\n          description=\"测试风险 eth_signTypedData_v4 交易\"\n          onExecute={async (request: string) => {\n            if (!checkSupportNetwork(parseChainId(account?.chainId))) {\n              return `不支持的网络: 支持 ${getSupportNetworkNames().join(', ')}`;\n            }\n            return await provider?.request({\n              'method': 'eth_signTypedData_v4',\n              'params': [account.address, request],\n            });\n          }}\n          presupposeParams={maliciousCases.signTypedData(\n            account?.address ?? '',\n            parseInt(account?.chainId ?? '0x1', 16),\n          )}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"参数缺失或不正确的交易 & 签名 （此部分交易都应该报错 或 无法执行）\">\n        <ApiPayload\n          title=\"eth_sendTransaction\"\n          description=\"测试参数错误的 Native 交易\"\n          onExecute={requestSendTransactionCommon}\n          presupposeParams={malformedCases.sendTransaction(\n            account?.address ?? '',\n            MALICIOUS_ADDRESS,\n          )}\n        />\n\n        <ApiPayload\n          title=\"eth_signTypedData_v4\"\n          description=\"测试参数错误的 eth_signTypedData_v4 交易\"\n          onExecute={async (request: string) => {\n            return await provider?.request({\n              'method': 'eth_signTypedData_v4',\n              'params': [account.address, request],\n            });\n          }}\n          presupposeParams={malformedCases.signTypedData(\n            account?.address ?? '',\n            parseInt(account?.chainId ?? '0x1', 16),\n          )}\n        />\n      </ApiGroup>\n\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["SafeTxMultiSigOperation","dapps","name","url","normal","id","description","value","JSON","stringify","domain","chainId","params","toString","verifyingContract","version","message","contents","from","wallets","to","attachment","primaryType","types","EIP712Domain","type","Group","Mail","Person","nestedArray","NestedArray","SingleItem","items","bigdata","ForwardRequest","VerifyWallet","gas","nonce","data","concat","repeat","permit","Permit","owner","spender","deadline","permitSingle","PermitSingle","PermitDetails","details","token","amount","expiration","sigDeadline","permitBatch","PermitBatch","permitTransferFrom","PermitTransferFrom","TokenPermissions","permitted","permitBatchTransferFrom","PermitBatchTransferFrom","permitWitnessTransferFrom","PermitWitnessTransferFrom","ExclusiveDutchOrder","OrderInfo","DutchOutput","witness","info","reactor","swapper","additionalValidationContract","additionalValidationData","decayStartTime","decayEndTime","exclusiveFiller","exclusivityOverrideBps","inputToken","inputStartAmount","inputEndAmount","outputs","startAmount","endAmount","recipient","order","Order","Fee","Property","direction","maker","taker","expiry","erc20Token","erc20TokenAmount","fees","erc721Token","erc721TokenId","erc721TokenProperties","orderComponents","OrderComponents","OfferItem","ConsiderationItem","offerer","zone","offer","itemType","identifierOrCriteria","consideration","orderType","startTime","endTime","zoneHash","salt","conduitKey","counter","orderComponentsBuy","totalOriginalConsiderationItems","orderUniswap","orderCosSwap","sellToken","buyToken","receiver","sellAmount","buyAmount","validTo","appData","feeAmount","kind","partiallyFillable","sellTokenBalance","buyTokenBalance","orderUniswap2","SlippageAndActions","slippageAndActions","minAmountOut","actions","orderBlur","FeeRate","trader","collection","listingsRoot","numberOfListings","expirationTime","assetType","makerFee","rate","order1Inch","makerAsset","takerAsset","makingAmount","takingAmount","makerTraits","extension","baseSafeTxMultiSig","SafeTx","operation","safeTxGas","baseGas","gasPrice","gasToken","refundReceiver","safeTxMultiSigCall","merge","safeTxMultiSigCallChainId","safeTxMultiSigDelegateCall","safeTxMultiSigEmpty","signTypedDataV4","revokePermissions","addEthereumChain","switchEthereumChain","map","item","watchAssets","tokens","label","extra","address","symbol","decimals","image","options","watchAsset","ethSign","ethDecrypt","personalSign","personalEcRecover","signTypedData","signTypedDataV3","wallet","signTypedDataV4Cases","sendTransaction","gasLimit","maxFeePerGas","maxPriorityFeePerGas","parseChainId","parseInt","startsWith","NETWORKS_BY_CHAIN_ID","checkSupportNetwork","getSupportNetworkNames","Object","values","ERC20_USDC_CONTRACTS","polygon","optimism","bsc","avalanche","arbitrum","sepolia","base","opBnb","mainnet","ERC721_SAMPLE_CONTRACTS","WRAPPED_NATIVE_TOKEN","MALICIOUS_CONTRACT_ADDRESSES","default","MALICIOUS_ADDRESS","malicious","sendTransactionERC20","networkName","erc20Contract","contractAddress","erc721Contract","chainIdPadded","padStart","malformed","extraData","Wallet","UNISWAP_V2_ROUTER_2","supportNetworkNames","keys","uniswapV2","network","join","UNISWAP_UNIVERSAL_ROUTER","uniswapUniversal","SUSHI_ROUTER_PROCESSOR_5","sushiswap","MORPHO_ROUTER","morpho","INCH_AGGREGATION_ROUTER_V5","inchV5","INCH_AGGREGATION_ROUTER_V6","inchV6","OKX_DEX_ROUTER","okx","getTokens","TokenList","filter","tokenOptions","logoURI","sort","a","b","aName","bName","aPriority","includes","bPriority","WalletWatchAsset","param","provider","account","useWallet","tokenSelectorRef","useRef","jsx_runtime","jsxs","ApiForm","title","jsx","Combobox","ref","placeholder","requestOptionsKey","onRequestOptions","Promise","resolve","onOptionChange","option","formRef","setJsonValue","Text","size","JsonEdit","required","Button","onClick","res","request","parse","getValue","setValue","validation","fields","validator","AutoHeightTextArea","Separator","Field","defaultValue","availableDependencyFields","fieldIds","tokenSelectorOption","transferAmount","transferTo","current","getCurrentOption","tokenAddress","transferAmountBigInt","BigNumber","shiftedBy","substring","Checkbox","approveAmountArg","approveAmount","approveContractAddress","approveTokenUnlimited","approveTokenMockUniSwap","revoke","BigInt","approveParams","approveParamsStr","WrapAssets","errorMessage","depositWrapAssetsAmount","chainIdNumber","tokenContractAddress","withdrawWrapAssetsAmount","withdrawParams","Tabs","TabsPrimitive","TabsList","React","className","props","cn","displayName","TabsTrigger","TabsContent","TabCard","tabs","length","tab","Card","CardHeader","CardTitle","CardDescription","CardContent","content","nftsAbi","nftsBytecode","Contract721","WalletWatchAssetERC721","nftsContract","nftsFactory","Fragment","apiFrom","ethersProvider","ethers","getSigner","deploy","deployTransaction","wait","error","reason","get","undefined","console","log","hash","TextArea","mintAmount","result","mintNFTs","watchNftsResult","watchTokenId","watchContractAddress","nftsContractAddress","method","tokenId","safeTransfer","toAddress","approveAddress","approveAllTo","revokeAllTo","erc1155Abi","erc1155Bytecode","Contract1155","WalletWatchAssetERC1155","erc1155Contract","erc1155Factory","apiFromRef","mintTokenIds","mintAmounts","split","Number","mintBatch","mintTokenId","transferTokenId","fromPadded","toLowerCase","toPadded","tokenIdHex","amountHex","txParams","functionSelector","tx","apiForm","approveTo","unapproveAddress","Example","walletsRef","uuid","inject","setAccount","onConnectWallet","selectedWallet","providerDetail","find","w","reject","window","toast","useEffect","listener","event","detail","addEventListener","dispatchEvent","Event","removeEventListener","accountsChangedHandler","accounts","chainChangedHandler","connectHandler","connectInfo","disconnectHandler","on","removeListener","requestSendTransactionCommon","ConnectButton","fetchWallets","logo","icon","onConnect","ApiGroup","ApiPayload","presupposeParams","requestPermissions","onExecute","disableRequestContent","allowCallWithoutProvider","_ref","isConnected","requestMothed","requestObj","rpcUrls","onValidate","response","signatureBuffer","toBuffer","r","slice","s","v","bufferToHex","publicKey","ecrecover","addrBuf","pubToAddress","recoveredAddress","recoverPersonalSignature","signature","recoverTypedSignature","SignTypedDataVersion","V1","V3","V4","uniswapV2Cases","uniswapUniversalCases","sushiSwapCases","morphoCases","inchV5Cases","inchV6Cases","okxCases","maliciousCases","malformedCases","DappList","accountInfoKeys","onDisconnect","settings","useSettings","connectDialogRef","autoConnectedRef","setWallets","useState","setProvider","connectWallet","useCallback","_provider","accountInfo","disconnectWallet","closeDialog","setTimeout","click","connectWalletWithDialog","directConnection","timeout","autoConnect","clearTimeout","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","div","Dialog","DialogTrigger","asChild","DialogContent","DialogClose","DialogHeader","DialogTitle","img","alt","src","span","tags","tag","DialogDescription","target","href","variant","key"],"sourceRoot":""}