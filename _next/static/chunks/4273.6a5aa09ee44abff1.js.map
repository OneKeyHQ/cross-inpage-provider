{"version":3,"file":"static/chunks/4273.6a5aa09ee44abff1.js","mappings":"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","sources":["webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/chains/aptos/dapps.config.ts","webpack://_N_E/./components/chains/aptos/example.tsx","webpack://_N_E/./components/chains/aptos/params.ts","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/./components/ui/dialog.tsx","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/brorand|crypto","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/elliptic/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/readable-stream/lib/internal/streams|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/readable-stream/lib|util","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","export const dapps = [\n  {\n    name: 'SEAM',\n    url: 'https://app.seam.money/',\n  },\n  {\n    name: 'Aptos Names',\n    url: 'https://www.aptosnames.com/',\n  },\n  {\n    name: 'Liquid Swap',\n    url: 'https://liquidswap.com/#/',\n  },\n];\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return */\nimport { dapps } from './dapps.config';\nimport ConnectButton from '../../../components/connect/ConnectButton';\nimport { useEffect, useRef } from 'react';\nimport { get } from 'lodash';\nimport axios from 'axios';\nimport { hexToBytes } from '@noble/hashes/utils';\nimport { IProviderApi, IProviderInfo, SignMessageResponse } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../../components/connect/WalletContext';\nimport type { IKnownWallet } from '../../../components/connect/types';\nimport DappList from '../../../components/DAppList';\nimport params from './params';\nimport nacl from 'tweetnacl';\nimport { stripHexPrefix } from 'ethereumjs-util';\nimport { toast } from '../../ui/use-toast';\nimport { TxnBuilderTypes } from 'aptos';\n\n\nexport default function Example() {\n  const walletsRef = useRef<IProviderInfo[]>([\n    {\n      uuid: 'injected',\n      name: 'Injected Wallet',\n      inject: 'aptos',\n    },\n    {\n      uuid: 'injected-onekey',\n      name: 'Injected OneKey',\n      inject: '$onekey.aptos',\n    },\n  ]);\n\n  const { provider, setAccount, account } = useWallet<IProviderApi>();\n\n  const onConnectWallet = async (selectedWallet: IKnownWallet) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const providerDetail = walletsRef.current?.find((w) => w.uuid === selectedWallet.id);\n    if (!providerDetail) {\n      return Promise.reject('Wallet not found');\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    const provider = get(window, providerDetail.inject) as IProviderApi | undefined;\n\n    if (!provider) {\n      toast({\n        title: 'Wallet not found',\n        description: 'Please install the wallet extension',\n      });\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining\n    const { address, publicKey } = await provider?.connect();\n\n    const chainId = await provider?.network();\n\n    return {\n      provider,\n      address,\n      publicKey,\n      chainId,\n    };\n  };\n\n  useEffect(() => {\n    if (!provider) return;\n\n    // @ts-expect-error\n    provider.onNetworkChange((network: { chainId: string; name: string; url: string } | null) => {\n      console.log(`aptos [onNetworkChange] ${JSON.stringify(network)}`);\n\n      if (!network) return;\n      if (!network.chainId) return;\n\n      setAccount({\n        ...account,\n        chainId: network?.chainId,\n      });\n    });\n\n    // @ts-expect-error\n    provider.onAccountChange((params: { address: string; publicKey: string } | null) => {\n      console.log(`aptos [onAccountChange] ${JSON.stringify(params)}`);\n      if (!params?.address) return;\n      if (!params?.publicKey) return;\n\n      setAccount({\n        ...account,\n        address: params.address,\n        publicKey: params.publicKey,\n      });\n    });\n\n    // @ts-expect-error\n    provider.onDisconnect?.((params: { name: string | null } | null) => {\n      console.log(`aptos [onDisconnect] ${JSON.stringify(params)}`);\n    });\n  }, [account, provider, setAccount]);\n  return (\n    <>\n      <ConnectButton<IProviderApi>\n        fetchWallets={() => {\n          return Promise.resolve(\n            walletsRef.current.map((wallet) => {\n              return {\n                id: wallet.uuid,\n                name: wallet.name,\n              };\n            }),\n          );\n        }}\n        onConnect={onConnectWallet}\n        onDisconnect={() => provider?.disconnect()}\n      />\n\n      <ApiGroup title=\"Basics\">\n        <ApiPayload\n          title=\"connect\"\n          description=\"连接 Wallet\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.connect();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"getNetwork\"\n          description=\"getNetwork\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.getNetwork();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"getNetworkURL\"\n          description=\"getNetworkURL\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.getNetworkURL();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"isConnected\"\n          description=\"isConnected\"\n          disableRequestContent\n          allowCallWithoutProvider\n          // eslint-disable-next-line @typescript-eslint/require-await\n          onExecute={async (request: string) => {\n            const res = provider?.isConnected() ?? false;\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"account\"\n          description=\"当前账户\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.account();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"network\"\n          description=\"当前网络\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.network();\n            return res;\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Transfer\">\n        <ApiPayload\n          title=\"signMessage\"\n          description=\"signMessage\"\n          presupposeParams={params.signMessage}\n          onExecute={async (request: string) => {\n            const obj = JSON.parse(request);\n            const res = await provider?.signMessage(obj);\n            return JSON.stringify(res);\n          }}\n          onValidate={(request: string, result: string) => {\n            const { fullMessage, signature } = JSON.parse(result) as SignMessageResponse;\n\n            const isValidSignature = nacl.sign.detached.verify(\n              Buffer.from(fullMessage),\n              hexToBytes(signature),\n              hexToBytes(stripHexPrefix(account?.publicKey)),\n            );\n\n            return Promise.resolve(isValidSignature.toString());\n          }}\n        />\n        <ApiPayload\n          title=\"signTransaction\"\n          description=\"signTransaction\"\n          presupposeParams={params.signTransaction(account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const obj = JSON.parse(request);\n            const res = await provider?.signTransaction(obj);\n            return res;\n          }}\n          onValidate={async (request: string, result: string) => {\n            const jsonObject = JSON.parse(result);\n            const buffer = new Uint8Array(jsonObject);\n\n            const options = {\n              method: 'POST',\n              url: 'https://api.mainnet.aptoslabs.com/v1/transactions',\n              headers: { 'Content-Type': 'application/x.aptos.signed_transaction+bcs' },\n              data: buffer,\n            };\n\n            const res = await axios.request(options);\n\n            console.log(res.data);\n            return Promise.resolve(JSON.stringify(res.data));\n          }}\n        />\n        <ApiPayload\n          title=\"signAndSubmitTransaction\"\n          description=\"signAndSubmitTransaction\"\n          presupposeParams={params.signTransaction(account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const obj = JSON.parse(request);\n            const res = await provider?.signAndSubmitTransaction(obj);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"signAndSubmitTransaction-Script\"\n          description=\"signAndSubmitTransaction-Script (会报错，是正常的)\"\n          presupposeParams={[\n            {\n              id: 'script',\n              name: 'script',\n              description: 'script',\n              value: '',\n            },\n          ]}\n          onExecute={async (request: string) => {\n            const script = new TxnBuilderTypes.Script(\n              hexToBytes('0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20'),\n              [\n                new TxnBuilderTypes.TypeTagU8(),\n                new TxnBuilderTypes.TypeTagU64(),\n                new TxnBuilderTypes.TypeTagU128(),\n                new TxnBuilderTypes.TypeTagBool(),\n                new TxnBuilderTypes.TypeTagAddress(),\n                new TxnBuilderTypes.TypeTagSigner(),\n                new TxnBuilderTypes.TypeTagVector(new TxnBuilderTypes.TypeTagU8()),\n                new TxnBuilderTypes.TypeTagStruct(\n                  new TxnBuilderTypes.StructTag(\n                    new TxnBuilderTypes.AccountAddress(hexToBytes('1'.repeat(64))),\n                    new TxnBuilderTypes.Identifier('coin'),\n                    new TxnBuilderTypes.Identifier('transfer'),\n                    [],\n                  ),\n                ),\n              ],\n              [\n                new TxnBuilderTypes.TransactionArgumentU8(1),\n                new TxnBuilderTypes.TransactionArgumentU64(BigInt('18446744073709551615')),\n                new TxnBuilderTypes.TransactionArgumentU128(\n                  BigInt('340282366920938463463374607431768211455'),\n                ),\n                new TxnBuilderTypes.TransactionArgumentBool(true),\n                new TxnBuilderTypes.TransactionArgumentAddress(\n                  new TxnBuilderTypes.AccountAddress(hexToBytes('1'.repeat(64))),\n                ),\n                new TxnBuilderTypes.TransactionArgumentU8Vector(\n                  hexToBytes('0102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20'),\n                ),\n              ],\n            );\n\n            const payload = new TxnBuilderTypes.TransactionPayloadScript(script);\n            const res = await provider?.signAndSubmitTransaction(payload);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"signAndSubmitTransaction-mock-Wormhole-Claim\"\n          description=\"signAndSubmitTransaction-mock-Wormhole-Claim (会报错，是正常的)\"\n          presupposeParams={[\n            {\n              id: 'script',\n              name: 'script',\n              description: 'script',\n              value: '',\n            },\n          ]}\n          onExecute={async (request: string) => {\n            const script = new TxnBuilderTypes.Script(\n              hexToBytes(\n                '0a11ce70b0700000a0601000402040403080c05141617050e161640537f087d403f0072010100020000030203030001010403040400010303060c0a020a020003060c0c060a02060a0201080800010104136d6561736167655f7472616e736d697474657210746f6b656e5f6d657373656e676572075265636569707415726563656976655f6d657373616765167468616e646c655f726563656976655f6d657373616765177e171882e6653018738cb3f3c888c0647fae3b8784f5c65a4d9b38c67c3b73888ed9a3c1b64257aef27b6e40f24896eae8b13e83ba701e38d51a086e637f8972d87f85f2e8370fae3db5d0b471a7f9892743d75e9c0e5f4a3f7ba5634f889cd6403becc804d57d34b64879d18181c80e0b00e1e020f070b000e010e020011000011010102',\n              ),\n              [],\n              [\n                new TxnBuilderTypes.TransactionArgumentU8Vector(\n                  hexToBytes(\n                    '0000000000000000600000000090000000007ca6e000000000000000000000000001682ae6375c4e4a97e4b583bc394c861a46d89629e6702a472080ea3caaf6ba9dffaa6effad2290a9ba9adaaad5af5c618e42782d00000000000000000000000000000000000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913eb2d1d9bbfca9d892e124e858f1dc449935a3f785f8860892e03fb9814db183900000000000000000000000000000000000000000000000000000000000000000027100000000000000000000000005618207d27d78f09f61a5d92190d58c453feb4b7',\n                  ),\n                ),\n                new TxnBuilderTypes.TransactionArgumentU8Vector(\n                  hexToBytes(\n                    '1f8799b9e37368636df06804e4c575a431bb279b7dfae2375e5b274873ea8948024872966e1bf8b39607b2312e6337452d53139b68fa7d981dbbab0b94534e211c1e78000f700303aa5534ddaa4397fcaa1eaea194447e9357218b88cc4942507f7b14bb727686ff941a43beae83695dc7007df40e9bef1bff146b39e7a8b436831c',\n                  ),\n                ),\n              ],\n            );\n\n            const payload = new TxnBuilderTypes.TransactionPayloadScript(script);\n            const res = await provider?.signAndSubmitTransaction({\n              payload,\n            });\n            return JSON.stringify(res);\n          }}\n        />\n        {/* <ApiPayload\n          title=\"transferToken\"\n          description=\"代币转账\"\n          presupposeParams={params.transferToken(account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const payload = JSON.parse(request);\n            // 将amount转换为原子单位 (1 APT = 100000000 原子单位)\n            const amount = Number(payload.arguments[1]) * 100000000;\n\n            const transaction = {\n              ...payload,\n              arguments: [payload.arguments[0], amount.toString()],\n            };\n\n            const res = await provider?.signAndSubmitTransaction(transaction);\n            return JSON.stringify(res);\n          }}\n        /> */}\n      </ApiGroup>\n\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","export default {\n  signMessage: [\n    {\n      id: 'signMessage',\n      name: 'signMessage',\n      value: JSON.stringify({\n        address: false,\n        application: true,\n        chainId: true,\n        message: 'This is a sample message',\n        nonce: 12345,\n      }),\n    },\n  ],\n  signTransaction: (address: string) => [\n    {\n      id: 'signTransaction',\n      name: 'signTransaction',\n      value: JSON.stringify({\n        arguments: [address, '100000'],\n        function: '0x1::coin::transfer',\n        type: 'entry_function_payload',\n        type_arguments: ['0x1::aptos_coin::AptosCoin'],\n      }),\n    },\n    {\n      id: 'signTransferUSDC',\n      name: 'signTransferUSDC',\n      value: JSON.stringify({\n        arguments: [address, '1000'],\n        function: '0x1::coin::transfer',\n        type: 'entry_function_payload',\n        type_arguments: ['0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC'],\n      }),\n    },\n    {\n      id: 'signTransferDooDoo',\n      name: 'signTransferDooDoo',\n      value: JSON.stringify({\n        arguments: [address, '1000'],\n        function: '0x1::coin::transfer',\n        type: 'entry_function_payload',\n        type_arguments: ['0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo'],\n      }),\n    },\n  ],\n  signGenericTransaction: (address: string) => [\n    {\n      id: 'signGenericTransaction',\n      name: 'signGenericTransaction',\n      value: JSON.stringify({\n        args: [address, '100000'],\n        func: '0x1::coin::transfer',\n        type_args: ['0x1::aptos_coin::AptosCoin'],\n      }),\n    },\n    {\n      id: 'transferUSDC',\n      name: 'transferUSDC',\n      value: JSON.stringify({\n        arguments: [address, '1000'],\n        function: '0x1::coin::transfer',\n        type: 'entry_function_payload',\n        type_arguments: ['0xf22bede237a07e121b56d91a491eb7bcdfd1f5907926a9e58338f964a01b17fa::asset::USDC'],\n      }),\n    },\n    {\n      id: 'transferDooDoo',\n      name: 'transferDooDoo',\n      value: JSON.stringify({\n        arguments: [address, '1000'],\n        function: '0x1::coin::transfer',\n        type: 'entry_function_payload',\n        type_arguments: ['0x73eb84966be67e4697fc5ae75173ca6c35089e802650f75422ab49a8729704ec::coin::DooDoo'],\n      }),\n    },\n  ],\n};\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[35%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["__webpack_exports__","Z","dapps","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Card","jsx","CardTitle","className","CardContent","map","dapp","index","div","Link","href","url","legacyBehavior","a","name","Example","account","walletsRef","useRef","uuid","inject","provider","setAccount","useWallet","onConnectWallet","selectedWallet","providerDetail","current","find","w","id","Promise","reject","get","window","toast","title","description","address","publicKey","connect","chainId","network","useEffect","onNetworkChange","console","log","concat","JSON","stringify","onAccountChange","params","onDisconnect","Fragment","ConnectButton","fetchWallets","resolve","wallet","onConnect","disconnect","ApiGroup","ApiPayload","disableRequestContent","onExecute","request","res","getNetwork","getNetworkURL","allowCallWithoutProvider","isConnected","presupposeParams","signMessage","obj","parse","onValidate","result","fullMessage","signature","isValidSignature","nacl","detached","verify","Buffer","from","hexToBytes","stripHexPrefix","toString","signTransaction","jsonObject","buffer","Uint8Array","axios","method","headers","data","signAndSubmitTransaction","value","script","TxnBuilderTypes","Script","TypeTagU8","TypeTagU64","TypeTagU128","TypeTagBool","TypeTagAddress","TypeTagSigner","TypeTagVector","TypeTagStruct","StructTag","AccountAddress","repeat","Identifier","TransactionArgumentU8","TransactionArgumentU64","BigInt","TransactionArgumentU128","TransactionArgumentBool","TransactionArgumentAddress","TransactionArgumentU8Vector","payload","TransactionPayloadScript","DappList","application","message","nonce","arguments","function","type","type_arguments","signGenericTransaction","args","func","type_args","accountInfoKeys","settings","useSettings","connectDialogRef","autoConnectedRef","wallets","setWallets","useState","setProvider","connectWallet","useCallback","_provider","accountInfo","error","disconnectWallet","closeDialog","setTimeout","click","connectWalletWithDialog","options","length","directConnection","timeout","autoConnect","clearTimeout","Dialog","DialogTrigger","asChild","Button","onClick","DialogContent","DialogClose","ref","DialogHeader","DialogTitle","logo","img","alt","src","span","tags","tag","DialogDescription","target","variant","Object","keys","key","DialogPrimitive","DialogPortal","DialogOverlay","React","props","cn","displayName","children","X"],"sourceRoot":""}