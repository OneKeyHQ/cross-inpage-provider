{"version":3,"file":"static/chunks/2873.0571b2d2b4d07a41.js","mappings":"0NAee,SAASA,oBACtB,IAAMC,EAAYC,CAAAA,EAAAA,EAAAA,MAAAA,EAAiC,MA0BnD,MAzBAC,CAAAA,EAAAA,EAAAA,eAAAA,EAAgB,SACaF,EAKZA,EALf,GAAI,CAACA,EAAUG,OAAO,EAAI,SAACH,CAAAA,EAAAA,EAAUG,OAAO,GAAjBH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBI,aAAa,EAAE,CAC3DC,QAAQC,KAAK,CAAC,oBACd,MACF,CACAC,OAAOC,UAAU,CAAG,IAAIC,EAAAA,EAAcA,CAAC,CACrCC,YAAW,OAAEV,CAAAA,EAAAA,EAAUG,OAAO,GAAjBH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBI,aAAa,CAC7CO,gBAAiB,QACjBC,cAAe,OACfC,QAAS,gBACTC,eAAeC,CAAO,EACpB,GAAM,CAAEC,OAAAA,CAAM,CAAEC,OAAAA,CAAM,CAAE,CAAGF,EAAQG,IAAI,CAEvC,GADAb,QAAQc,GAAG,CAAC,wBAAyB,CAAEH,OAAAA,EAAQC,OAAAA,CAAO,GAClDD,OAAAA,EACF,MAAO,qBAET,GAAIA,UAAAA,EACF,MAAO,CAAEI,QAAS,iBAAkB,EAEtC,GAAIJ,UAAAA,EACF,MAAM,MAAU,gCAEpB,CACF,EACF,EAAG,EAAE,EAEH,GAAAK,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,mBACb,GAAAH,EAAAI,GAAA,EAACF,MAAAA,CAAIC,UAAU,gCACZ,CAAC,KAAM,QAAS,QAAQ,CAACE,GAAG,CAAC,CAACV,EAAQW,IAEnC,GAAAN,EAAAC,IAAA,EAACM,EAAAA,CAAMA,CAAAA,CAELC,QAAS,KAEFC,CAAAA,EAAAA,EAAAA,CAAAA,EACH,CACEd,OAAAA,EACAC,OAAQ,CAAC,CAAEU,MAAAA,CAAM,EAAE,EAErBpB,OAAOC,UAAU,CAErB,YACD,gBACeQ,EAAO,MAZhBA,MAiBb,GAAAK,EAAAI,GAAA,EAACM,SAAAA,CACCC,IAAKhC,EACLiC,IAAK,gBACLT,UAAU,2CACVU,YAAa,IAEf,GAAAb,EAAAI,GAAA,EAACM,SAAAA,CAAOE,IAAI,IAAIT,UAAU,gDAGhC,yBCrEO,eAAeM,WACpBK,CAAmC,CACnCC,CAAuB,KADvB,CAAEpB,OAAAA,CAAM,CAAEC,OAAAA,CAAM,CAAmB,CAAnCkB,EAGA,GAAI,CACF,IAAME,EAAS,MAAMD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAQE,OAAO,CAAC,CACnCC,MAAO,gBACPrB,KAAM,CACJF,OAAAA,EACAC,OAAAA,CACF,CACF,IACAZ,QAAQc,GAAG,CAAC,cAAeH,EAAQ,QAASqB,EAC9C,CAAE,MAAOG,EAAG,CACVnC,QAAQC,KAAK,CAAC,+BAAgCU,EAAQ,QAASwB,EACjE,CACF","sources":["webpack://_N_E/./components/chains/iframe/IFrameHostExample.tsx","webpack://_N_E/./components/chains/iframe/utils.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/* eslint-disable @typescript-eslint/restrict-plus-operands,@typescript-eslint/ban-ts-comment */\nimport React from 'react';\nimport { useLayoutEffect, useRef } from 'react';\nimport { JsBridgeIframe } from '@onekeyfe/cross-inpage-provider-core';\nimport { IJsonRpcRequest } from '@onekeyfe/cross-inpage-provider-types';\nimport { sendMethod } from './utils';\nimport { Button } from '../../ui/button';\n\ndeclare global {\n  interface Window {\n    frameBridge: JsBridgeIframe;\n    hostBridge: JsBridgeIframe;\n  }\n}\n\nexport default function IFrameHostExample() {\n  const iframeRef = useRef<HTMLIFrameElement | null>(null);\n  useLayoutEffect(() => {\n    if (!iframeRef.current || !iframeRef.current?.contentWindow) {\n      console.error('iframe not ready');\n      return;\n    }\n    window.hostBridge = new JsBridgeIframe({\n      remoteFrame: iframeRef.current?.contentWindow,\n      remoteFrameName: 'FRAME',\n      selfFrameName: 'HOST',\n      channel: 'onekey-js-sdk',\n      receiveHandler(payload) {\n        const { method, params } = payload.data as IJsonRpcRequest;\n        console.log('receiveHandler >>>>> ', { method, params });\n        if (method === 'hi') {\n          return 'from HOST: hahahah';\n        }\n        if (method === 'hello') {\n          return { message: 'from HOST: okok' };\n        }\n        if (method === 'error') {\n          throw new Error('from HOST: something is wrong');\n        }\n      },\n    });\n  }, []);\n  return (\n    <div className=\"h-full\">\n      <div className=\"flex gap-2 flex-wrap\">\n        {['hi', 'hello', 'error'].map((method, index) => {\n          return (\n            <Button\n              key={method}\n              onClick={() => {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n                void sendMethod(\n                  {\n                    method,\n                    params: [{ index }],\n                  },\n                  window.hostBridge,\n                );\n              }}\n            >\n              sendToFrame ({method})\n            </Button>\n          );\n        })}\n      </div>\n      <iframe\n        ref={iframeRef}\n        src={'/iframe/frame'}\n        className=\"border-2 border-gray-300 m-2 h-40 w-full\"\n        frameBorder={0}\n      />\n      <iframe src=\"/\" className=\"border-2 border-gray-300 m-2 h-4/6 w-full\" />\n    </div>\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport React from 'react';\nimport { JsBridgeIframe } from '@onekeyfe/cross-inpage-provider-core';\nimport { IJsonRpcRequest } from '@onekeyfe/cross-inpage-provider-types';\n\nexport async function sendMethod(\n  { method, params }: IJsonRpcRequest,\n  bridge?: JsBridgeIframe,\n): Promise<void> {\n  try {\n    const result = await bridge?.request({\n      scope: '$hardware_sdk',\n      data: {\n        method,\n        params,\n      },\n    });\n    console.log('result >>>>', method, ' --> ', result);\n  } catch (e) {\n    console.error('bridge send ERROR response: ', method, ' --> ', e);\n  }\n}\n"],"names":["IFrameHostExample","iframeRef","useRef","useLayoutEffect","current","contentWindow","console","error","window","hostBridge","JsBridgeIframe","remoteFrame","remoteFrameName","selfFrameName","channel","receiveHandler","payload","method","params","data","log","message","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","map","index","Button","onClick","sendMethod","iframe","ref","src","frameBorder","param","bridge","result","request","scope","e"],"sourceRoot":""}