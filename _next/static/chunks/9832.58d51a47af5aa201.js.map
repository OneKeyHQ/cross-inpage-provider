{"version":3,"file":"static/chunks/9832.58d51a47af5aa201.js","mappings":"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","sources":["webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/chains/scdo/dapps.config.ts","webpack://_N_E/./components/chains/scdo/params.ts","webpack://_N_E/./components/chains/scdo/rpc.ts","webpack://_N_E/./components/chains/scdo/utils.ts","webpack://_N_E/./components/chains/scdo/example.tsx","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/./components/ui/dialog.tsx","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bn.js/lib|buffer","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","export const dapps = [\n  {\n    name: 'Scdo Demo',\n    url: 'https://demo.scdo.org/',\n  },\n];\n","export default {\n  signTransaction: (from: string, to: string) => [\n    {\n      id: 'signTransaction',\n      name: 'signTransaction',\n      value: JSON.stringify({\n        accountNonce: 0,\n        amount: 10,\n        from,\n        gasLimit: 21000,\n        gasPrice: 1,\n        payload: '',\n        to,\n      }),\n    },\n  ],\n  sendTransaction: (from: string, to: string) => [\n    {\n      id: 'sendTransaction-native',\n      name: 'Native',\n      value: JSON.stringify({\n        amount: 10,\n        from: from,\n        to: to,\n      }),\n    },\n    {\n      id: 'sendTransaction-erc20-contract',\n      name: 'ERC20 Token',\n      value: JSON.stringify({\n        from: from,\n        payload:\n          '0xa9059cbb0000000000000000000000000118a02f993fc7a4348fd36b7f7a596948f02b310000000000000000000000000000000000000000000000000000000000002710',\n        to: '1S015daca201b66f96f74b4230916f9db8db0c0002',\n      }),\n    },\n    {\n      id: 'sendTransaction-big-payload',\n      name: 'Big Payload',\n      value: JSON.stringify({\n        from: from,\n        payload: `0x${'010203040506070809'.repeat(600)}`,\n        to: from,\n      }),\n    },\n  ],\n  estimateGas: (from: string, to: string) => [\n    {\n      id: 'sendTransaction-native',\n      name: 'Native',\n      value: JSON.stringify({\n        'accountNonce': 0,\n        'amount': 9800000000,\n        'from': from,\n        'gasLimit': 21000,\n        'gasPrice': 1,\n        'payload': '',\n        'signature': {\n          'Sig':\n            'CCQnmyI2Bf85eqFHJ8uFGiZFk2DVH9W5R3Q2GXJ648RcVrtIt4guxZ/Z7c4sm5tWjKp5jqw2K9DdnOiTRXPkTgE=',\n        },\n        'to': to,\n      }),\n    },\n  ],\n};\n","import type { AxiosInstance } from 'axios';\nimport Axios from 'axios';\n\n// https://scdo-project.gitbook.io/scdo-wiki/developer/api/rpc\nexport class ScdoNodeClient {\n  public readonly axios: AxiosInstance;\n  private readonly rpcUrl: string;\n\n  constructor(rpcUrl = 'https://mainnet.scdo.org:8137') {\n    this.rpcUrl = rpcUrl;\n    this.axios = Axios.create({\n      timeout: 30 * 1000,\n    });\n  }\n\n  private getUrl(address: string) {\n    const shard = [\n      'https://mainnet.scdo.org:8137',\n      'https://mainnet.scdo.org:8138',\n      'https://mainnet.scdo.org:8139',\n      'https://mainnet.scdo.org:8136',\n    ];\n\n    const index = +address.slice(0, 1) - 1;\n    return shard[index] ?? shard[0];\n  }\n\n  public async getNonce(address: string): Promise<number | null> {\n    const response = await this.axios.post<{ result: number }>(\n      this.getUrl(address),\n      {\n        jsonrpc: '2.0',\n        method: 'scdo_getAccountNonce',\n        params: [address, '', -1],\n        id: 1,\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      },\n    );\n\n    if (response.status === 404) {\n      return null;\n    }\n\n    return response.data.result ?? 0;\n  }\n\n  async pushTransaction(from: string, tx: any): Promise<boolean> {\n    try {\n      const response = await fetch(this.getUrl(from), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          method: 'scdo_addTx',\n          params: [tx],\n          id: 1,\n        }),\n      });\n\n      if (!response.ok) {\n        console.error('RPC 请求失败:', response.status, response.statusText);\n        return false;\n      }\n\n      const result = await response.json();\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      console.log('RPC 响应:', result);\n\n      const { error } = result as { error: { code: number; message: string } };\n      if (error) {\n        if (error.code === -32000 && error.message === 'Tx already exists') {\n          console.log('交易已存在于网络中');\n          return true;\n        }\n        console.error('RPC 错误:', error);\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      console.error('推送交易失败:', error);\n      return false;\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { defaultAbiCoder } from '@ethersproject/abi';\n\nexport function encodeTokenTransferPayload({ address, amount }: { address: string; amount: string }) {\n  const method = '0xa9059cbb';\n  const params = defaultAbiCoder.encode(['address', 'uint256'], [`0x${address.slice(2)}`, amount]);\n  return `${method}${params.slice(2)}`;\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return, no-unsafe-optional-chaining */\nimport { dapps } from './dapps.config';\nimport ConnectButton from '../../../components/connect/ConnectButton';\nimport { useRef } from 'react';\nimport { get } from 'lodash';\nimport { IProviderApi, IProviderInfo } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../../components/connect/WalletContext';\nimport type { IKnownWallet } from '../../../components/connect/types';\nimport DappList from '../../../components/DAppList';\nimport params from './params';\nimport { Input } from '../../ui/input';\nimport { ScdoNodeClient } from './rpc';\nimport BigNumber from 'bignumber.js';\nimport { useToast } from '../../ui/use-toast';\nimport { encodeTokenTransferPayload } from './utils';\n\n// https://demo.scdo.org/\nexport default function Example() {\n  const walletsRef = useRef<IProviderInfo[]>([\n    {\n      uuid: 'injected',\n      name: 'Injected Wallet',\n      inject: 'scdo',\n    },\n    {\n      uuid: 'injected-onekey',\n      name: 'Injected OneKey',\n      inject: '$onekey.scdo',\n    },\n  ]);\n\n  const client = new ScdoNodeClient();\n\n  const { account, provider } = useWallet<IProviderApi>();\n  const { toast } = useToast();\n\n  const onConnectWallet = async (selectedWallet: IKnownWallet) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const providerDetail = walletsRef.current?.find((w) => w.uuid === selectedWallet.id);\n    if (!providerDetail) {\n      return Promise.reject('Wallet not found');\n    }\n\n    const provider = get(window, providerDetail.inject) as IProviderApi | undefined;\n\n    const [address] = await provider?.request<string[]>({ method: 'scdo_requestAccounts' });\n\n    return {\n      provider,\n      address: address,\n    };\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n  const getTokenTransferFrom = (chainId: string | undefined, approve: boolean = false) => {\n    const tokens: {\n      name: string;\n      address: string;\n    }[] = [];\n\n    tokens.push({\n      name: ' SCDO TEST0',\n      // address: '1S015daca201b66f96f74b4230916f9db8db0c0002',\n      address:'1S01f0daaf7a59fb5eb90256112bf5d080ff290022'\n    });\n\n    return (\n      <>\n        <Input\n          label=\"收款地址\"\n          type=\"text\"\n          name=\"toAddress\"\n          defaultValue={account?.address ?? ''}\n        />\n        <Input label=\"金额\" type=\"number\" name=\"amount\" defaultValue=\"10000\" />\n\n        {approve && (\n          <>\n            <div>\n              <input id=\"max_approve\" name=\"maxApprove\" type=\"checkbox\" />\n              <label htmlFor=\"max_approve\">无限授权</label>\n            </div>\n            <div>\n              <input id=\"mock_uniswap\" name=\"mockUniSwap\" type=\"checkbox\" />\n              <label htmlFor=\"mock_uniswap\">模拟 UniSwap（不传 Value）</label>\n            </div>\n          </>\n        )}\n\n        <select name=\"tokenAddress\" className=\"select\">\n          <option selected value={undefined}>选择 Token</option>\n          {tokens.map((token) => (\n            <option value={token.address}>{token.name}</option>\n          ))}\n        </select>\n      </>\n    );\n  };\n\n  const tokenTransferFromToTx = async (fromData: Record<string, any>) => {\n    const from = account?.address ?? '';\n    const to = fromData.toAddress ?? from;\n    const amount = fromData.amount;\n    const tokenAddress = fromData.tokenAddress;\n\n    if (!amount) {\n      return 'Amount is required';\n    }\n\n    // 获取最新的 nonce\n    const nonce = await client.getNonce(from);\n    if (nonce === null) {\n      throw new Error('获取 nonce 失败');\n    }\n    console.log('使用 nonce:', nonce);\n\n    if (tokenAddress && tokenAddress !== 'SCDO') {\n      const payload = encodeTokenTransferPayload({ address: to, amount });\n\n      return JSON.stringify({\n        accountNonce: nonce,  // 使用最新的 nonce\n        from: from,\n        to: tokenAddress,\n        amount: 0,\n        gasLimit: 100000,\n        gasPrice: 1,\n        payload: payload,\n      });\n    }\n\n    return JSON.stringify({\n      accountNonce: nonce,  // 使用最新的 nonce\n      from: from,\n      to: to,\n      amount: new BigNumber(amount).toNumber(),\n      gasLimit: 21000,\n      gasPrice: 1,\n      payload: '',\n    });\n  }\n\n  return (\n    <>\n      <ConnectButton<IProviderApi>\n        fetchWallets={() => {\n          return Promise.resolve(\n            walletsRef.current.map((wallet) => {\n              return {\n                id: wallet.uuid,\n                name: wallet.name,\n              };\n            }),\n          );\n        }}\n        onConnect={onConnectWallet}\n        onDisconnect={async () => {\n          await provider?.request({ method: 'scdo_disconnect' });\n        }}\n      />\n\n      <ApiGroup title=\"Basics\">\n        <ApiPayload\n          title=\"scdo_requestAccounts\"\n          description=\"请求链接账户\"\n          onExecute={async (request: string) => {\n            return await provider?.request<string[]>({ method: 'scdo_requestAccounts' });\n          }}\n        />\n        <ApiPayload\n          title=\"scdo_getAccounts\"\n          description=\"获取账户\"\n          onExecute={async (request: string) => {\n            return await provider?.request<string[]>({ method: 'scdo_getAccounts' });\n          }}\n        />\n        <ApiPayload\n          title=\"scdo_getBalance\"\n          description=\"获取账户余额\"\n          presupposeParams={[\n            {\n              id: 'scdo_getBalance',\n              name: 'getBalance',\n              value: account?.address,\n            },\n          ]}\n          onExecute={async (request: string) => {\n            const res = await provider?.request<string[]>({\n              method: 'scdo_getBalance',\n              params: [request ?? '', '', -1],\n            });\n            console.log('scdo_getBalance', res);\n\n            return res;\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Sign Message\">\n        <ApiPayload\n          title=\"scdo_signMessage\"\n          description=\"签署消息\"\n          onExecute={async (request: string) => {\n            return await provider?.request<string>({\n              method: 'scdo_signMessage',\n              params: [request],\n            });\n          }}\n          onValidate={async (request: string, response: string) => {\n            return await provider?.request<string>({\n              method: 'scdo_ecRecover',\n              params: [request, response],\n            });\n          }}\n        />\n      </ApiGroup>\n\n      <ApiGroup title=\"Sign Transaction\">\n        <ApiPayload\n          title=\"scdo_estimateGas\"\n          description=\"估算交易费用\"\n          presupposeParams={params.signTransaction(account?.address ?? '', account?.address ?? '')}\n          generateRequestFrom={() => getTokenTransferFrom(account?.chainId)}\n          onGenerateRequest={tokenTransferFromToTx}\n          onExecute={async (request: string) => {\n            const tx = JSON.parse(request);\n            return await provider?.request<string>({\n              method: 'scdo_signTransaction',\n              params: [tx],\n            });\n          }}\n          onValidate={async (request: string, response: string) => {\n            try {\n              console.log('签名交易请求:', request);\n              console.log('签名交易响应:', response);\n\n              const res = JSON.parse(response) as {\n                \"Data\": {\n                  \"Type\": number,\n                  \"From\": string,\n                  \"To\": string,\n                  \"Amount\": number,\n                  \"AccountNonce\": number,\n                  \"GasPrice\": number,\n                  \"GasLimit\": number,\n                  \"Timestamp\": number,\n                  \"Payload\": string\n                },\n                \"Hash\": string,\n                \"Signature\": {\n                  \"Sig\": string\n                }\n              }\n              return await provider?.request<string>({\n                method: 'scdo_estimateGas',\n                params: [{\n                  'accountNonce': res.Data.AccountNonce,\n                  'amount': res.Data.Amount,\n                  'from': res.Data.From,\n                  'to': res.Data.To,\n                  'gasLimit': res.Data.GasLimit,\n                  'gasPrice': res.Data.GasPrice,\n                  'hash': res.Hash,\n                  'payload': res.Data.Payload,\n                  'signature': {\n                    'Sig': res.Signature.Sig,\n                  },\n\n                }],\n              });\n            } catch (error) {\n              console.error('估算 Gas 失败:', error);\n              toast({\n                title: '估算 Gas 失败',\n                description: error instanceof Error ? error.message : '未知错误',\n                variant: 'destructive',\n              });\n              return false;\n            }\n          }}\n        />\n        <ApiPayload\n          title=\"scdo_signTransaction\"\n          description=\"签署交易\"\n          presupposeParams={params.signTransaction(account?.address ?? '', account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const tx = JSON.parse(request);\n            return await provider?.request<string>({\n              method: 'scdo_signTransaction',\n              params: [tx],\n            });\n          }}\n          onValidate={async (request: string, response: string) => {\n            try {\n              console.log('签名交易请求:', request);\n              console.log('签名交易响应:', response);\n\n              const tx = JSON.parse(response);\n              console.log('解析后的交易数据:', tx);\n\n              // 检查交易数据结构\n              if (!tx.Data || !tx.Hash || !tx.Signature?.Sig) {\n                throw new Error('交易数据格式不正确');\n              }\n\n              // 检查必要字段\n              const requiredFields = ['From', 'To', 'Amount', 'AccountNonce', 'GasPrice', 'GasLimit'];\n              for (const field of requiredFields) {\n                if (tx.Data[field] === undefined) {\n                  throw new Error(`缺少必要字段: ${field}`);\n                }\n              }\n\n              // 检查 nonce 值\n              const currentNonce = await client.getNonce(tx.Data.From);\n              console.log('当前 nonce:', currentNonce, '交易 nonce:', tx.Data.AccountNonce);\n\n              if (tx.Data.AccountNonce < currentNonce) {\n                throw new Error(`Nonce 值过低，当前 nonce: ${currentNonce}`);\n              }\n\n              // 使用 client 广播交易\n              const success = await client.pushTransaction(tx.Data.From, tx);\n              console.log('广播交易结果:', success);\n\n              if (!success) {\n                throw new Error('交易广播失败，请检查：\\n1. 账户余额是否充足\\n2. Gas 费用是否足够\\n3. Nonce 值是否正确');\n              }\n\n              toast({\n                title: '交易广播成功',\n                // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                description: `交易哈希: ${get(tx, 'Hash', '')}`,\n              });\n              return true;\n            } catch (error) {\n              console.error('验证交易失败:', error);\n              toast({\n                title: '验证交易失败',\n                description: error instanceof Error ? error.message : '未知错误',\n                variant: 'destructive',\n              });\n              return false;\n            }\n          }}\n          generateRequestFrom={() => getTokenTransferFrom(account?.chainId)}\n          onGenerateRequest={tokenTransferFromToTx}\n        />\n        <ApiPayload\n          title=\"scdo_sendTransaction\"\n          description=\"发送交易，动态生成\"\n          presupposeParams={params.signTransaction(account?.address ?? '', account?.address ?? '')}\n          generateRequestFrom={() => getTokenTransferFrom(account?.chainId)}\n          onGenerateRequest={tokenTransferFromToTx}\n          onExecute={async (request: string) => {\n            const tx = JSON.parse(request);\n            return await provider?.request<string>({\n              method: 'scdo_sendTransaction',\n              params: [tx],\n            });\n          }}\n        />\n        <ApiPayload\n          title=\"scdo_sendTransaction\"\n          description=\"发送交易，静态参数\"\n          presupposeParams={params.sendTransaction(account?.address ?? '', account?.address ?? '')}\n          onExecute={async (request: string) => {\n            const tx = JSON.parse(request);\n            return await provider?.request<string>({\n              method: 'scdo_sendTransaction',\n              params: [tx],\n            });\n          }}\n        />\n      </ApiGroup>\n\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[35%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","/* (ignored) */"],"names":["__webpack_exports__","Z","dapps","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Card","jsx","CardTitle","className","CardContent","map","dapp","index","div","Link","href","url","legacyBehavior","a","name","params","signTransaction","from","to","id","value","JSON","stringify","accountNonce","amount","gasLimit","gasPrice","payload","sendTransaction","concat","repeat","estimateGas","ScdoNodeClient","getUrl","address","shard","slice","getNonce","response","axios","post","jsonrpc","method","headers","status","data","result","pushTransaction","tx","fetch","body","ok","console","error","statusText","json","log","code","message","constructor","rpcUrl","Axios","create","timeout","Example","account","walletsRef","useRef","uuid","inject","client","provider","useWallet","toast","useToast","onConnectWallet","selectedWallet","providerDetail","current","find","w","Promise","reject","get","window","request","getTokenTransferFrom","chainId","approve","tokens","push","jsx_runtime","Fragment","Input","label","type","defaultValue","input","htmlFor","select","option","selected","undefined","token","tokenTransferFromToTx","fromData","toAddress","tokenAddress","nonce","encodeTokenTransferPayload","defaultAbiCoder","encode","BigNumber","toNumber","ConnectButton","fetchWallets","resolve","wallet","onConnect","onDisconnect","ApiGroup","title","ApiPayload","description","onExecute","presupposeParams","res","onValidate","generateRequestFrom","onGenerateRequest","parse","Data","AccountNonce","Amount","From","To","GasLimit","GasPrice","Hash","Payload","Signature","Sig","Error","variant","field","currentNonce","success","DappList","accountInfoKeys","publicKey","settings","useSettings","connectDialogRef","autoConnectedRef","wallets","setWallets","useState","setProvider","setAccount","connectWallet","useCallback","_provider","accountInfo","disconnectWallet","closeDialog","setTimeout","click","connectWalletWithDialog","options","length","directConnection","useEffect","autoConnect","clearTimeout","Dialog","DialogTrigger","asChild","Button","onClick","DialogContent","DialogClose","ref","DialogHeader","DialogTitle","logo","img","alt","src","span","tags","tag","DialogDescription","target","Object","keys","key","DialogPrimitive","DialogPortal","DialogOverlay","React","props","cn","displayName","children","X"],"sourceRoot":""}