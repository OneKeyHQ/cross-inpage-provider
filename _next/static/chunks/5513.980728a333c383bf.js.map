{"version":3,"file":"static/chunks/5513.980728a333c383bf.js","mappings":"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","sources":["webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/chains/solana/builder.ts","webpack://_N_E/./components/chains/solana/dapps.config.ts","webpack://_N_E/./components/chains/solana/example.tsx","webpack://_N_E/./components/chains/solana/params.ts","webpack://_N_E/./components/chains/solanaStandard/OffchainMessage.ts","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/./components/ui/dialog.tsx","webpack://_N_E/./lib/api.ts","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bn.js/lib|buffer","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","import {\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionMessage,\n  VersionedMessage,\n  VersionedTransaction,\n  Connection,\n} from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID, createTransferInstruction, getAssociatedTokenAddress } from '@solana/spl-token';\n\nexport const createTransferTransaction = (\n  publicKey: PublicKey,\n  receiverPublicKey: string,\n  recentBlockhash: string,\n  amount: number,\n) => {\n  const receiver = new PublicKey(receiverPublicKey);\n\n  const transaction = new Transaction().add(\n    SystemProgram.transfer({\n      fromPubkey: publicKey,\n      toPubkey: receiver,\n      lamports: amount,\n    }),\n  );\n  transaction.feePayer = publicKey;\n\n  transaction.recentBlockhash = recentBlockhash;\n  return transaction;\n};\n\nexport const hasVersionedTx = (tx: Transaction | VersionedTransaction) => {\n  return 'version' in tx;\n};\n\nexport const createVersionedLegacyTransaction = (\n  publicKey: PublicKey,\n  receiverPublicKey: string,\n  recentBlockhash: string,\n  amount: number,\n) => {\n  const receiver = new PublicKey(receiverPublicKey);\n\n  const instructions = [\n    SystemProgram.createAccount({\n      fromPubkey: publicKey,\n      newAccountPubkey: receiver,\n      lamports: amount,\n      space: 0,\n      programId: SystemProgram.programId,\n    }),\n    SystemProgram.transfer({\n      fromPubkey: publicKey,\n      toPubkey: receiver,\n      lamports: amount,\n    }),\n  ];\n\n  const messageV0 = new TransactionMessage({\n    payerKey: publicKey,\n    recentBlockhash: recentBlockhash,\n    instructions,\n  }).compileToLegacyMessage();\n\n  const transaction = new VersionedTransaction(messageV0);\n  return transaction;\n};\n\nexport const createVersionedTransaction = (\n  publicKey: PublicKey,\n  receiverPublicKey: string,\n  recentBlockhash: string,\n  amount: number,\n) => {\n  const receiver = new PublicKey(receiverPublicKey);\n\n  const instructions = [\n    SystemProgram.transfer({\n      fromPubkey: publicKey,\n      toPubkey: receiver,\n      lamports: amount,\n    }),\n  ];\n\n  const messageV0 = new TransactionMessage({\n    payerKey: publicKey,\n    recentBlockhash: recentBlockhash,\n    instructions,\n  }).compileToV0Message();\n\n  const transaction = new VersionedTransaction(messageV0);\n  return transaction;\n};\n\n// 将 async function 改为箭头函数形式的导出\nexport const createTokenTransferTransaction = async (\n  connection: Connection,\n  fromPubkey: PublicKey,\n  toPubkey: PublicKey,\n  tokenMint: PublicKey,\n  recentBlockhash: string,\n  amount: number,\n  decimals: number\n): Promise<Transaction> => {\n  const transaction = new Transaction();\n\n  const fromTokenAccount = await getAssociatedTokenAddress(\n    tokenMint,\n    fromPubkey\n  );\n\n  const toTokenAccount = await getAssociatedTokenAddress(\n    tokenMint,\n    toPubkey\n  );\n\n  transaction.add(\n    createTransferInstruction(\n      fromTokenAccount,\n      toTokenAccount,\n      fromPubkey,\n      BigInt(amount * Math.pow(10, decimals)),\n    )\n  );\n\n  transaction.feePayer = fromPubkey;\n  transaction.recentBlockhash = recentBlockhash;\n\n  return transaction;\n};\n","export const dapps = [\n  {\n    name: 'Magic Eden',\n    url: 'https://magiceden.io/',\n  },\n  {\n    name: 'Jupiter',\n    url: 'https://jup.ag',\n  },\n  {\n    name: 'Mean Finance',\n    url: 'https://app.meanfi.com/',\n  },\n  {\n    name: 'Saber',\n    url: 'https://app.saber.so/',\n  },\n  {\n    name: 'ORCA',\n    url: 'https://www.orca.so/',\n  },\n  {\n    name: 'Rarible',\n    url: 'https://rarible.com/connect',\n  },\n  {\n    name: 'Raydium',\n    url: 'https://raydium.io/swap/',\n  },\n  {\n    name: '官方测试',\n    url: 'https://r3byv.csb.app/',\n  },\n];\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-return */\nimport { dapps } from './dapps.config';\nimport ConnectButton from '../../connect/ConnectButton';\nimport { useEffect, useMemo, useRef } from 'react';\nimport { get, set } from 'lodash-es';\nimport { IProviderApi, IProviderInfo } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../connect/WalletContext';\nimport type { IKnownWallet } from '../../connect/types';\nimport DappList from '../../DAppList';\nimport { Connection, PublicKey, Transaction, VersionedTransaction, clusterApiUrl } from '@solana/web3.js';\nimport params from './params';\nimport { createTransferTransaction, createVersionedTransaction, createTokenTransferTransaction, hasVersionedTx, createVersionedLegacyTransaction } from './builder';\nimport nacl from 'tweetnacl';\nimport { toast } from '../../ui/use-toast';\nimport { OffchainMessage } from '../solanaStandard/OffchainMessage';\nimport { getApiKey } from '../../../lib/api';\n\nconst NETWORK = clusterApiUrl('mainnet-beta');\n\nexport default function Example() {\n  const walletsRef = useRef<IProviderInfo[]>([\n    {\n      uuid: 'injected',\n      name: 'Injected Wallet',\n      inject: 'solana',\n    },\n    {\n      uuid: 'injected-onekey',\n      name: 'Injected OneKey',\n      inject: '$onekey.solana',\n    },\n    {\n      uuid: 'injected-phantom',\n      name: 'Injected Phantom',\n      inject: 'phantom.solana',\n    },\n  ]);\n\n  const { provider, setAccount, account } = useWallet<IProviderApi>();\n  const connection = useMemo(() => new Connection(`https://go.getblock.io/${getApiKey(\"DEwWFkUCHktXRF8YWw1QCQQcEgQWTE1QDlgKRRVDRw8=\")}`), []);\n\n  const onConnectWallet = async (selectedWallet: IKnownWallet) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const providerDetail = walletsRef.current?.find((w) => w.uuid === selectedWallet.id);\n    if (!providerDetail) {\n      return Promise.reject('Wallet not found');\n    }\n\n    const provider = get(window, providerDetail.inject) as IProviderApi | undefined;\n\n    if (!provider) {\n      toast({\n        title: 'Wallet not found',\n        description: 'Please install the wallet extension',\n      });\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining\n    const { publicKey } = await provider?.connect();\n\n    return {\n      provider,\n      publicKey: publicKey.toBase58(),\n    };\n  };\n\n  const onDisconnectWallet = async () => {\n    await provider?.disconnect();\n  };\n\n  useEffect(() => {\n    if (!provider) return;\n\n    const onConnectListener = (publicKey: PublicKey) => {\n      console.log(`solana [connect] ${publicKey.toBase58()}`);\n      setAccount({\n        ...account,\n        publicKey: publicKey.toBase58(),\n      });\n    };\n    const onDisconnectListener = () => {\n      console.log('solana [disconnect] 👋');\n    };\n    const onAccountChangeListener = (publicKey: PublicKey | null) => {\n      if (publicKey) {\n        console.log(`solana [accountChanged] Switched account to ${publicKey?.toBase58()}`);\n        setAccount({\n          ...account,\n          publicKey: publicKey.toBase58(),\n        });\n      } else {\n        console.log('solana [accountChanged] Switched unknown account');\n      }\n    };\n\n    provider.on('connect', onConnectListener);\n    provider.on('disconnect', onDisconnectListener);\n    provider.on('accountChanged', onAccountChangeListener);\n    return () => {\n      provider.removeListener('connect', onConnectListener);\n      provider.removeListener('disconnect', onDisconnectListener);\n      provider.removeListener('accountChanged', onAccountChangeListener);\n    };\n  }, [account, provider, setAccount]);\n\n  console.log('createTokenTransferTransaction exists:', typeof createTokenTransferTransaction);\n\n  const transactionStatus = {\n    status: 'pending',\n    message: `\n      交易尚未在本地确认\n      \n      这是正常的，因为交易刚刚被广播到网络\n      \n      交易需要等待网络确认，这个过程需要一些时间\n      \n      请等待区块确认...\n    `\n  };\n\n  return (\n    <>\n      <ConnectButton<IProviderApi>\n        fetchWallets={() => {\n          return Promise.resolve(\n            walletsRef.current.map((wallet) => {\n              return {\n                id: wallet.uuid,\n                name: wallet.name,\n              };\n            }),\n          );\n        }}\n        onConnect={onConnectWallet}\n        onDisconnect={onDisconnectWallet}\n      />\n\n      <ApiGroup title=\"Basics\">\n        <ApiPayload\n          title=\"connect\"\n          description=\"连接钱包并获取公钥\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.connect();\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n      <ApiGroup title=\"Sign Message\">\n        <ApiPayload\n          title=\"signMessage\"\n          description=\"签名消息(存在风险，硬件无法使用)\"\n          presupposeParams={params.signMessage}\n          onExecute={async (request: string) => {\n            return await provider?.signMessage(Buffer.from(request, 'utf8'));\n          }}\n          onValidate={(request: string, result: string) => {\n            // const message = bs58.decode(request).toString();\n            const {\n              signature,\n              publicKey,\n            }: {\n              signature: any;\n              publicKey: string;\n            } = JSON.parse(result);\n\n            let signatureObj;\n            if(Array.isArray(signature)) {\n              signatureObj = new Uint8Array(signature)\n            } else {\n              signatureObj = new Uint8Array(signature.data)\n            }\n            const publicKeyObj = new PublicKey(publicKey);\n            const isValidSignature = nacl.sign.detached.verify(\n              Buffer.from(request, 'utf8'),\n              signatureObj,\n              publicKeyObj.toBytes(),\n            );\n\n            return Promise.resolve(isValidSignature.toString());\n          }}\n        />\n          <ApiPayload\n          title=\"solSignOffchainMessage\"\n          description=\"签名消息(OneKey 私有方法)\"\n          presupposeParams={params.signMessage}\n          onExecute={async (request: string) => {\n            return await provider?.solSignOffchainMessage(Buffer.from(request, 'utf8'));\n          }}\n          onValidate={(request: string, result: string) => {\n            // const message = bs58.decode(request).toString();\n            const {\n              signature,\n              publicKey,\n            }: {\n              signature: any;\n              publicKey: string;\n            } = JSON.parse(result);\n\n            let signatureObj;\n            if(Array.isArray(signature)) {\n              signatureObj = new Uint8Array(signature)\n            } else {\n              signatureObj = new Uint8Array(signature.data)\n            }\n            const publicKeyObj = new PublicKey(publicKey);\n\n            const offchainMessage = new OffchainMessage({\n              message: Buffer.from(request, 'utf8'),\n            });\n            const isValidSignature = nacl.sign.detached.verify(\n              offchainMessage.serialize(),\n              signatureObj,\n              publicKeyObj.toBytes(),\n            );\n\n            return Promise.resolve(isValidSignature.toString());\n          }}\n        />\n      </ApiGroup>\n      <ApiGroup title=\"Transfer\">\n        <ApiPayload\n          title=\"signAndSendTransaction\"\n          description=\"签署并发送交易\"\n          presupposeParams={params.signAndSendTransaction(account?.publicKey)}\n          onExecute={async (request: string) => {\n            const {\n              toPubkey,\n              amount,\n            }: {\n              toPubkey: string;\n              amount: number;\n            } = JSON.parse(request);\n            const recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n\n            const transafe = createTransferTransaction(\n              new PublicKey(account?.publicKey),\n              toPubkey,\n              recentBlockhash,\n              amount,\n            );\n\n            const res = await provider?.signAndSendTransaction(transafe);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"signTransaction\"\n          description=\"签署交易\"\n          presupposeParams={params.signAndSendTransaction(account?.publicKey)}\n          onExecute={async (request: string) => {\n            const {\n              toPubkey,\n              amount,\n            }: {\n              toPubkey: string;\n              amount: number;\n            } = JSON.parse(request);\n            const recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n\n            const transafe = createTransferTransaction(\n              new PublicKey(account?.publicKey),\n              toPubkey,\n              recentBlockhash,\n              amount,\n            );\n            const res = await provider?.signTransaction(transafe);\n            if(hasVersionedTx(res)) {\n              return 'error: Tx is Versioned Transaction';\n            }\n            return Buffer.from(res.serialize()).toString('hex')\n          }}\n          onValidate={async (request: string, result: string) => {\n            const tx = Transaction.from(Buffer.from(result, 'hex'));\n            const verified = tx.verifySignatures();\n\n            // TODO: type error, may be passed wrong options\n            const res = await connection.simulateTransaction(tx);\n\n            return {\n              success: res.value.err === null,\n              verified,\n              tryRun: res,\n              tx\n            };\n          }}\n        />\n        <ApiPayload\n          title=\"signTransaction (Versioned)\"\n          description=\"签署 Versioned 交易\"\n          presupposeParams={params.signAndSendTransaction(account?.publicKey)}\n          onExecute={async (request: string) => {\n            const {\n              toPubkey,\n              amount,\n            }: {\n              toPubkey: string;\n              amount: number;\n            } = JSON.parse(request);\n            const recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n\n            const transafe = createVersionedTransaction(\n              new PublicKey(account?.publicKey),\n              toPubkey,\n              recentBlockhash,\n              amount,\n            );\n            const res = await provider?.signTransaction(transafe);\n\n            if(!hasVersionedTx(res)) {\n              return 'error: Tx is legacy Transaction';\n            }\n\n            return Buffer.from(res.serialize()).toString('hex')\n          }}\n          onValidate={async (request: string, result: string) => {\n            const tx = VersionedTransaction.deserialize(Buffer.from(result, 'hex'))\n\n            const res = await connection.simulateTransaction(tx)\n            return {\n              success: res.value.err === null,\n              tryRun: res,\n              tx\n            }\n          }}\n        />\n        <ApiPayload\n          title=\"signTransaction (Versioned legacy)\"\n          description=\"签署 Versioned legacy 交易, legacy 旧版本交易，但是返回值是 Versioned 的 Tx\"\n          presupposeParams={params.signAndSendTransaction(account?.publicKey)}\n          onExecute={async (request: string) => {\n            const {\n              toPubkey,\n              amount,\n            }: {\n              toPubkey: string;\n              amount: number;\n            } = JSON.parse(request);\n            const recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n\n            const transfer = createVersionedLegacyTransaction(\n              new PublicKey(account?.publicKey),\n              toPubkey,\n              recentBlockhash,\n              amount,\n            );\n            console.log('transfer', transfer);\n            const res = await provider?.signTransaction(transfer);\n            console.log('res', res);\n            if(!hasVersionedTx(res)) {\n              return 'error:Tx is legacy Transaction';\n            }\n            return Buffer.from(res.serialize()).toString('hex');\n          }}\n        />\n        <ApiPayload\n          title=\"signAllTransactions\"\n          description=\"签署多个交易\"\n          presupposeParams={params.signMultipleTransaction(account?.publicKey)}\n          onExecute={async (request: string) => {\n            const params: {\n              toPubkey: string;\n              amount: number;\n            }[] = JSON.parse(request);\n            const recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n\n            const trans = params.map((param) => {\n              return createTransferTransaction(\n                new PublicKey(account?.publicKey),\n                param.toPubkey,\n                recentBlockhash,\n                param.amount,\n              );\n            });\n\n            const res = await provider?.signAllTransactions(trans);\n            return res.map(r => Buffer.from(r.serialize()).toString('hex'))\n          }}\n          onValidate={async (request: string, result: string) => {\n            const txArray = JSON.parse(result) as string[]\n            const txs = txArray.map(r => Transaction.from(Buffer.from(r, 'hex')))\n            const verifiedResult = []\n            for (const tx of txs) {\n              const verified = tx.verifySignatures()\n              const res = await connection.simulateTransaction(tx)\n              verifiedResult.push({\n                success: res.value.err === null,\n                verified,\n                tryRun: res,\n              })\n            }\n            return verifiedResult\n          }}\n        />\n        <ApiPayload\n          title=\"transferToken\"\n          description=\"代币转账\"\n          presupposeParams={params.signAndSendTokenTransaction(account?.publicKey)}\n          onExecute={async (request: string) => {\n            const {\n              tokenMint,\n              toPubkey,\n              amount,\n              decimals\n            }: {\n              tokenMint: string;\n              toPubkey: string;\n              amount: number;\n              decimals: number;\n            } = JSON.parse(request);\n\n            const recentBlockhash = (await connection.getLatestBlockhash()).blockhash;\n            const transaction = await createTokenTransferTransaction(\n              connection,\n              new PublicKey(account?.publicKey),\n              new PublicKey(toPubkey),\n              new PublicKey(tokenMint),\n              recentBlockhash,\n              amount,\n              decimals\n            );\n\n            const res = await provider?.signAndSendTransaction(transaction);\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","const TOKEN_LIST = [\n  {\n    symbol: 'USDT',\n    tokenMint: 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n    decimals: 6\n  },\n  {\n    symbol: 'USDC',\n    tokenMint: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n    decimals: 6\n  },\n  // {\n  //   symbol: 'RNDR',\n  //   tokenMint: '7atgF8KQo4wJrD5ATGX7t1V2zVvykPJbFfNeVf1icFv1',\n  //   decimals: 8\n  // },\n];\nexport default {\n  signMessage: [\n    {\n      id: 'signMessage',\n      name: 'signMessage',\n      value: 'Hello OneKey',\n    },\n  ],\n  signAndSendTransaction: (publicKey: string) => [\n    {\n      id: 'signAndSendTransaction',\n      name: 'Normal Transaction',\n      value: JSON.stringify({\n        toPubkey: publicKey,\n        amount: 100,\n      }),\n    },\n  ],\n  signAndSendTokenTransaction: (publicKey: string) => \n    TOKEN_LIST.map(token => ({\n      id: `signAndSendTokenTransaction_${token.symbol}`,\n      name: `Send ${token.symbol} Token`,\n      value: JSON.stringify({\n        tokenMint: token.tokenMint,\n        toPubkey: publicKey,\n        amount: 0.000001,\n        decimals: token.decimals\n      }),\n    })),\n  signMultipleTransaction: (publicKey: string) => [\n    {\n      id: 'signMultipleTransaction',\n      name: 'Sign Multiple Transaction',\n      value: JSON.stringify([\n        {\n          toPubkey: publicKey,\n          amount: 100,\n        },\n        {\n          toPubkey: publicKey,\n          amount: 100,\n        },\n      ]),\n    },\n  ],\n  signRawTransaction: [\n    {\n      id: 'sign raw tx Transaction',\n      name: 'stake io',\n      value: JSON.stringify({\n        message:\n          '78NZKdHqXG3dk1M3BzEuRStNSqZs7R7HpJqDC4XseXJdjvXCyY637Gpod7K2qSccnHkBiNoNLbjtDp5CAXzZNhY35qhfdW6imBpT8UwJJArJukctXz9uGFezAMpmHC8qyeUKeeW9DL9UpVLPrjRcq8UXxv4NaoGLsTenuziN76voXyd5Lo44EsLysFNBGELtHKzGXGznAhmabQnqnBJn64HadjRfZvjprcNiy6nbcrvjQQEZnDEXZ4WunuR7zfCZZPk1TUW2KFDymfyLYcY44cJvYi9L5VZdxvG1ifHRrxXefagfwAjL5a1wTRConmZTcVx5ayZ2SYDGxVdkrGDqLaFonGHxrzJmk1gs1mrLjqiQvQn79EQdxyvZyUDgUEMzV18yjm6nya57VXQfvei93zPDesRQTYs3yQzD1aYSjy2up3cgFNhRPt9vYZFHNBFnd9v1kPzffGbyMeNbeK8M3TPBbCxP6NEgzxmDsihB2s9bajKb3tpgaVUKQQrJiK8c5AvXWcewVFfSWBk6R7whTunRfUVXotR4d9VRfCoYgVUFZoUpSHGh111kKd4aygt4q9vh2MzoNkyoPJU32WtA899rXZ1baNKrkoeLmS7FxaSBa6jJLr1F3BHMLCnzWvPG2EE3y1afpjwkKz7Hf59rfSQFMghkHYc9DJPkbLiE4DcZiBf4q1gAva32ZZaSBruzFwLMjkm5roBx7CsmQ5tFnBtcYrF5eTke9TNNRxSLeZwU6ht1yMBsScKogN9Kmgq5uXFyAQ8BXnero7UaV7CYxeYjzeCSvsv3R',\n      }),\n    },\n  ],\n};\n","/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\n\n// Max off-chain message length supported by Ledger\nconst OFFCM_MAX_LEDGER_LEN = 1212;\n// Max length of version 0 off-chain message\nconst OFFCM_MAX_V0_LEN = 65515;\n\nfunction isValidUTF8(data: Uint8Array): boolean {\n    const length = data.length;\n    let i = 0;\n\n    while (i < length) {\n        if (data[i] < 0x80) {\n            /* 0xxxxxxx */\n            ++i;\n        } else if ((data[i] & 0xe0) == 0xc0) {\n            /* 110XXXXx 10xxxxxx */\n            if (i + 1 >= length || (data[i + 1] & 0xc0) != 0x80 ||\n                (data[i] & 0xfe) == 0xc0) /* overlong? */ {\n                return false;\n            } else {\n                i += 2;\n            }\n        } else if ((data[i] & 0xf0) == 0xe0) {\n            /* 1110XXXX 10Xxxxxx 10xxxxxx */\n            if (i + 2 >= length || (data[i + 1] & 0xc0) != 0x80 || (data[i + 2] & 0xc0) != 0x80 ||\n                (data[i] == 0xe0 && (data[i + 1] & 0xe0) == 0x80) || /* overlong? */\n                (data[i] == 0xed && (data[i + 1] & 0xe0) == 0xa0) || /* surrogate? */\n                (data[i] == 0xef && data[i + 1] == 0xbf &&\n                 (data[i + 2] & 0xfe) == 0xbe)) /* U+FFFE or U+FFFF? */ {\n                return false;\n            } else {\n                i += 3;\n            }\n        } else if ((data[i] & 0xf8) == 0xf0) {\n            /* 11110XXX 10XXxxxx 10xxxxxx 10xxxxxx */\n            if (i + 3 >= length || (data[i + 1] & 0xc0) != 0x80 || (data[i + 2] & 0xc0) != 0x80 ||\n                (data[i + 3] & 0xc0) != 0x80 ||\n                (data[i] == 0xf0 && (data[i + 1] & 0xf0) == 0x80) || /* overlong? */\n                (data[i] == 0xf4 && data[i + 1] > 0x8f) || data[i] > 0xf4) /* > U+10FFFF? */ {\n                return false;\n            } else {\n                i += 4;\n            }\n        } else {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport class OffchainMessage {\n    version: number;\n    messageFormat: number | undefined;\n    message: Buffer | undefined;\n\n    /**\n     * Constructs a new OffchainMessage\n     * @param {version: number, messageFormat: number, message: string | Buffer} opts - Constructor parameters\n     */\n    constructor(opts: { version?: number; messageFormat?: number; message: Buffer }) {\n        this.version = 0;\n        this.messageFormat = undefined;\n        this.message = undefined;\n\n        if (!opts) {\n            return;\n        }\n        if (opts.version) {\n            this.version = opts.version;\n        }\n        if (opts.messageFormat) {\n            this.messageFormat = opts.messageFormat;\n        }\n        if (opts.message) {\n            this.message = Buffer.from(opts.message);\n            if (this.version === 0) {\n                if (!this.messageFormat) {\n                    this.messageFormat = OffchainMessage.guessMessageFormat(this.message);\n                }\n            }\n        }\n    }\n\n    static guessMessageFormat(message: Buffer) {\n        if (Object.prototype.toString.call(message) !== '[object Uint8Array]') {\n            return undefined;\n        }\n        if (message.length <= OFFCM_MAX_LEDGER_LEN) {\n            if (OffchainMessage.isPrintableASCII(message)) {\n                return 0;\n            } else if (OffchainMessage.isUTF8(message)) {\n                return 1;\n            }\n        } else if (message.length <= OFFCM_MAX_V0_LEN) {\n            if (OffchainMessage.isUTF8(message)) {\n                return 2;\n            }\n        }\n        return undefined;\n    }\n\n    static isPrintableASCII(buffer: Buffer) {\n        return (\n            buffer &&\n            buffer.every((element) => {\n                return element >= 0x20 && element <= 0x7e;\n            })\n        );\n    }\n\n    static isUTF8(buffer: Buffer) {\n        return buffer && isValidUTF8(buffer);\n    }\n\n    isValid() {\n        if (this.version !== 0) {\n            return false;\n        }\n        if (!this.message) {\n            return false;\n        }\n        const format = OffchainMessage.guessMessageFormat(this.message);\n        return format != null && format === this.messageFormat;\n    }\n\n    isLedgerSupported(allowBlindSigning: boolean) {\n        return this.isValid() && (this.messageFormat === 0 || (this.messageFormat === 1 && allowBlindSigning));\n    }\n\n    serialize() {\n        if (!this.isValid()) {\n            throw new Error(`Invalid OffchainMessage: ${JSON.stringify(this)}`);\n        }\n        const buffer = Buffer.alloc(4);\n        let offset = buffer.writeUInt8(this.version);\n        offset = buffer.writeUInt8(this.messageFormat, offset);\n        offset = buffer.writeUInt16LE(this.message.length, offset);\n        return Buffer.concat([Buffer.from([255]), Buffer.from('solana offchain'), buffer, this.message]);\n    }\n}","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[35%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","const DEFAULT_API = 'https://api.onekeytest.com'\n\nfunction getApiKey(apiKey:string, fromBase64 = true) {\n    if (fromBase64) {\n        const key = Buffer.from(apiKey, 'base64').toString();\n        return getApiKey(key, false);\n    }\n    let result = '';\n    for (let i = 0; i < apiKey.length; i++) {\n      const textChar = apiKey.charCodeAt(i);\n      const keyChar = DEFAULT_API.charCodeAt(i % DEFAULT_API.length);\n      result += String.fromCharCode(textChar ^ keyChar);\n    }\n\n    return result;\n}\n\nfunction getBase64ApiKey(apiKey:string) {\n    const key = getApiKey(apiKey, false);\n    return Buffer.from(key).toString('base64');\n}\n\nexport { getApiKey, getBase64ApiKey };","/* (ignored) */"],"names":["__webpack_exports__","Z","dapps","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Card","jsx","CardTitle","className","CardContent","map","dapp","index","div","Link","href","url","legacyBehavior","a","name","createTransferTransaction","publicKey","receiverPublicKey","recentBlockhash","amount","receiver","PublicKey","transaction","Transaction","add","SystemProgram","transfer","fromPubkey","toPubkey","lamports","feePayer","hasVersionedTx","tx","createVersionedLegacyTransaction","instructions","createAccount","newAccountPubkey","space","programId","messageV0","TransactionMessage","payerKey","compileToLegacyMessage","VersionedTransaction","createVersionedTransaction","compileToV0Message","createTokenTransferTransaction","connection","tokenMint","decimals","fromTokenAccount","getAssociatedTokenAddress","toTokenAccount","createTransferInstruction","BigInt","Math","pow","Example","walletsRef","useRef","uuid","inject","provider","setAccount","account","useWallet","useMemo","Connection","concat","getApiKey","onConnectWallet","selectedWallet","providerDetail","current","find","w","id","Promise","reject","get","window","toast","title","description","connect","toBase58","onDisconnectWallet","disconnect","useEffect","onConnectListener","console","log","onDisconnectListener","onAccountChangeListener","on","removeListener","jsx_runtime","Fragment","ConnectButton","fetchWallets","resolve","wallet","onConnect","onDisconnect","ApiGroup","ApiPayload","disableRequestContent","onExecute","request","res","JSON","stringify","presupposeParams","params","signMessage","Buffer","from","onValidate","result","signatureObj","signature","parse","Array","isArray","Uint8Array","data","publicKeyObj","isValidSignature","nacl","detached","verify","toBytes","toString","solSignOffchainMessage","offchainMessage","OffchainMessage","message","serialize","signAndSendTransaction","getLatestBlockhash","blockhash","transafe","signTransaction","verified","verifySignatures","simulateTransaction","success","value","err","tryRun","deserialize","signMultipleTransaction","trans","signAllTransactions","r","txArray","txs","verifiedResult","push","signAndSendTokenTransaction","DappList","clusterApiUrl","TOKEN_LIST","symbol","token","signRawTransaction","guessMessageFormat","Object","prototype","call","length","isPrintableASCII","isUTF8","buffer","every","element","isValidUTF8","i","isValid","version","format","messageFormat","isLedgerSupported","allowBlindSigning","alloc","offset","writeUInt8","writeUInt16LE","constructor","opts","undefined","accountInfoKeys","address","chainId","settings","useSettings","connectDialogRef","autoConnectedRef","wallets","setWallets","useState","setProvider","connectWallet","useCallback","_provider","accountInfo","error","disconnectWallet","closeDialog","setTimeout","click","connectWalletWithDialog","options","directConnection","timeout","autoConnect","clearTimeout","Dialog","DialogTrigger","asChild","Button","onClick","DialogContent","DialogClose","ref","DialogHeader","DialogTitle","logo","img","alt","src","span","tags","tag","DialogDescription","target","variant","keys","key","DialogPrimitive","DialogPortal","DialogOverlay","React","props","cn","displayName","children","X","apiKey","fromBase64","textChar","charCodeAt","keyChar","DEFAULT_API","String","fromCharCode"],"sourceRoot":""}