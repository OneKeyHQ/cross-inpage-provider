{"version":3,"file":"static/chunks/4431.4de5f67159d2bcfd.js","mappings":"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","sources":["webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/chains/btc/blockbook.ts","webpack://_N_E/./components/chains/btc/params.ts","webpack://_N_E/./components/chains/btc/utils.ts","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/./components/ui/dialog.tsx","webpack://_N_E/./lib/api.ts","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/bitcore-lib/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/brorand|crypto","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/elliptic/node_modules/bn.js/lib|buffer","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/readable-stream/lib/internal/streams|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/readable-stream/lib|util","webpack://_N_E/ignored|/home/runner/work/cross-inpage-provider/cross-inpage-provider/packages/example/node_modules/secp256k1/node_modules/bn.js/lib|buffer","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","import type { AxiosError, AxiosInstance } from 'axios';\nimport axios from 'axios';\n\nexport type IBtcUTXO = {\n  txid: string;\n  vout: number;\n  value: string;\n  confirmations?: number;\n};\n\nexport type IBtcTransaction = {\n  hex: string;\n  vout: {\n    value: string;\n    n: number;\n    hex: string;\n    addresses: string[];\n    isAddress: boolean;\n  }[];\n};\n\nexport class BlockBook {\n  readonly request: AxiosInstance;\n\n  constructor(url: string) {\n    this.request = axios.create({\n      baseURL: url,\n      timeout: 10000,\n    });\n  }\n\n  async getUTXOs(address: string): Promise<Array<IBtcUTXO>> {\n    return this.request.get<Array<IBtcUTXO>>(`/api/v2/utxo/${address}`).then((res) => res.data);\n  }\n\n  async getTransaction(txId: string): Promise<IBtcTransaction> {\n    return this.request.get<IBtcTransaction>(`/api/v2/tx/${txId}`).then((res) => res.data);\n  }\n}\n","export default {\n  switchNetwork: [\n    {\n      id: 'switchNetwork livenet',\n      name: 'switchNetwork livenet',\n      value: 'livenet',\n    },\n    {\n      id: 'switchNetwork testnet',\n      name: 'switchNetwork testnet',\n      value: 'testnet',\n    },\n  ],\n  switchChain: [\n    {\n      id: 'Bitcoin Mainnet',\n      name: 'Bitcoin Mainnet',\n      value: 'BITCOIN_MAINNET',\n    },\n    {\n      id: 'Bitcoin Testnet',\n      name: 'Bitcoin Testnet',\n      value: 'BITCOIN_TESTNET',\n    },\n    {\n      id: 'Bitcoin Testnet4 (Beta)',\n      name: '(不支持) Bitcoin Testnet4 (Beta)',\n      value: 'BITCOIN_TESTNET4',\n    },\n    {\n      id: 'Bitcoin Signet',\n      name: 'Bitcoin Signet',\n      value: 'BITCOIN_SIGNET',\n    },\n    {\n      id: 'Fractal Bitcoin Mainnet',\n      name: '(不支持) Fractal Bitcoin Mainnet',\n      value: 'FRACTAL_BITCOIN_MAINNET',\n    },\n    {\n      id: 'Fractal Bitcoin Testnet',\n      name: '(不支持) Fractal Bitcoin Testnet',\n      value: 'FRACTAL_BITCOIN_TESTNET',\n    },\n  ],\n  signMessage: [\n    {\n      id: 'signMessage ecdsa default',\n      name: 'SignMessage ECDSA Default',\n      value: JSON.stringify({\n        msg: 'Hello World',\n      }),\n    },\n    {\n      id: 'signMessage ecdsa',\n      name: 'SignMessage ECDSA',\n      value: JSON.stringify({\n        msg: 'abcdefghijk123456789',\n        type: 'ecdsa',\n      }),\n    },\n    {\n      id: 'signMessage bip322-simple',\n      name: 'SignMessage Bip322-Simple',\n      value: JSON.stringify({\n        msg: 'hello onekey!',\n        type: 'bip322-simple',\n      }),\n    },\n  ],\n  sendBitcoin: (address: string) => [\n    {\n      id: 'sendBitcoin',\n      name: 'SendBitcoin',\n      value: JSON.stringify({\n        toAddress: address,\n        satoshis: 1000,\n      }),\n    },\n  ],\n  pushTx: [\n    {\n      id: 'pushTx',\n      name: 'PushTx',\n      value:\n        '02000000000101ed7f3b53b6bfd3b9e72c794ff95549ea774f017e6e62b0ca735ded29dc8dbc7e0000000000fdffffff02f26a000000000000225120145ddbafe27a50b48ff2321ae186132971b44a6757879ad35739e152d009c0f30000000000000000096a5d0614c0a233144101408928d42444aba4eb0edfb578a14dbc848d5a7354ee66d3cb170511d169e3dfcff3a5f326d01c0227acc6edd5d56c943215eea72e128b28d705da8482b18d9a6500000000',\n    },\n  ],\n  signPsbt: [\n    {\n      id: 'signPsbt',\n      name: 'signPsbt',\n      value: JSON.stringify({\n        psbtHex: '020000000',\n        options: {\n          autoFinalized: false,\n          toSignInputs: [\n            {\n              index: 0,\n              address: 'tb1q8h8....mjxzny',\n            },\n            {\n              index: 1,\n              publicKey: 'tb1q8h8....mjxzny',\n              sighashTypes: [1],\n            },\n            {\n              index: 2,\n              publicKey: '02062...8779693f',\n            },\n          ],\n        },\n      }),\n    },\n  ],\n  signPsbts: [\n    {\n      id: 'signPsbts',\n      name: 'signPsbts',\n      value: JSON.stringify({\n        psbtHexs: ['020000000', '020000000'],\n        options: [\n          {\n            autoFinalized: false,\n            toSignInputs: [\n              {\n                index: 0,\n                address: 'tb1q8h8....mjxzny',\n              },\n              {\n                index: 1,\n                publicKey: 'tb1q8h8....mjxzny',\n                sighashTypes: [1],\n              },\n              {\n                index: 2,\n                publicKey: '02062...8779693f',\n              },\n            ],\n          },\n          {\n            autoFinalized: false,\n            toSignInputs: [\n              {\n                index: 0,\n                address: 'tb1q8h8....mjxzny',\n              },\n              {\n                index: 1,\n                publicKey: 'tb1q8h8....mjxzny',\n                sighashTypes: [1],\n              },\n              {\n                index: 2,\n                publicKey: '02062...8779693f',\n              },\n            ],\n          },\n        ],\n      }),\n    },\n  ],\n  pushPsbt: [\n    {\n      id: 'signPsbts',\n      name: 'signPsbts',\n      value: '020000000',\n    },\n  ],\n};\n","import * as bitcoin from 'bitcoinjs-lib';\nimport * as ecc from 'tiny-secp256k1';\nimport { BlockBook, IBtcUTXO } from './blockbook';\nimport { getApiKey } from '../../../lib/api';\n\nbitcoin.initEccLib(ecc);\n\nfunction estimateTransactionFee(numInputs: number, numOutputs: number, feePerByte: number) {\n  const inputSize = 148; // 非 SegWit，SegWit 输入更小\n  const outputSize = 34;\n  const txSize = numInputs * inputSize + numOutputs * outputSize; // 简化估算\n  return txSize * feePerByte;\n}\n\nfunction checkWitnessType(address: string, scriptHex: string) {\n  const isBech32 = address.startsWith('bc1') || address.startsWith('tb1'); // Checks for both mainnet and testnet Bech32 addresses\n  const isP2SH = address.startsWith('3') || address.startsWith('2'); // Mainnet and testnet P2SH addresses\n\n  if (isBech32) {\n    return true;\n  } else if (isP2SH) {\n    // P2SH could be either, check script to determine if it is SegWit\n    if (scriptHex.startsWith('0014') || scriptHex.startsWith('0020')) {\n      // Scripts that indicate P2WPKH or P2WSH wrapped in P2SH\n      return true;\n    }\n  }\n\n  return false;\n}\n\nasync function addInputsAndOutputs(\n  psbt: bitcoin.Psbt,\n  utxos: IBtcUTXO[],\n  fromAddress: string,\n  toAddress: string,\n  amount: number,\n  gasPrice: number,\n  blockbook: BlockBook,\n) {\n  let totalInput = 0;\n  let totalFee = 0;\n  const selectedUtxos: IBtcUTXO[] = [];\n  for (const utxo of utxos) {\n    const txDetails = await blockbook.getTransaction(utxo.txid);\n    const txHex = txDetails.hex;\n    const tx = bitcoin.Transaction.fromHex(txHex);\n    const output = tx.outs[utxo.vout];\n    const scriptHex = output.script.toString('hex');\n\n    selectedUtxos.push(utxo);\n    totalInput += parseInt(utxo.value);\n\n    const input = {\n      hash: utxo.txid,\n      index: utxo.vout,\n      sequence: 0xffffffff,\n    };\n\n    console.log('scriptHex', scriptHex);\n\n    if (checkWitnessType(fromAddress, scriptHex)) {\n      // SegWit\n      // @ts-expect-error\n      input.witnessUtxo = {\n        script: Buffer.from(scriptHex, 'hex'),\n        value: parseInt(utxo.value),\n      };\n    } else {\n      // Non-SegWit\n      // @ts-expect-error\n      input.nonWitnessUtxo = Buffer.from(txHex, 'hex');\n    }\n\n    psbt.addInput(input);\n\n    const estimatedFee = estimateTransactionFee(selectedUtxos.length, 2, gasPrice);\n    const needed = amount + estimatedFee;\n    if (totalInput >= needed) {\n      totalFee = estimatedFee;\n      break; // Stop once we have enough funds\n    }\n  }\n\n  psbt.addOutput({\n    address: toAddress,\n    value: amount,\n  });\n\n  // Calculate and add change output if necessary\n  const change = totalInput - amount - totalFee;\n  if (change > 0) {\n    psbt.addOutput({\n      address: fromAddress, // Change goes back to your address\n      value: change,\n    });\n  }\n\n  return selectedUtxos;\n}\n\nexport async function createPSBT(\n  senderAddress: string,\n  toAddress: string,\n  amount: number,\n  gasPrice: number,\n  network: bitcoin.Network,\n) {\n  if (!toAddress || !amount) {\n    throw new Error('toAddress or amount is required');\n  }\n\n  let url: string;\n  if (network === bitcoin.networks.bitcoin) {\n    // url = 'https://btc1.trezor.io';\n    url = `https://go.getblock.io/${getApiKey(\"WU1HRxULSUpQQ1saWw8GUwRJQlERFUhSXVtfERVFF18=\")}`;\n  } else if (network === bitcoin.networks.testnet) {\n    // url = 'https://tbtc1.trezor.io';\n    url = `https://go.getblock.io/${getApiKey(\"DUIXSEAPHktSEgweW1cBUwcdEQYWEEtTW1hRTUMVFQg=\")}`;\n  }\n  if (!url) {\n    throw new Error('unsupported network');\n  }\n  const blockbook = new BlockBook(url);\n\n  const psbt = new bitcoin.Psbt({ network });\n  psbt.setVersion(2);\n  psbt.setLocktime(0);\n\n  const utxos = await blockbook.getUTXOs(senderAddress);\n  if (utxos.length === 0) {\n    throw new Error('当前地址没有在 Blockbook 找到 UTXO');\n  }\n\n  const selectedUtxo = await addInputsAndOutputs(\n    psbt,\n    utxos,\n    senderAddress,\n    toAddress,\n    amount,\n    gasPrice,\n    blockbook,\n  );\n\n  return JSON.stringify({\n    psbtHex: psbt.toHex(),\n    options: {\n      autoFinalized: false,\n      toSignInputs: selectedUtxo.map((utxo, index) => ({\n        index,\n        address: senderAddress,\n      })),\n    },\n  });\n}\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[35%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","const DEFAULT_API = 'https://api.onekeytest.com'\n\nfunction getApiKey(apiKey:string, fromBase64 = true) {\n    if (fromBase64) {\n        const key = Buffer.from(apiKey, 'base64').toString();\n        return getApiKey(key, false);\n    }\n    let result = '';\n    for (let i = 0; i < apiKey.length; i++) {\n      const textChar = apiKey.charCodeAt(i);\n      const keyChar = DEFAULT_API.charCodeAt(i % DEFAULT_API.length);\n      result += String.fromCharCode(textChar ^ keyChar);\n    }\n\n    return result;\n}\n\nfunction getBase64ApiKey(apiKey:string) {\n    const key = getApiKey(apiKey, false);\n    return Buffer.from(key).toString('base64');\n}\n\nexport { getApiKey, getBase64ApiKey };","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["__webpack_exports__","Z","dapps","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Card","jsx","CardTitle","className","CardContent","map","dapp","index","div","Link","href","url","legacyBehavior","a","name","BlockBook","getUTXOs","address","request","get","concat","then","res","data","getTransaction","txId","constructor","axios","create","baseURL","timeout","switchNetwork","id","value","switchChain","signMessage","JSON","stringify","msg","type","sendBitcoin","toAddress","satoshis","pushTx","signPsbt","psbtHex","options","autoFinalized","toSignInputs","publicKey","sighashTypes","signPsbts","psbtHexs","pushPsbt","addInputsAndOutputs","psbt","utxos","fromAddress","amount","gasPrice","blockbook","totalInput","totalFee","selectedUtxos","utxo","numInputs","txDetails","txid","txHex","hex","tx","bitcoin","fromHex","output","outs","vout","scriptHex","script","toString","push","parseInt","input","hash","sequence","console","log","checkWitnessType","isBech32","startsWith","isP2SH","witnessUtxo","Buffer","from","nonWitnessUtxo","addInput","estimatedFee","length","txSize","numOutputs","outputSize","needed","addOutput","change","createPSBT","senderAddress","network","getApiKey","testnet","setVersion","setLocktime","selectedUtxo","toHex","ecc","accountInfoKeys","chainId","ConnectButton","fetchWallets","onConnect","onDisconnect","settings","useSettings","connectDialogRef","useRef","autoConnectedRef","wallets","setWallets","useState","setProvider","setAccount","provider","account","useWallet","connectWallet","useCallback","wallet","_provider","accountInfo","error","toast","title","description","disconnectWallet","current","closeDialog","setTimeout","click","connectWalletWithDialog","directConnection","useEffect","autoConnect","clearTimeout","Dialog","DialogTrigger","asChild","Button","onClick","DialogContent","DialogClose","ref","DialogHeader","DialogTitle","logo","img","alt","src","span","tags","tag","DialogDescription","target","variant","Object","keys","key","DialogPrimitive","DialogPortal","DialogOverlay","React","props","cn","displayName","children","X","apiKey","fromBase64","result","i","textChar","charCodeAt","keyChar","DEFAULT_API","String","fromCharCode"],"sourceRoot":""}