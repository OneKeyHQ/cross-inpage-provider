{"version":3,"file":"static/chunks/7203.aab7aa4dba937dcc.js","mappings":"2LA8Be,SAASA,UACtB,IAAMC,EAAYC,WAvBlB,GAAM,CAACD,EAAWE,EAAa,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,cAmB3C,MAjBAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,SAASC,eACHC,OAAOC,UAAU,CAAG,IACtBL,EAAa,YAEbA,EAAa,aAEjB,CAKA,OAHAI,OAAOE,gBAAgB,CAAC,SAAUH,cAClCA,eAEO,KACLC,OAAOG,mBAAmB,CAAC,SAAUJ,aACvC,CACF,EAAG,EAAE,EAEEL,CACT,UAKE,eAAIA,EAEA,GAAAU,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,6BACb,GAAAH,EAAAI,IAAA,EAACC,EAAAA,EAAmBA,CAAAA,CAACf,UAAU,aAAaa,UAAU,8BACpD,GAAAH,EAAAC,GAAA,EAACK,EAAAA,EAAcA,CAAAA,CAACH,UAAU,2CACxB,GAAAH,EAAAC,GAAA,EAACM,SAAAA,CAAOC,IAAI,IAAIC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,MAAO,MAEzE,GAAAZ,EAAAC,GAAA,EAACY,EAAAA,EAAeA,CAAAA,CAACC,WAAU,KAC3B,GAAAd,EAAAC,GAAA,EAACK,EAAAA,EAAcA,CAAAA,CAACH,UAAU,2CACxB,GAAAH,EAAAC,GAAA,EAACM,SAAAA,CAAOC,IAAI,IAAIC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,MAAO,MAEzE,GAAAZ,EAAAC,GAAA,EAACY,EAAAA,EAAeA,CAAAA,CAACC,WAAU,KAC3B,GAAAd,EAAAC,GAAA,EAACK,EAAAA,EAAcA,CAAAA,CAACH,UAAU,2CACxB,GAAAH,EAAAC,GAAA,EAACM,SAAAA,CAAOC,IAAI,IAAIC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,MAAO,WAQ/E,GAAAZ,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,6BACb,GAAAH,EAAAI,IAAA,EAACC,EAAAA,EAAmBA,CAAAA,CAACf,UAAU,WAAWa,UAAU,6BAClD,GAAAH,EAAAC,GAAA,EAACK,EAAAA,EAAcA,CAAAA,CAACH,UAAU,2CACxB,GAAAH,EAAAC,GAAA,EAACM,SAAAA,CAAOC,IAAI,IAAIC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,MAAO,MAEzE,GAAAZ,EAAAC,GAAA,EAACK,EAAAA,EAAcA,CAAAA,CAACH,UAAU,2CACxB,GAAAH,EAAAC,GAAA,EAACM,SAAAA,CAAOC,IAAI,IAAIC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,MAAO,UAKjF,yLC5DA,IAAMP,oBAAsB,OAAC,CAC3BF,UAAAA,CAAS,CACT,GAAGY,EACwD,CAAAC,QAC3D,GAAAhB,EAAAC,GAAA,EAACgB,EAAAA,EAA6B,EAC5Bd,UAAWe,CAAAA,EAAAA,EAAAA,EAAAA,EAAG,oEAAqEf,GAClF,GAAGY,CAAK,EACV,EAGGT,EAAiBW,EAAAA,EAAwB,CAEzCJ,gBAAkB,OAAC,CACvBC,WAAAA,CAAU,CACVX,UAAAA,CAAS,CACT,GAAGY,EAGJ,CAAAC,QACC,GAAAhB,EAAAC,GAAA,EAACgB,EAAAA,EAAoC,EACnCd,UAAWe,CAAAA,EAAAA,EAAAA,EAAAA,EACT,0oBACAf,GAED,GAAGY,CAAK,UAERD,GACC,GAAAd,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,sFACb,GAAAH,EAAAC,GAAA,EAACkB,EAAAA,CAAYA,CAAAA,CAAChB,UAAU,eAGQ","sources":["webpack://_N_E/./components/chains/multichain/example.tsx","webpack://_N_E/./components/ui/resizable.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from '../../../components/ui/resizable';\n\nfunction useResponsiveLayout() {\n  const [direction, setDirection] = useState('horizontal');\n\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth < 768) {\n        setDirection('vertical');\n      } else {\n        setDirection('horizontal');\n      }\n    }\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return direction;\n}\n\nexport default function Example() {\n  const direction = useResponsiveLayout();\n\n  if (direction === 'horizontal') {\n    return (\n      <div className=\"flex min-h-screen\">\n        <ResizablePanelGroup direction=\"horizontal\" className=\"flex min-h-screen\">\n          <ResizablePanel className=\"overflow-auto flex min-h-screen\">\n            <iframe src=\"/\" style={{ width: '100%', height: '100%', border: 'none' }} />\n          </ResizablePanel>\n          <ResizableHandle withHandle />\n          <ResizablePanel className=\"overflow-auto flex min-h-screen\">\n            <iframe src=\"/\" style={{ width: '100%', height: '100%', border: 'none' }} />\n          </ResizablePanel>\n          <ResizableHandle withHandle />\n          <ResizablePanel className=\"overflow-auto flex min-h-screen\">\n            <iframe src=\"/\" style={{ width: '100%', height: '100%', border: 'none' }} />\n          </ResizablePanel>\n        </ResizablePanelGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex min-h-screen\">\n      <ResizablePanelGroup direction=\"vertical\" className=\"flex min--screen\">\n        <ResizablePanel className=\"overflow-auto flex min-h-[50vh]\">\n          <iframe src=\"/\" style={{ width: '100%', height: '100%', border: 'none' }} />\n        </ResizablePanel>\n        <ResizablePanel className=\"overflow-auto flex min-h-[50vh]\">\n          <iframe src=\"/\" style={{ width: '100%', height: '100%', border: 'none' }} />\n        </ResizablePanel>\n      </ResizablePanelGroup>\n    </div>\n  );\n}\n","import { GripVertical } from 'lucide-react';\nimport * as ResizablePrimitive from 'react-resizable-panels';\n\nimport { cn } from '../../lib/utils';\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn('flex h-full w-full data-[panel-group-direction=vertical]:flex-col', className)}\n    {...props}\n  />\n);\n\nconst ResizablePanel = ResizablePrimitive.Panel;\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean;\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      'relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90',\n      className,\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-40 flex h-12 w-5 items-center justify-center rounded-md border bg-border\">\n        <GripVertical className=\"h-4 w-4\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n);\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle };\n"],"names":["Example","direction","useResponsiveLayout","setDirection","useState","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","jsxs","ResizablePanelGroup","ResizablePanel","iframe","src","style","width","height","border","ResizableHandle","withHandle","props","param","ResizablePrimitive","cn","GripVertical"],"sourceRoot":""}