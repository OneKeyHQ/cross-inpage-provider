{"version":3,"file":"static/chunks/1491.6a379e22111e42e5.js","mappings":"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","sources":["webpack://_N_E/./components/DAppList.tsx","webpack://_N_E/./components/InputWithSave.tsx","webpack://_N_E/./components/chains/cardano/dapps.config.ts","webpack://_N_E/./components/chains/cardano/example.tsx","webpack://_N_E/./components/chains/cardano/params.ts","webpack://_N_E/./components/connect/ConnectButton.tsx","webpack://_N_E/./components/ui/dialog.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\nimport { Card, CardContent, CardTitle } from './ui/card';\n\nexport type Dapp = {\n  name: string;\n  url: string;\n};\n\nexport type DappListProps = {\n  dapps: Dapp[];\n};\n\nconst DappList: React.FC<DappListProps> = ({ dapps }) => {\n  return (\n    <Card>\n      <CardTitle className=\"text-xl\">Dapp Bookmarks</CardTitle>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {dapps.map((dapp, index) => (\n          <div key={index} className=\"border p-2 rounded-lg shadow-sm hover:shadow-md\">\n            <Link href={dapp.url} legacyBehavior>\n              <a className=\"text-blue-500 hover:underline text-lg block\">{dapp.name} →</a>\n            </Link>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default DappList;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { debounce } from 'lodash';\nimport { Input } from './ui/input';\n\nexport type IInputWithSaveProps = {\n  storageKey: string;\n  onChange: (value: string) => void;\n  type?: 'text' | 'number';\n  defaultValue?: string;\n};\n\nexport function InputWithSave({\n  storageKey,\n  onChange,\n  defaultValue,\n  type = 'text',\n}: IInputWithSaveProps) {\n  const [inputValue, setInputValue] = useState('');\n\n  // 初始化时从 localStorage 中获取值\n  useEffect(() => {\n    const storedValue = localStorage.getItem(storageKey) || defaultValue || '';\n    setInputValue(storedValue);\n    onChange(storedValue);\n  }, [storageKey, defaultValue, onChange]);\n\n  // 使用 useCallback 来定义 debouncedChangeHandler\n  const debouncedChangeHandler = useCallback(\n    debounce((value: string) => {\n      localStorage.setItem(storageKey, value);\n      onChange(value);\n    }, 300),\n    [storageKey, onChange],\n  );\n\n  // 清除 debounce\n  useEffect(() => {\n    return () => debouncedChangeHandler.cancel();\n  }, [debouncedChangeHandler]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    setInputValue(value);\n    debouncedChangeHandler(value);\n  };\n\n  return (\n    <Input\n      key={storageKey}\n      type={type}\n      value={inputValue}\n      className=\"w-full p-2 border border-gray-300 rounded-md\"\n      onChange={handleChange}\n      placeholder=\"输入内容\"\n    />\n  );\n}\n","export const dapps = [\n  {\n    name: 'Minswap',\n    url: 'https://app.minswap.org/',\n  },\n  {\n    name: 'SundaeSwap',\n    url: 'https://sundaeswap.finance/',\n  },\n];\n","/* eslint-disable @typescript-eslint/no-unused-vars, */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/require-await, @typescript-eslint/restrict-template-expressions */\nimport { dapps } from './dapps.config';\nimport ConnectButton from '../../../components/connect/ConnectButton';\nimport { useEffect, useRef, useState } from 'react';\nimport { get, isEmpty } from 'lodash';\nimport { IProviderApi, IProviderInfo } from './types';\nimport { ApiPayload, ApiGroup } from '../../ApiActuator';\nimport { useWallet } from '../../../components/connect/WalletContext';\nimport type { IKnownWallet } from '../../../components/connect/types';\nimport DappList from '../../../components/DAppList';\nimport params from './params';\nimport { toast } from '../../ui/use-toast';\nimport { Input } from '../../ui/input';\nimport { Blockfrost, Lucid, C, coreToUtxo } from 'lucid-cardano';\nimport type { WalletApi, SignedMessage } from 'lucid-cardano';\nimport { InputWithSave } from '../../InputWithSave';\nimport { bytesToHex, hexToBytes } from '@noble/hashes/utils';\n\n// https://use-cardano.alangaming.com/\n// https://github.com/spacebudz/lucid\n\nfunction cborToAddress(cbor: string) {\n  return C.Address.from_bytes(hexToBytes(cbor)).to_bech32(undefined);\n}\n\n// 添加代币配置\nconst TOKENS: Record<string, { unit: string; decimals: number }> = {\n  ADA: {\n    unit: 'lovelace',\n    decimals: 6\n  },\n  MIN: {\n    unit: '29d222ce763455e3d7a09a665ce554f00ac89d2e99a1a83d267170c64d494e',\n    decimals: 6\n  }\n};\n\nexport default function Example() {\n  const walletsRef = useRef<IProviderInfo[]>([\n    {\n      uuid: 'injected',\n      name: 'Injected Wallet',\n      inject: 'cardano',\n    },\n    {\n      uuid: 'injected-onekey',\n      name: 'Injected OneKey',\n      inject: '$onekey.cardano',\n    },\n  ]);\n\n  const { provider, setAccount, account } = useWallet<IProviderApi>();\n  const projectIdRef = useRef<string | null>(null);\n\n  const [walletApi, setWalletApi] = useState<WalletApi | null>(null);\n  const [lucid, setLucid] = useState<Lucid | null>(null);\n\n  const onConnectWallet = async (selectedWallet: IKnownWallet) => {\n    if (!projectIdRef.current && !process.env.NEXT_PUBLIC_BLOCKFROST_CARDANO_PROJECT_ID) {\n      toast({\n        title: 'Project ID is required',\n        description: 'Please set the project ID in the input box above',\n      });\n\n      window.open('https://blockfrost.io/dashboard');\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const providerDetail = walletsRef.current?.find((w) => w.uuid === selectedWallet.id);\n    if (!providerDetail) {\n      return Promise.reject('Wallet not found');\n    }\n\n    console.log('providerDetail', providerDetail);\n\n    const provider = get(window, providerDetail.inject) as IProviderApi | undefined;\n\n    console.log('provider', provider);\n\n    if (!provider) {\n      toast({\n        title: 'Wallet not found',\n        description: 'Please install the wallet extension',\n      });\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, no-unsafe-optional-chaining\n    const walletApi = await provider?.enable();\n\n    setWalletApi(walletApi);\n\n    let chainId;\n    try {\n      chainId = await walletApi.getNetworkId();\n    } catch (error) {\n      console.log('error', error);\n    }\n\n    let projectId = projectIdRef.current;\n    if (!projectId || isEmpty(projectId)) {\n      projectId = process.env.NEXT_PUBLIC_BLOCKFROST_CARDANO_PROJECT_ID;\n    }\n    const lucid = await Lucid.new(\n      // test id\n      new Blockfrost('https://cardano-mainnet.blockfrost.io/api/v0', projectId),\n      'Mainnet',\n    );\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    lucid.selectWallet(walletApi);\n    setLucid(lucid);\n\n    const address = await lucid.wallet.address();\n\n    return {\n      provider,\n      address,\n      chainId: chainId.toString(),\n    };\n  };\n\n  useEffect(() => {\n    if (!provider) return;\n\n    const onConnectListener = (address: string) => {\n      console.log(`cardano on [connect] ${address}`);\n    };\n    const onAccountChangeListener = (address: string[]) => {\n      console.log(`cardano on [accountChange] ${address}`);\n      if (!address.length) return;\n      setAccount({\n        ...account,\n        address: address[0],\n      });\n    };\n    const onNetworkChangeListener = (network: any) => {\n      console.log(`cardano on [networkChange] ${network}`);\n    };\n\n    const onAction = walletApi?.experimental?.on || provider?.on;\n\n    if (onAction) {\n      try {\n        onAction?.('connect', onConnectListener);\n        onAction?.('accountChange', onAccountChangeListener);\n        onAction?.('networkChange', onNetworkChangeListener);\n      } catch (error) {\n        // ignore\n      }\n    }\n\n    return () => {\n      const offAction = provider?.experimental?.off || provider?.off;\n      if (offAction) {\n        try {\n          offAction?.('connect', onConnectListener);\n          offAction?.('networkChange', onAccountChangeListener);\n          offAction?.('networkChange', onNetworkChangeListener);\n        } catch (error) {\n          // ignore\n        }\n      }\n    };\n  }, [account, provider, setAccount]);\n\n  return (\n    <>\n      <ApiGroup title=\"Blockfrost Project ID\">\n        <div className=\"flex flex-col\">\n          <p>\n            动态生成交易需要一个公开的 RPC 节点，在这里 https://cardano-mainnet.blockfrost.io\n            创建一个 Project 复制 project_id 粘贴到这里（会自动保存）\n          </p>\n          <InputWithSave\n            storageKey=\"cardano-wallet-projectid\"\n            onChange={(value) => (projectIdRef.current = value)}\n          />\n        </div>\n      </ApiGroup>\n      <ConnectButton<IProviderApi>\n        fetchWallets={() => {\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          const wallets = Object.keys(window?.cardano ?? {})\n            .filter((name) => ['onekey', 'lace', 'nami', 'yoroi'].includes(name))\n            .map((key) => {\n              return {\n                uuid: key,\n                name: key,\n                inject: `cardano.${key}`,\n              };\n            });\n\n          // walletsRef.current =   walletsRef.current + wallets 保证不会重复\n          wallets.forEach((wallet) => {\n            if (!walletsRef.current.find((w) => w.uuid === wallet.uuid)) {\n              walletsRef.current.push(wallet);\n            }\n          });\n\n          return Promise.resolve(\n            walletsRef.current.map((wallet) => {\n              return {\n                id: wallet.uuid,\n                name: wallet.name,\n              };\n            }),\n          );\n        }}\n        onConnect={onConnectWallet}\n        onDisconnect={() => {\n          setWalletApi(null);\n          return Promise.resolve();\n        }}\n      />\n      <ApiGroup title=\"Basics\">\n        <ApiPayload\n          title=\"enable\"\n          description=\"获取账户权限\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.enable();\n            setWalletApi(res);\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"isEnabled\"\n          description=\"是否已经连接\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await provider?.isEnabled();\n            return JSON.stringify(res);\n          }}\n        />\n        <ApiPayload\n          title=\"apiVersion\"\n          description=\"获取 API 版本\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            return provider?.apiVersion;\n          }}\n        />\n        <ApiPayload\n          title=\"name\"\n          description=\"获取钱包名称\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            return provider?.name;\n          }}\n        />\n        <ApiPayload\n          title=\"icon\"\n          description=\"获取图标\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            return provider?.icon;\n          }}\n        />\n        <ApiPayload\n          title=\"getNetworkId\"\n          description=\"获取网络 ID\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await walletApi?.getNetworkId();\n            return res.toString();\n          }}\n        />\n        <ApiPayload\n          title=\"getUsedAddresses\"\n          description=\"获取地址列表。(origin 是接口原始信息，decode 是本网站解析的结果)\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await walletApi?.getUsedAddresses();\n            const decode = res.map((address) => {\n              return cborToAddress(address);\n            });\n            return JSON.stringify({\n              origin: res,\n              decode,\n            });\n          }}\n        />\n        <ApiPayload\n          title=\"getUnusedAddresses\"\n          description=\"获取未使用地址。(origin 是接口原始信息，decode 是本网站解析的结果)\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await walletApi?.getUnusedAddresses();\n            const decode = res.map((address) => {\n              return cborToAddress(address);\n            });\n            return JSON.stringify({\n              origin: res,\n              decode,\n            });\n          }}\n        />\n        <ApiPayload\n          title=\"getChangeAddress\"\n          description=\"获取找零地址。(origin 是接口原始信息，decode 是本网站解析的结果)\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await walletApi?.getChangeAddress();\n            const address = cborToAddress(res);\n\n            return JSON.stringify({\n              origin: res,\n              decode: address,\n            });\n          }}\n        />\n        <ApiPayload\n          title=\"getRewardAddresses\"\n          description=\"获取奖励地址。(origin 是接口原始信息，decode 是本网站解析的结果)\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await walletApi?.getRewardAddresses();\n            const decode = res.map((address) => {\n              return cborToAddress(address);\n            });\n            return JSON.stringify({\n              origin: res,\n              decode,\n            });\n          }}\n        />\n        <ApiPayload\n          title=\"getBalance\"\n          description=\"获取余额。(origin 是接口原始信息，decode 是本网站解析的结果)\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await walletApi?.getBalance();\n            const decode = C.Value.from_bytes(hexToBytes(res));\n            return JSON.stringify({\n              origin: res,\n              decode: JSON.parse(decode.to_json()),\n            });\n          }}\n        />\n        <ApiPayload\n          title=\"getUtxos\"\n          description=\"获取 UTXO 列表。(origin 是接口原始信息，decode 是本网站解析的结果)\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await walletApi?.getUtxos();\n            const decode = res.map((utxo) => {\n              const decodeUtxo = C.TransactionUnspentOutput.from_bytes(hexToBytes(utxo));\n              return coreToUtxo(decodeUtxo);\n            });\n\n            return JSON.stringify(\n              {\n                origin: res,\n                decode,\n              },\n              (key, value) =>\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n                typeof value === 'bigint' ? value.toString() : value,\n            );\n          }}\n        />\n        <ApiPayload\n          title=\"getCollateral\"\n          description=\"（暂不支持）获取抵押物\"\n          disableRequestContent\n          onExecute={async (request: string) => {\n            const res = await walletApi?.experimental?.getCollateral();\n            return JSON.stringify(res);\n          }}\n        />\n      </ApiGroup>\n      <ApiGroup title=\"Sign Message\">\n        <ApiPayload\n          title=\"signData\"\n          description=\"(报错) 签名消息\"\n          presupposeParams={params.signData}\n          onExecute={async (request: string) => {\n            const res = await lucid.newMessage(account.address, request).sign();\n            return JSON.stringify(res);\n          }}\n          onValidate={async (request: string, response: string) => {\n            const signedMessage = JSON.parse(response) as SignedMessage;\n\n            console.log('signedMessage', signedMessage);\n\n            const res = lucid.verifyMessage(account.address, request, signedMessage);\n            return Promise.resolve(JSON.stringify(res));\n          }}\n        />\n      </ApiGroup>\n      <ApiGroup title=\"Transafer\">\n        <ApiPayload\n          title=\"signTx\"\n          description=\"签署交易\"\n          onExecute={async (request: string) => {\n            // const res = await walletApi?.signTx(request, true);\n\n            const signedTx = await lucid.fromTx(request).sign().complete();\n            return signedTx.toString();\n          }}\n          // onValidate={async (request: string, response: string) => {\n          //   return await walletApi?.submitTx(response);\n          // }}\n          generateRequestFrom={() => {\n            return (\n              <>\n                <Input\n                  label=\"收款地址\"\n                  type=\"text\"\n                  name=\"toAddress\"\n                  defaultValue={account?.address ?? ''}\n                />\n                <select\n                  name=\"coin\"\n                  defaultValue=\"ADA\"\n                  className=\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm\"\n                >\n                  {Object.keys(TOKENS).map(token => (\n                    <option key={token} value={token}>{token}</option>\n                  ))}\n                </select>\n                <Input\n                  label=\"转账金额(转ADA最小值大约 0.96 ADA)\"\n                  type=\"number\"\n                  name=\"amount\"\n                  defaultValue=\"1000000\"\n                />\n              </>\n            );\n          }}\n          onGenerateRequest={async (fromData: Record<string, any>) => {\n            const toAddress = fromData['toAddress'] as string;\n            const amount = parseInt(fromData['amount'] as string);\n            const coin = (fromData['coin'] as string)?.toUpperCase();\n\n            if (!walletApi) {\n              throw new Error('walletApi is required');\n            }\n\n            if (!toAddress || !amount) {\n              throw new Error('toAddress or amount is required');\n            }\n\n            try {\n              // 查找代币配置\n              const tokenConfig = TOKENS[coin];\n              if (!tokenConfig) {\n                throw new Error(`不支持的代币: ${coin}`);\n              }\n\n              // 构建支付金额\n              const assets: { [key: string]: bigint } = { [tokenConfig.unit]: BigInt(amount) };\n              \n              // 如果不是 ADA，需要添加最小 ADA 作为交易费\n              if (coin !== 'ADA') {\n                assets.lovelace = BigInt(2000000); // 添加 2 ADA 作为最小 ADA 要求\n              }\n\n              const tx = await lucid\n                .newTx()\n                .payToAddress(toAddress, assets)\n                .complete({\n                  coinSelection: true,\n                });\n\n              return Promise.resolve(tx.toString());\n            } catch (error) {\n              console.log('error', error);\n\n              if (error === 'InputsExhaustedError') {\n                throw new Error('余额不足, InputsExhaustedError');\n              }\n\n              throw error;\n            }\n          }}\n        />\n        <ApiPayload\n          title=\"submitTx\"\n          description=\"广播交易\"\n          presupposeParams={[\n            {\n              id: 'submitTx',\n              name: 'submitTx',\n              value:\n                '复制 signTx 签名结果到这里、然后点击执行。\\nsignTx 验证流程会自动广播交易。重复广播会报错。',\n            },\n          ]}\n          onExecute={async (request: string) => {\n            const res = await walletApi?.submitTx(request);\n            return res;\n          }}\n        />\n      </ApiGroup>\n      <DappList dapps={dapps} />\n    </>\n  );\n}\n","export default {\n  signData: [\n    {\n      id: 'signData hello',\n      name: 'signData Hello',\n      value: '48656c6c6f204f6e654b6579',\n    },\n    {\n      id: 'signData',\n      name: 'signData 010203',\n      value: '010203',\n    },\n  ],\n  signTx: [\n    {\n      id: 'signTx',\n      name: 'signTx',\n      value:\n        '84a300818258200528ed5dd2134534df4d999c9cd712e8b47441a0363cc972bf5d5c72635c3e5100018282583901cd5aa28518568615ed6bd4ad40e6cecd65734373bf578489b02830e38d6dc22f3b6dfd333cf6495e8fb3fffbc2936cc010827b32d92eca1b1a000f424082583901922941c2e490c9f9f8706c66f7f46b5abec243fcb663f02817fb9b83aa618af8973bc5f1fdb9c9db97d1c55f0d4d4a1e633bbb14ab43b4fc1a001449d5021a00029075a0f5f6',\n    },\n  ],\n};\n","/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button } from '../ui/button';\nimport { Card, CardContent } from '../ui/card';\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '../ui/dialog';\nimport type { IAccountInfo, IKnownWallet } from './types';\nimport { useWallet } from './WalletContext';\nimport { toast } from '../ui/use-toast';\nimport { get } from 'lodash';\nimport { useSettings } from '../../hooks/useSettings';\n\nexport type ConnectButtonProps<T> = {\n  fetchWallets: () => Promise<IKnownWallet[]>;\n  onConnect: (wallet: IKnownWallet) => Promise<\n    {\n      provider: T;\n    } & Partial<IAccountInfo>\n  >;\n  onDisconnect?: () => Promise<void>;\n};\n\nconst accountInfoKeys: Record<string, string> = {\n  address: '地址',\n  publicKey: '公钥',\n  chainId: '网络',\n};\n\nexport default function ConnectButton<T>({\n  fetchWallets,\n  onConnect,\n  onDisconnect,\n}: ConnectButtonProps<T>) {\n  const { settings } = useSettings();\n  const connectDialogRef = useRef<any>(null);\n  const autoConnectedRef = useRef<boolean>(false);\n\n  const [wallets, setWallets] = useState<IKnownWallet[]>([]);\n\n  const { setProvider, setAccount, provider, account } = useWallet();\n\n  const connectWallet = useCallback(\n    async (wallet: IKnownWallet) => {\n      try {\n        const { provider: _provider, ...accountInfo } = await onConnect(wallet);\n        setProvider(_provider);\n        setAccount(accountInfo);\n      } catch (error) {\n        console.log('connectWallet error', error);\n\n        toast({\n          title: '连接失败',\n          description: get(error, 'message', ''),\n        });\n      }\n    },\n    [onConnect, setAccount, setProvider],\n  );\n\n  const disconnectWallet = useCallback(async () => {\n    autoConnectedRef.current = false;\n    await onDisconnect?.();\n    setProvider(null);\n    setAccount(null);\n  }, [onDisconnect, setAccount, setProvider]);\n\n  const closeDialog = useCallback(() => {\n    setTimeout(() => {\n      try {\n        connectDialogRef.current?.click();\n      } catch (error) {\n        // ignore\n      }\n    }, 150);\n  }, []);\n\n  const connectWalletWithDialog = useCallback(\n    async (options?: { directConnection?: boolean }) => {\n      const wallets = await fetchWallets?.();\n\n      if (wallets?.length === 0) {\n        closeDialog();\n        return;\n      }\n\n      const { directConnection } = options ?? { directConnection: false };\n      if (wallets?.length === 1 || (wallets?.length > 0 && directConnection)) {\n        closeDialog();\n        await connectWallet(wallets[0]);\n      } else {\n        setWallets(wallets);\n      }\n    },\n    [closeDialog, connectWallet, fetchWallets],\n  );\n\n  useEffect(() => {\n    const timeout = setTimeout(async () => {\n      if (autoConnectedRef.current) return;\n\n      console.log('settings.autoConnect', settings.autoConnect);\n      if (settings.autoConnect) {\n        autoConnectedRef.current = true;\n        await connectWalletWithDialog({\n          directConnection: true,\n        });\n      }\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.autoConnect]);\n\n  return (\n    <Card>\n      <CardContent className=\"flex flex-col flex-wrap gap-3\">\n        <div className=\"flex flex-row flex-wrap justify-between\">\n          <Dialog>\n            <DialogTrigger asChild>\n              <Button onClick={() => connectWalletWithDialog()}>Connect Wallet</Button>\n            </DialogTrigger>\n            <DialogContent>\n              <DialogClose ref={connectDialogRef} />\n              <DialogHeader>\n                <DialogTitle>选择钱包开始连接</DialogTitle>\n                {!!wallets &&\n                  wallets.map((wallet) => (\n                    <DialogClose asChild key={wallet.id}>\n                      <Button onClick={() => connectWallet(wallet)} className=\"gap-2\">\n                        {wallet.logo && (\n                          <img\n                            alt={wallet.name}\n                            src={wallet.logo}\n                            className=\"w-5 h-5 rounded-full\"\n                          />\n                        )}\n                        <span className=\"font-medium\">{wallet.name}</span>\n                        {wallet.tags?.map((tag) => (\n                          <span key={tag} className=\"text-xs font-light\">\n                            {tag}\n                          </span>\n                        ))}\n                      </Button>\n                    </DialogClose>\n                  ))}\n                {!wallets ||\n                  (wallets.length === 0 && (\n                    <DialogDescription>\n                      没有钱包可用，请安装 OneKey Extension\n                      <a target=\"_blank\" href={'https://www.onekey.so/download/'}>\n                        Install OneKey Extension →\n                      </a>\n                    </DialogDescription>\n                  ))}\n              </DialogHeader>\n            </DialogContent>\n          </Dialog>\n          {provider && (\n            <Button variant=\"destructive\" onClick={disconnectWallet}>\n              断开链接\n            </Button>\n          )}\n        </div>\n        {account && (\n          <div className=\"flex grid-cols-1 xl:grid-cols-2 flex-wrap gap-x-6 gap-y-3 mt-4\">\n            {Object.keys(account).map((key) => {\n              return (\n                <div key={key}>\n                  <span>{`${accountInfoKeys?.[key] ?? key}`}: </span>\n                  {/* @ts-expect-error */}\n                  <span className=\"font-normal flex flex-wrap text-break\">{`${account?.[key]}`}</span>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[35%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":["__webpack_exports__","Z","dapps","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Card","jsx","CardTitle","className","CardContent","map","dapp","index","div","Link","href","url","legacyBehavior","a","name","InputWithSave","storageKey","onChange","defaultValue","type","inputValue","setInputValue","useState","useEffect","storedValue","localStorage","getItem","debouncedChangeHandler","useCallback","debounce","setItem","value","cancel","Input","event","target","placeholder","cborToAddress","cbor","C","Address","from_bytes","hexToBytes","to_bech32","undefined","TOKENS","ADA","unit","decimals","MIN","Example","walletsRef","useRef","uuid","inject","provider","setAccount","account","useWallet","projectIdRef","walletApi","setWalletApi","lucid","setLucid","onConnectWallet","selectedWallet","chainId","current","providerDetail","find","w","id","Promise","reject","console","log","get","window","toast","title","description","enable","getNetworkId","error","projectId","isEmpty","process","Lucid","new","Blockfrost","selectWallet","address","wallet","toString","onConnectListener","concat","onAccountChangeListener","length","onNetworkChangeListener","network","onAction","experimental","on","offAction","off","Fragment","ApiGroup","p","ConnectButton","fetchWallets","wallets","Object","keys","cardano","filter","includes","key","forEach","push","resolve","onConnect","onDisconnect","ApiPayload","disableRequestContent","onExecute","request","res","JSON","stringify","isEnabled","apiVersion","icon","getUsedAddresses","decode","origin","getUnusedAddresses","getChangeAddress","getRewardAddresses","getBalance","Value","parse","to_json","getUtxos","decodeUtxo","TransactionUnspentOutput","utxo","coreToUtxo","getCollateral","presupposeParams","params","signData","newMessage","sign","onValidate","response","signedMessage","verifyMessage","signedTx","fromTx","complete","generateRequestFrom","label","select","token","option","onGenerateRequest","fromData","toAddress","amount","parseInt","coin","_fromData_coin","toUpperCase","tokenConfig","assets","BigInt","lovelace","tx","newTx","payToAddress","coinSelection","submitTx","DappList","signTx","accountInfoKeys","publicKey","settings","useSettings","connectDialogRef","autoConnectedRef","setWallets","setProvider","connectWallet","_provider","accountInfo","disconnectWallet","closeDialog","setTimeout","click","connectWalletWithDialog","options","directConnection","timeout","autoConnect","clearTimeout","Dialog","DialogTrigger","asChild","Button","onClick","DialogContent","DialogClose","ref","DialogHeader","DialogTitle","logo","img","alt","src","span","tags","tag","DialogDescription","variant","DialogPrimitive","DialogPortal","DialogOverlay","React","props","cn","displayName","children","X"],"sourceRoot":""}